{"version":3,"file":"9958.a4f07edfa6b9d4ae6c3d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n    hasSavedMessages?: boolean;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  isChatWithBot: boolean;\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  handleSendCrypto: NoneToVoidFunction;\n  handleSendCryptoViaLink: NoneToVoidFunction;\n  handleSendNTFViaLink: NoneToVoidFunction;\n  handleSendNFT: NoneToVoidFunction;\n  handleCreatePOAP: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  isChatWithBot,\n  handleSendCrypto,\n  handleSendCryptoViaLink,\n  handleSendNTFViaLink,\n  handleSendNFT,\n  handleCreatePOAP,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {/*\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )} */}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {/**\n           * TL - Add send crypto button to attachments\n           * Description: Only chat 1-1 (except with bot and self) or group has this button\n           */}\n        {!isChatWithBot && Number(chatId) >= 0 && (\n          <MenuItem\n            icon=\"lock\"\n            className=\"margin-left-1px\"\n            customIcon={(\n              <img className=\"icon\" src=\"./wallet_20px.svg\" alt=\"\" />\n            )}\n            onClick={handleSendCrypto}\n          >\n            {lang('Send Crypto')}\n          </MenuItem>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n        {\n          !isChatWithBot && Number(chatId) >= 0 && (\n            <MenuItem\n              icon=\"permissions\"\n              className=\"margin-left-1px\"\n              onClick={handleSendNFT}\n              customIcon={(\n                <img className=\"icon\" src=\"./hexagon.svg\" alt=\"\" width={20} height={20} />\n              )}\n            >\n              {lang('Send NFT')}\n            </MenuItem>\n          )\n        }\n        {\n          !isChatWithBot && (\n            <>\n              <MenuItem\n                icon=\"link\"\n                className=\"margin-left-1px\"\n                onClick={handleSendCryptoViaLink}\n              >\n                {lang('Send Crypto via link')}\n              </MenuItem>\n              <MenuItem\n                icon=\"link\"\n                className=\"margin-left-1px\"\n                onClick={handleSendNTFViaLink}\n              >\n                {lang('Send NFT via link')}\n              </MenuItem>\n            </>\n          )\n        }\n        {/**\n         * TL - Add create POAP button to attachments\n         */}\n        {/* <MenuItem\n          icon=\"message\"\n          className=\"margin-left-1px\"\n          onClick={() => {\n            const currentTheme = selectTheme(getGlobal());\n            handleChangeTheme(currentTheme === 'dark' ? 'light' : 'dark');\n          }}\n        >\n          {lang('Test Send Message')}\n        </MenuItem> */}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nlet interval: any;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    sendDefaultReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  // TL - Send ChatId whenever Chat is Open\n  useEffect(() => {\n    if (chatId) {\n      (window as any)?.onReceivedChatId?.postMessage(JSON.stringify({ chatId, threadId }));\n    }\n  }, [chatId, threadId]);\n\n  useEffect(() => {\n    const clearIntervalFn = () => {\n      clearInterval(interval);\n    };\n    window.addEventListener('cleanup-interval', clearIntervalFn);\n\n    return () => {\n      window.removeEventListener('cleanup-interval', clearIntervalFn);\n    };\n  }, []);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  /**\n   * TL - Send a post message to Timeless Wallet\n   * Description: The data is an object with 2 properties: chatId and threadId\n   */\n  const handleSendCrypto = useCallback(() => {\n    (window as any)?.sendCrypto?.postMessage(JSON.stringify({\n      chatId,\n    }));\n  }, [chatId]);\n\n  const handleGetLastMessageId = useCallback(() => {\n    return getGlobal().chats.byId[chatId].lastMessage?.id;\n  }, [chatId]);\n\n  /**\n   * TL - Send NFT Via Link\n   */\n  const handleSendNTFViaLink = useCallback(() => {\n    (window as any)?.sendNFTViaLink?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  /**\n   * TL - Send NFT\n   */\n  const handleSendNFT = useCallback(() => {\n    (window as any)?.sendNFT?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  /**\n  * TL - Create POAP function\n  */\n  const handleCreatePOAP = useCallback(() => {\n    (window as any)?.createPOAP?.postMessage({\n      chatId,\n    });\n\n    const currentMessageId = handleGetLastMessageId();\n    if (currentMessageId) {\n      interval = setInterval(() => {\n        const messageId = handleGetLastMessageId();\n        if (currentMessageId !== messageId && messageId) {\n          sendDefaultReaction({ chatId, messageId });\n          window.dispatchEvent(new Event('cleanup-interval'));\n        }\n      }, 5000);\n    }\n  }, [chatId, handleGetLastMessageId]);\n\n  /**\n   * TL - Send crypto via link\n   */\n  const handleSendCryptoViaLink = useCallback(() => {\n    (window as any)?.sendCryptoViaLink?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            isChatWithBot={(isChatWithBot || isChatWithSelf) ?? false}\n            handleSendCrypto={handleSendCrypto}\n            handleCreatePOAP={handleCreatePOAP}\n            handleSendNFT={handleSendNFT}\n            handleSendCryptoViaLink={handleSendCryptoViaLink}\n            handleSendNTFViaLink={handleSendNTFViaLink}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\",\"-7s\":\"kFel0ZLm\",\"7S\":\"kFel0ZLm\",\"-14s\":\"C63lwaZj\",\"14S\":\"C63lwaZj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return isViewOnly ? undefined : (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                inactive={isViewOnly}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat && senderChat.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n        'padding-top-56px',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  isSavedDialog?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} isSavedDialog={isSavedDialog} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isSavedDialog }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { handleScrollUnactiveTab } from '../../../util/tlCustomFunction';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  activeChatFolder?: number;\n  allowAbsoluteHeader?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\nconst HEIGHT_HEADER_FIXED = 56;\nlet isScrolling: any;\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  allowAbsoluteHeader = false,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const firstScroll = useRef<any>(true);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n  const isExpandHeader = sessionStorage.getItem('isExpandHeader');\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-null/no-null\n    if (containerRef.current) {\n      setTimeout(() => {\n        if (folderType === 'archived') {\n          containerRef.current?.scrollTo({ top: 0 });\n        }\n      }, 500);\n    }\n  }, [containerRef, isExpandHeader, folderType]);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    getGlobal().isArchivePrevious = true;\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    /**\n     * TL - This function scroll the header whenever the chatList render.\n     */\n    setTimeout(() => {\n      if (containerRef.current && firstScroll.current && allowAbsoluteHeader) {\n        const tlChatFolderEl = document.getElementById('tl-chat-folders');\n        if (tlChatFolderEl) {\n          tlChatFolderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        } else {\n          // eslint-disable-next-line max-len\n          const chatListActiveEl: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active')\n            ?? document.getElementById('custom-id-chat-list-inf-scroll');\n          if (chatListActiveEl) {\n            chatListActiveEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n          }\n        }\n        const leftMainHeaderEl = document.getElementById('left-main-header');\n        if (leftMainHeaderEl) {\n          leftMainHeaderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        }\n        setTimeout(() => {\n          if (containerRef.current) {\n            containerRef.current.scrollTo({ top: HEIGHT_HEADER_FIXED });\n            setTimeout(() => {\n              firstScroll.current = false;\n            }, 200);\n          }\n        }, 0);\n      }\n    }, 0);\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX\n        + (allowAbsoluteHeader ? HEIGHT_HEADER_FIXED : 0);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  /**\n   * TL - Custom functions for chatList scroll\n   * Description: This function is used to trigger the header show or hide with an animation\n   */\n  function handleScroll(event: React.UIEvent<HTMLDivElement, UIEvent>) {\n    /**\n     * This condition is used to expand the header of inactived tab folder. When we interact with first tab.\n     */\n    if (firstScroll.current) {\n      handleScrollUnactiveTab();\n      return;\n    }\n    clearTimeout(isScrolling);\n    const doc = document.documentElement;\n    const scrollTop = event.currentTarget.scrollTop;\n    const scrollPercentRounded = Math.min(\n      100,\n      Math.round((scrollTop / HEIGHT_HEADER_FIXED) * 100),\n    );\n    const opacity = 1 - scrollPercentRounded * 0.01;\n    const opacityOffset = scrollTop >= HEIGHT_HEADER_FIXED + 10 || scrollPercentRounded === 100\n      ? 0\n      : opacity;\n\n    const translatePixel = scrollTop >= HEIGHT_HEADER_FIXED || scrollPercentRounded === 100 ? 0 : Math.min(\n      HEIGHT_HEADER_FIXED,\n      ((100 - scrollPercentRounded) * HEIGHT_HEADER_FIXED) / 100,\n    );\n    const tabFolderTranslatePixel = translatePixel;\n    doc.style.setProperty('--disable-tab-click', 'none');\n    isScrolling = setTimeout(() => {\n      doc.style.setProperty('--disable-tab-click', 'auto');\n    }, 150);\n    sessionStorage.setItem('isExpandHeader', opacityOffset === 1 ? 'true' : 'false');\n    doc.style.setProperty('--header-translate', `-${scrollPercentRounded}%`);\n    doc.style.setProperty(\n      '--tab-folder-translate',\n      `${tabFolderTranslatePixel}px`,\n    );\n    doc.style.setProperty('--show-header-opacity', `${opacityOffset}`);\n  }\n\n  return (\n    <InfiniteScroll\n      id=\"custom-id-chat-list-inf-scroll\"\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight + HEIGHT_HEADER_FIXED}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n      // eslint-disable-next-line react/jsx-no-bind\n      onScroll={handleScroll}\n    >\n      {/* {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )} */}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     openChatInNewTab({ chatId: chat.id, threadId: topicId });\n    //   },\n    // };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isChatChannel, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n      const isFileSticker = newAttachment && isUploadingFileSticker(newAttachment);\n\n      if (canReplace || isFileSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const tooglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    tooglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    tooglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersection}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getActions();\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     if (isSavedDialog) {\n    //       openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n    //     } else {\n    //       openChatInNewTab({ chatId: chat.id });\n    //     }\n    //   },\n    // };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","isSavedDialog","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","Number","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","includes","ChatExtra","isInSettings","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","shouldRenderAllLinks","isPremium","activeUsernames","result","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","idx","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","AttachBotItem","bot","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","customIcon","onContextMenu","shortName","isDisclaimerNeeded","Menu","isOpen","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","isChatWithBot","handleSendCrypto","handleSendCryptoViaLink","handleSendNTFViaLink","handleSendNFT","handleCreatePOAP","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isFile","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleSendLogs","SUPPORTED_AUDIO_CONTENT_TYPES","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","ClosableEmbeddedMessage","isInComposer","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","url","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","interval","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","isInScheduledList","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","sendDefaultReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","onReceivedChatId","postMessage","JSON","stringify","clearIntervalFn","clearInterval","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","sendCrypto","handleGetLastMessageId","lastMessage","sendNFTViaLink","sendNFT","createPOAP","currentMessageId","setInterval","sendCryptoViaLink","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","self","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","Media","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","isGif","withAnimation","clientY","shiftX","shiftY","Keys","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","forceShowSelf","isViewOnly","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","selectChatLastMessage","isVerified","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","random","generateRandomDropPath","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","RESERVED_HOTKEYS","HEIGHT_HEADER_FIXED","isScrolling","canDisplayArchive","sessions","onLeftColumnContentChange","allowAbsoluteHeader","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","firstScroll","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","isExpandHeader","sessionStorage","getItem","CHAT_LIST_SLICE","scrollTo","shouldShowUnconfirmedSessions","sessionsArray","session","isCurrent","dateCreated","FRESH_AUTH_PERIOD","isUnconfirmed","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","isArchivePrevious","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","handleShowStoryRibbon","handleHideStoryRibbon","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","onScroll","handleScrollUnactiveTab","clearTimeout","scrollPercentRounded","opacityOffset","tabFolderTranslatePixel","setItem","viewportOffset","pinnedCount","getPinnedChatsCount","tlChatFolderEl","paddingTop","tlPaddingTop","chatListActiveEl","leftMainHeaderEl","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","isHidden","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","isFileSticker","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","tooglePlaying","stopCurrentAudio","handleTimeUpdate","onTimeUpdate","cx","cy","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","getReactionKey","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","hash","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}