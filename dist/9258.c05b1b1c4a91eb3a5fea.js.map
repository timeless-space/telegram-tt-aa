{"version":3,"file":"9258.c05b1b1c4a91eb3a5fea.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  isChatWithBot: boolean;\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  handleSendCrypto: NoneToVoidFunction;\n  handleSendCryptoViaLink: NoneToVoidFunction;\n  handleSendNTFViaLink: NoneToVoidFunction;\n  handleSendNFT: NoneToVoidFunction;\n  handleCreatePOAP: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  isChatWithBot,\n  handleSendCrypto,\n  handleSendCryptoViaLink,\n  handleSendNTFViaLink,\n  handleSendNFT,\n  handleCreatePOAP,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {/* {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )} */}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {/**\n           * TL - Add send crypto button to attachments\n           * Description: Only chat 1-1 (except with bot and self) or group has this button\n           */}\n        {!isChatWithBot && Number(chatId) >= 0 && (\n          <MenuItem\n            icon=\"lock\"\n            className=\"margin-left-1px\"\n            customIcon={(\n              <img className=\"icon\" src=\"./wallet_20px.svg\" alt=\"\" />\n            )}\n            onClick={handleSendCrypto}\n          >\n            {lang('Send Crypto')}\n          </MenuItem>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n        {\n          !isChatWithBot && Number(chatId) >= 0 && (\n            <MenuItem\n              icon=\"permissions\"\n              className=\"margin-left-1px\"\n              onClick={handleSendNFT}\n              customIcon={(\n                <img className=\"icon\" src=\"./hexagon.svg\" alt=\"\" width={20} height={20} />\n              )}\n            >\n              {lang('Send NFT')}\n            </MenuItem>\n          )\n        }\n        {\n          !isChatWithBot && (\n            <>\n              <MenuItem\n                icon=\"link\"\n                className=\"margin-left-1px\"\n                onClick={handleSendCryptoViaLink}\n              >\n                {lang('Send Crypto via link')}\n              </MenuItem>\n              <MenuItem\n                icon=\"link\"\n                className=\"margin-left-1px\"\n                onClick={handleSendNTFViaLink}\n              >\n                {lang('Send NFT via link')}\n              </MenuItem>\n            </>\n          )\n        }\n        {/**\n         * TL - Add create POAP button to attachments\n         */}\n        {/* <MenuItem\n          icon=\"message\"\n          className=\"margin-left-1px\"\n          onClick={() => {\n            const currentTheme = selectTheme(getGlobal());\n            handleChangeTheme(currentTheme === 'dark' ? 'light' : 'dark');\n          }}\n        >\n          {lang('Test Send Message')}\n        </MenuItem> */}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown],\n    isShown ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(sender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyInfo, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId) {\n      sender = selectSender(global, message!);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nlet interval: any;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    sendDefaultReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  // TL - Send ChatId whenever Chat is Open\n  useEffect(() => {\n    if (chatId) {\n      (window as any)?.onReceivedChatId?.postMessage(JSON.stringify({ chatId, threadId }));\n    }\n  }, [chatId, threadId]);\n\n  useEffect(() => {\n    const clearIntervalFn = () => {\n      clearInterval(interval);\n    };\n    window.addEventListener('cleanup-interval', clearIntervalFn);\n\n    return () => {\n      window.removeEventListener('cleanup-interval', clearIntervalFn);\n    };\n  }, []);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  /**\n   * TL - Send a post message to Timeless Wallet\n   * Description: The data is an object with 2 properties: chatId and threadId\n   */\n  const handleSendCrypto = useCallback(() => {\n    (window as any)?.sendCrypto?.postMessage(JSON.stringify({\n      chatId,\n    }));\n  }, [chatId]);\n\n  const handleGetLastMessageId = useCallback(() => {\n    return getGlobal().chats.byId[chatId].lastMessage?.id;\n  }, [chatId]);\n\n  /**\n   * TL - Send NFT Via Link\n   */\n  const handleSendNTFViaLink = useCallback(() => {\n    (window as any)?.sendNFTViaLink?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  /**\n   * TL - Send NFT\n   */\n  const handleSendNFT = useCallback(() => {\n    (window as any)?.sendNFT?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  /**\n  * TL - Create POAP function\n  */\n  const handleCreatePOAP = useCallback(() => {\n    (window as any)?.createPOAP?.postMessage({\n      chatId,\n    });\n\n    const currentMessageId = handleGetLastMessageId();\n    if (currentMessageId) {\n      interval = setInterval(() => {\n        const messageId = handleGetLastMessageId();\n        if (currentMessageId !== messageId && messageId) {\n          sendDefaultReaction({ chatId, messageId });\n          window.dispatchEvent(new Event('cleanup-interval'));\n        }\n      }, 5000);\n    }\n  }, [chatId, handleGetLastMessageId]);\n\n  /**\n   * TL - Send crypto via link\n   */\n  const handleSendCryptoViaLink = useCallback(() => {\n    (window as any)?.sendCryptoViaLink?.postMessage(JSON.stringify({ chatId, threadId }));\n  }, [chatId, threadId]);\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            isChatWithBot={(isChatWithBot || isChatWithSelf) ?? false}\n            handleSendCrypto={handleSendCrypto}\n            handleCreatePOAP={handleCreatePOAP}\n            handleSendNFT={handleSendNFT}\n            handleSendCryptoViaLink={handleSendCryptoViaLink}\n            handleSendNTFViaLink={handleSendNTFViaLink}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"n_u0sMwb5oen1kZQ0pTB\",\"input\":\"jehrl4eCR56s7i_qnPJr\",\"moreMenu\":\"NCIcjJKDloynKk14TiXg\",\"copy\":\"kiphUJhXSSQktqe2YGV_\",\"title\":\"teihdlkVODIhiAWnOJtr\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ypqi0benYTguShBFVcsL\",\"emoji\":\"nFlcFpLQg_eQdDkZUxVp\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 5, block: 15, opacity: 0.35, scale: 1,\n  },\n  {\n    inline: 10, block: 45, opacity: 0.3, scale: 0.9,\n  },\n  {\n    inline: 20, block: 75, opacity: 0.3, scale: 0.75,\n  },\n  {\n    inline: 40, block: 20, opacity: 0.25, scale: 0.8,\n  },\n  {\n    inline: 60, block: 50, opacity: 0.25, scale: 0.85,\n  },\n  {\n    inline: 55, block: -5, opacity: 0.20, scale: 0.75,\n  },\n  {\n    inline: 80, block: 15, opacity: 0.15, scale: 0.95,\n  },\n  {\n    inline: 100, block: 70, opacity: 0.15, scale: 0.9,\n  },\n  {\n    inline: 120, block: 25, opacity: 0.10, scale: 0.65,\n  },\n  {\n    inline: 140, block: 0, opacity: 0.10, scale: 0.75,\n  },\n];\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {ICON_POSITIONS.map((position) => {\n        const {\n          inline, block, opacity, scale,\n        } = position;\n\n        const style = buildStyle(\n          `inset-inline-end: ${inline}px`,\n          `inset-block-start: ${block}px`,\n          `opacity: ${opacity}`,\n          `transform: scale(${scale})`,\n        );\n\n        return (\n          <CustomEmoji\n            documentId={emojiDocumentId}\n            className={styles.emoji}\n            noPlay\n            style={style}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat?.id === sender?.id;\n\n    return (\n      <>\n        {!isChatSender && <span className=\"embedded-sender\">{renderText(senderTitle)}</span>}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.backgroundEmojiId && (\n        <EmojiIconBackground emojiDocumentId={sender.backgroundEmojiId} className=\"EmbeddedMessage--background-icons\" />\n      )}\n      <div className=\"message-text\">\n        <p className=\"embedded-text-wrapper\">\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  shouldAddPadding: boolean;\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  shouldAddPadding,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n        'padding-top-56px',\n      )}\n      style={shouldAddPadding ? 'z-index: -1' : ''}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { lastMessage } = chat;\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  className?: string;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, className, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={`${styles.root} ${className}`} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { handleScrollUnactiveTab } from '../../../util/tlCustomFunction';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  activeChatFolder?: number;\n  allowAbsoluteHeader?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\nconst HEIGHT_HEADER_FIXED = 56;\nlet isScrolling: any;\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  allowAbsoluteHeader = false,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const firstScroll = useRef<any>(true);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n  const isExpandHeader = sessionStorage.getItem('isExpandHeader');\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-null/no-null\n    if (containerRef.current) {\n      setTimeout(() => {\n        if (folderType === 'archived') {\n          containerRef.current?.scrollTo({ top: 0 });\n        }\n      }, 500);\n    }\n  }, [containerRef, isExpandHeader, folderType]);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    getGlobal().isArchivePrevious = true;\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    /**\n     * TL - This function scroll the header whenever the chatList render.\n     */\n    setTimeout(() => {\n      if (containerRef.current && firstScroll.current && allowAbsoluteHeader) {\n        const tlChatFolderEl = document.getElementById('tl-chat-folders');\n        if (tlChatFolderEl) {\n          tlChatFolderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        } else {\n          // eslint-disable-next-line max-len\n          const chatListActiveEl: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active')\n            ?? document.getElementById('custom-id-chat-list-inf-scroll');\n          if (chatListActiveEl) {\n            chatListActiveEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n          }\n        }\n        const leftMainHeaderEl = document.getElementById('left-main-header');\n        if (leftMainHeaderEl) {\n          leftMainHeaderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        }\n        setTimeout(() => {\n          if (containerRef.current) {\n            containerRef.current.scrollTo({ top: HEIGHT_HEADER_FIXED });\n            setTimeout(() => {\n              firstScroll.current = false;\n            }, 200);\n          }\n        }, 0);\n      }\n    }, 0);\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX\n        + (allowAbsoluteHeader ? HEIGHT_HEADER_FIXED : 0);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  /**\n   * TL - Custom functions for chatList scroll\n   * Description: This function is used to trigger the header show or hide with an animation\n   */\n  function handleScroll(event: React.UIEvent<HTMLDivElement, UIEvent>) {\n    /**\n     * This condition is used to expand the header of inactived tab folder. When we interact with first tab.\n     */\n    if (firstScroll.current) {\n      handleScrollUnactiveTab();\n      return;\n    }\n    clearTimeout(isScrolling);\n    const doc = document.documentElement;\n    const scrollTop = event.currentTarget.scrollTop;\n    const scrollPercentRounded = Math.min(\n      100,\n      Math.round((scrollTop / HEIGHT_HEADER_FIXED) * 100),\n    );\n    const opacity = 1 - scrollPercentRounded * 0.01;\n    const opacityOffset = scrollTop >= HEIGHT_HEADER_FIXED + 10 || scrollPercentRounded === 100\n      ? 0\n      : opacity;\n\n    const translatePixel = scrollTop >= HEIGHT_HEADER_FIXED || scrollPercentRounded === 100 ? 0 : Math.min(\n      HEIGHT_HEADER_FIXED,\n      ((100 - scrollPercentRounded) * HEIGHT_HEADER_FIXED) / 100,\n    );\n    const tabFolderTranslatePixel = translatePixel;\n    doc.style.setProperty('--disable-tab-click', 'none');\n    isScrolling = setTimeout(() => {\n      doc.style.setProperty('--disable-tab-click', 'auto');\n    }, 150);\n    sessionStorage.setItem('isExpandHeader', opacityOffset === 1 ? 'true' : 'false');\n    doc.style.setProperty('--header-translate', `-${scrollPercentRounded}%`);\n    doc.style.setProperty(\n      '--tab-folder-translate',\n      `${tabFolderTranslatePixel}px`,\n    );\n    doc.style.setProperty('--show-header-opacity', `${opacityOffset}`);\n  }\n\n  return (\n    <InfiniteScroll\n      id=\"custom-id-chat-list-inf-scroll\"\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight + HEIGHT_HEADER_FIXED}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n      // eslint-disable-next-line react/jsx-no-bind\n      onScroll={handleScroll}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n          shouldAddPadding={!sessions}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     openChatInNewTab({ chatId: chat.id, threadId: topicId });\n    //   },\n    // };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n\n    if (draft && (!chat?.isForum || (isTopic && !isDraftReplyToTopic))) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && !isGiftCode && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  noUserColors?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = type === 'boost' ? BOOST_OVERVIEW : type === 'message' ? MESSAGE_OVERVIEW : type === 'group'\n    ? GROUP_OVERVIEW : CHANNEL_OVERVIEW;\n\n  return (\n    <div className={buildClassName('StatisticsOverview', className)}>\n      <div className=\"StatisticsOverview__header\">\n        {title && (\n          <div className=\"StatisticsOverview__title\">\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    {cell.withAbsoluteValue && (\n                      <span className=\"StatisticsOverview__table-value\">\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={`StatisticsOverview__table-${cell.withAbsoluteValue ? 'secondary-' : ''}value`}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getActions();\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     openChatInNewTab({ chatId: chat.id });\n    //   },\n    // };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","customIcon","AttachBotIcon","onContextMenu","shortName","isDisclaimerNeeded","Menu","isOpen","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","isChatWithBot","handleSendCrypto","handleSendCryptoViaLink","handleSendNTFViaLink","handleSendNFT","handleCreatePOAP","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","disabled","Number","AttachBotItem","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","EmbeddedMessage","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","interval","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","sendDefaultReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","onReceivedChatId","postMessage","JSON","stringify","clearIntervalFn","clearInterval","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","sendCrypto","handleGetLastMessageId","lastMessage","sendNFTViaLink","sendNFT","createPOAP","currentMessageId","setInterval","sendCryptoViaLink","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","Icon","DropdownMenu","trigger","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","withAnimation","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","fluid","iconElement","titleText","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","ICON_POSITIONS","inline","block","opacity","emojiDocumentId","noPlay","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","quoteText","renderTextWithEntities","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","isChatGroup","isChatSender","renderSender","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","shouldAddPadding","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","isOutgoing","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","HEIGHT_HEADER_FIXED","isScrolling","canDisplayArchive","onLeftColumnContentChange","allowAbsoluteHeader","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","firstScroll","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","isExpandHeader","sessionStorage","getItem","CHAT_LIST_SLICE","scrollTo","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","isArchivePrevious","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","handleShowStoryRibbon","handleHideStoryRibbon","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","onScroll","handleScrollUnactiveTab","clearTimeout","scrollPercentRounded","opacityOffset","tabFolderTranslatePixel","setItem","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","tlChatFolderEl","paddingTop","tlPaddingTop","chatListActiveEl","leftMainHeaderEl","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","isHidden","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","nonInteractive","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}