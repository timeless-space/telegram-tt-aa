{"version":3,"file":"2120.4ee43f2c3c8aa5b5a242.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/Checkbox.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/DropdownMenu.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Menu.tsx","webpack://telegram-t/./src/components/ui/MenuItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Checkbox.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: TeactNode;\n  subLabel?: string;\n  checked: boolean;\n  rightIcon?: IconName;\n  disabled?: boolean;\n  tabIndex?: number;\n  round?: boolean;\n  blocking?: boolean;\n  isLoading?: boolean;\n  withCheckedCallback?: boolean;\n  className?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n};\n\nconst Checkbox: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  subLabel,\n  checked,\n  tabIndex,\n  disabled,\n  round,\n  blocking,\n  isLoading,\n  className,\n  rightIcon,\n  onChange,\n  onCheck,\n  onClickLabel,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onCheck) {\n      onCheck(event.currentTarget.checked);\n    }\n  }, [disabled, onChange, onCheck]);\n\n  function handleClick(event: React.MouseEvent) {\n    if (event.target !== labelRef.current) {\n      onClickLabel?.(event, value);\n    }\n  }\n\n  function handleInputClick(event: React.MouseEvent) {\n    event.stopPropagation();\n  }\n\n  const labelClassName = buildClassName(\n    'Checkbox',\n    disabled && 'disabled',\n    round && 'round',\n    isLoading && 'loading',\n    blocking && 'blocking',\n    className,\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <label\n      className={labelClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={onClickLabel ? handleClick : undefined}\n      ref={labelRef}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        tabIndex={tabIndex}\n        onChange={handleChange}\n        onClick={onClickLabel ? handleInputClick : undefined}\n      />\n      <div className=\"Checkbox-main\">\n        <span className=\"label\" dir=\"auto\">\n          {typeof label === 'string' ? renderText(label) : label}\n          {rightIcon && <i className={`icon icon-${rightIcon} right-icon`} />}\n        </span>\n        {subLabel && <span className=\"subLabel\" dir=\"auto\">{renderText(subLabel)}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Checkbox);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"C9QYXaRLeCEFngOBl4S3\",\"isDragging\":\"vhGsRt79lQzzuXny9KG8\",\"knob\":\"oGgH1RraeCPayQnxA8C_\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport Button from './Button';\nimport Menu from './Menu';\n\nimport './DropdownMenu.scss';\n\ntype OwnProps = {\n  className?: string;\n  trigger?: FC<{ onTrigger: () => void; isOpen?: boolean }>;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  footer?: string;\n  forceOpen?: boolean;\n  onOpen?: NoneToVoidFunction;\n  onClose?: NoneToVoidFunction;\n  onHide?: NoneToVoidFunction;\n  onTransitionEnd?: NoneToVoidFunction;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst DropdownMenu: FC<OwnProps> = ({\n  trigger,\n  className,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  footer,\n  forceOpen,\n  onOpen,\n  onClose,\n  onTransitionEnd,\n  onMouseEnterBackdrop,\n  onHide,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n    if (isOpen) {\n      onClose?.();\n    } else {\n      onOpen?.();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\n    const menu = menuRef.current;\n\n    if (!isOpen || e.keyCode !== 40 || !menu) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(menu.children);\n\n    if (!focusedElement || elementChildren.indexOf(focusedElement) === -1) {\n      (elementChildren[0] as HTMLElement).focus();\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const triggerComponent: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    if (trigger) return trigger;\n\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [trigger]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`DropdownMenu ${className || ''}`}\n      onKeyDown={handleKeyDown}\n      onTransitionEnd={onTransitionEnd}\n    >\n      {triggerComponent({ onTrigger: toggleIsOpen, isOpen })}\n\n      <Menu\n        ref={menuRef}\n        containerRef={dropdownRef}\n        isOpen={isOpen || Boolean(forceOpen)}\n        className={className || ''}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        footer={footer}\n        autoClose\n        onClose={handleClose}\n        shouldSkipTransition={forceOpen}\n        onCloseAnimationEnd={onHide}\n        onMouseEnterBackdrop={onMouseEnterBackdrop}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id?: string;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  id,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      id={id}\n      className={className}\n      onScroll={handleScroll}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          /**\n           * TL - Custom infinite scroll, set auto scroll although is not enough items.\n           */\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`, 'min-height: 100vh')}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    isStatic && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={buildClassName('icon', `icon-${icon}`, iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  type FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../hooks/useVirtualBackdrop';\n\nimport Portal from './Portal';\n\nimport './Menu.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  containerRef?: React.RefObject<HTMLElement>;\n  isOpen: boolean;\n  shouldCloseFast?: boolean;\n  id?: string;\n  className?: string;\n  bubbleClassName?: string;\n  style?: string;\n  bubbleStyle?: string;\n  ariaLabelledBy?: string;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  autoClose?: boolean;\n  shouldSkipTransition?: boolean;\n  footer?: string;\n  noCloseOnBackdrop?: boolean;\n  backdropExcludedSelector?: string;\n  noCompact?: boolean;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onCloseAnimationEnd?: () => void;\n  onClose: () => void;\n  onMouseEnter?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  withPortal?: boolean;\n  children: React.ReactNode;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Menu: FC<OwnProps> = ({\n  ref,\n  containerRef,\n  shouldCloseFast,\n  isOpen,\n  id,\n  className,\n  bubbleClassName,\n  style,\n  bubbleStyle,\n  ariaLabelledBy,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  autoClose = false,\n  footer,\n  noCloseOnBackdrop = false,\n  backdropExcludedSelector,\n  noCompact,\n  onCloseAnimationEnd,\n  onClose,\n  onMouseEnter,\n  onMouseLeave,\n  shouldSkipTransition,\n  withPortal,\n  onMouseEnterBackdrop,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let menuRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    menuRef = ref;\n  }\n  const backdropContainerRef = containerRef || menuRef;\n  const { isTouchScreen } = useAppLayout();\n\n  const {\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen,\n    onCloseAnimationEnd,\n    shouldSkipTransition,\n    undefined,\n    shouldSkipTransition,\n  );\n\n  useEffect(\n    () => (isOpen ? captureEscKeyListener(onClose) : undefined),\n    [isOpen, onClose],\n  );\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    if (isOpen || (!isOpen && prevIsOpen === true)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = useKeyboardListNavigation(menuRef, isOpen, autoClose ? onClose : undefined, undefined, true);\n\n  useVirtualBackdrop(\n    isOpen,\n    backdropContainerRef,\n    noCloseOnBackdrop ? undefined : onClose,\n    undefined,\n    backdropExcludedSelector,\n  );\n\n  const bubbleFullClassName = buildClassName(\n    'bubble menu-container custom-scroll',\n    positionY,\n    positionX,\n    footer && 'with-footer',\n    transitionClassNames,\n    bubbleClassName,\n    shouldCloseFast && 'close-fast',\n    !isOpen && 'hidden',\n  );\n\n  const transformOriginYStyle = transformOriginY !== undefined ? `${transformOriginY}px` : undefined;\n  const transformOriginXStyle = transformOriginX !== undefined ? `${transformOriginX}px` : undefined;\n\n  const menu = (\n    <div\n      id={id}\n      className={buildClassName(\n        'Menu',\n        !noCompact && !isTouchScreen && 'compact',\n        !IS_BACKDROP_BLUR_SUPPORTED && 'no-blur',\n        withPortal && 'in-portal',\n        className,\n      )}\n      style={style}\n      aria-labelledby={ariaLabelledBy}\n      role={ariaLabelledBy ? 'menu' : undefined}\n      onKeyDown={isOpen ? handleKeyDown : undefined}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={isOpen ? onMouseLeave : undefined}\n    >\n      {isOpen && (\n        // This only prevents click events triggering on underlying elements\n        <div\n          className=\"backdrop\"\n          onMouseDown={preventMessageInputBlurWithBubbling}\n          onMouseEnter={onMouseEnterBackdrop}\n        />\n      )}\n      <div\n        role=\"presentation\"\n        ref={menuRef}\n        className={bubbleFullClassName}\n        style={buildStyle(\n          `transform-origin: ${transformOriginXStyle || positionX} ${transformOriginYStyle || positionY}`,\n          bubbleStyle,\n        )}\n        onClick={autoClose ? onClose : undefined}\n      >\n        {children}\n        {/* {footer && <div className=\"footer\">{footer}</div>} */}\n      </div>\n    </div>\n  );\n\n  if (withPortal) {\n    return <Portal>{menu}</Portal>;\n  }\n\n  return menu;\n};\n\nexport default memo(freezeWhenClosed(Menu));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_TEST } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport './MenuItem.scss';\n\nexport type MenuItemProps = {\n  icon?: IconName | 'A' | 'K';\n  isCharIcon?: boolean;\n  customIcon?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n  onClick?: (e: React.SyntheticEvent<HTMLDivElement | HTMLAnchorElement>, arg?: number) => void;\n  clickArg?: number;\n  onContextMenu?: (e: React.UIEvent) => void;\n  href?: string;\n  download?: string;\n  disabled?: boolean;\n  destructive?: boolean;\n  ariaLabel?: string;\n  withWrap?: boolean;\n};\n\nconst MenuItem: FC<MenuItemProps> = (props) => {\n  const {\n    icon,\n    isCharIcon,\n    customIcon,\n    className,\n    children,\n    onClick,\n    href,\n    download,\n    disabled,\n    destructive,\n    ariaLabel,\n    withWrap,\n    onContextMenu,\n    clickArg,\n  } = props;\n\n  const lang = useLang();\n  const { isTouchScreen } = useAppLayout();\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode !== 13 && e.keyCode !== 32) {\n      return;\n    }\n\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const fullClassName = buildClassName(\n    'MenuItem',\n    className,\n    disabled && 'disabled',\n    destructive && 'destructive',\n    !isTouchScreen && 'compact',\n    withWrap && 'wrap',\n  );\n\n  const content = (\n    <>\n      {!customIcon && icon && (\n        <i\n          className={isCharIcon ? 'icon icon-char' : `icon icon-${icon}`}\n          data-char={isCharIcon ? icon : undefined}\n        />\n      )}\n      {customIcon}\n      {children}\n    </>\n  );\n\n  if (href) {\n    return (\n      <a\n        tabIndex={0}\n        className={fullClassName}\n        href={href}\n        download={download}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        target={href.startsWith(window.location.origin) || IS_TEST ? '_self' : '_blank'}\n        rel=\"noopener noreferrer\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n        onClick={onClick}\n      >\n        {content}\n      </a>\n    );\n  }\n\n  return (\n    <div\n      role=\"menuitem\"\n      tabIndex={0}\n      className={fullClassName}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onContextMenu={onContextMenu}\n      aria-label={ariaLabel}\n      title={ariaLabel}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {content}\n    </div>\n  );\n};\n\nexport default MenuItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { CallbackAction } from '../../global/types';\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction | CallbackAction[];\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { DPR } from '../../util/windowEnvironment';\n\nimport { useStateRef } from '../../hooks/useStateRef';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2 * DPR;\nconst STROKE_WIDTH_XL = 3 * DPR;\nconst PADDING = 2 * DPR;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * DPR,\n        size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH,\n        'white',\n        currentProgress,\n        isFirst,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  shouldInit = false,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING;\n  const rotationOffset = (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * rotationOffset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\n/**\n * TL - Add gray color or loading indicator\n */\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow' | 'gray';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container\"\n      >\n        {isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          <i className=\"icon icon-search search-icon\" />\n        )}\n      </Transition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"fb5F16dNcZnOl5zZNuRC\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    const infScroll: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active');\n    if (infScroll) {\n      infScroll.style.overflow = 'hidden';\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-scrollbar ${big ? 'big' : ''}`}\n      id=\"tl-chat-folders\"\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cGThmFXshB6w8ExlA0kL\",\"avatar\":\"HyVeuc9sKEv6jJFz92lA\",\"info\":\"lHrkJYqVcUTeepG2jfbJ\",\"title\":\"sJbQIvfO72tkHOvvL1rY\",\"subtitle\":\"uGzVaR1fBuI5yau94yqW\",\"animated\":\"uC5y_wHJ6TqMh9SvnMrr\",\"slide\":\"iabVTeOHBiadfC2HWDDY\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","_ref","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","src","draggable","alt","CropModal","file","onClose","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","id","name","label","subLabel","checked","round","blocking","isLoading","rightIcon","onCheck","onClickLabel","lang","useLang","labelRef","useRef","handleChange","currentTarget","dir","isRtl","onClick","current","ref","stopPropagation","renderText","Spinner","options","selected","loadingOptions","values","setValues","newValues","filter","v","map","option","Checkbox","indexOf","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","onKeyDown","Button","isText","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","ariaLabel","ZERO_POINT","x","y","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","preventDefault","getClientCoordinate","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","trigger","transformOriginX","transformOriginY","positionX","positionY","footer","forceOpen","onOpen","onTransitionEnd","onMouseEnterBackdrop","onHide","menuRef","dropdownRef","setIsOpen","handleClose","triggerComponent","_ref2","onTrigger","isMenuOpen","menu","keyCode","focusedElement","activeElement","elementChildren","Array","from","focus","toggleIsOpen","Menu","autoClose","shouldSkipTransition","isShown","buttonClassName","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","Backwards","Forwards","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","newScrollTop","listItemElements","querySelectorAll","currentAnchor","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","useLastCallback","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","buttonRef","icon","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","RippleEffect","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","freezeWhenClosed","shouldCloseFast","bubbleStyle","ariaLabelledBy","noCloseOnBackdrop","backdropExcludedSelector","noCompact","onMouseEnter","onMouseLeave","backdropContainerRef","isTouchScreen","useAppLayout","transitionClassNames","useShowTransition","captureEscKeyListener","useHistoryBack","isActive","onBack","shouldBeReplaced","useEffectWithPrevDeps","prevIsOpen","dispatchHeavyAnimationEvent","useVirtualBackdrop","bubbleFullClassName","transformOriginYStyle","transformOriginXStyle","IS_BACKDROP_BLUR_SUPPORTED","preventMessageInputBlurWithBubbling","Portal","props","isCharIcon","customIcon","download","withWrap","content","Fragment","startsWith","location","IS_TEST","rel","dialogRef","contentClassName","isSlim","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useLayoutEffectWithPrevDeps","body","classList","toggle","remove","DEFAULT_DURATION","message","duration","containerId","onDismiss","actionText","actions","getActions","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","isArray","forEach","cb","payload","clearTimeout","handleMouseEnter","handleMouseLeave","elementRef","element","add","appendChild","TeactDOM","render","removeChild","SIZES","s","m","l","xl","STROKE_WIDTH","DPR","STROKE_WIDTH_XL","PADDING","MIN_PROGRESS","progress","square","transparent","noCross","canvasRef","progressRef","useStateRef","growStartedAt","prevProgress","isFirst","growFrom","animate","Math","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","rotationOffset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","hidden","loadingOption","Radio","step","bold","renderValue","Number","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","onActivate","buttonProps","isMouseInside","_extends","parentContainerClassName","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","Transition","shouldCleanup","activeKey","backgroundColor","hasArrow","labelText","htmlFor","openSystemFilesDialog","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","noAnimation","classNames","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","infScroll","overflow","SCROLL_DURATION","IS_IOS","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","ALL_FOLDER_ID","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","textarea","previousSelectionEnd","selectionEnd","replace","langKey","endsAt","onEnd","forceUpdate","useForceUpdate","serverTime","getServerTime","useInterval","timeLeft","formattedTime","formatMediaDuration","PlaceholderChatInfo","styles","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}