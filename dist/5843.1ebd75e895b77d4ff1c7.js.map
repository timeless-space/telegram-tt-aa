{"version":3,"file":"5843.1ebd75e895b77d4ff1c7.js","mappings":"yOA+BA,MA+FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEC,GAAQD,EACjB,MAAME,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBN,EAAQE,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,IAAeR,GAAQS,YAAcT,EAAOU,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbenB,EA7FgCoB,IAM9C,IAN+C,OACnDjB,EAAM,SACNK,EAAQ,UACRa,EAAS,UACTf,EAAS,gBACTgB,GACDF,EACC,MAAM,8BACJG,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAIC,IAAA,IAAC,GAAE7B,GAAI6B,EAAA,OAAKV,EAAUnB,IAAOuB,EAAUvB,EAAG,IAC9C8B,OAAO7B,QAAQ,GACjB,CAACe,KAEJe,EAAAA,EAAAA,KAAU,KACR,GAAKvC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,IAGP,KACLtB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,GACZ,CACH,GACA,CAACxC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAM,aACJuB,EAAY,qBACZC,IACEC,EAAAA,EAAAA,GAAkBlC,QAAQT,GAAaE,IAErC0C,GAA4BC,EAAAA,EAAAA,GAAiB7C,GAAWU,mBAAmB,GAC3EoC,GAA+BD,EAAAA,EAAAA,GAAiBpB,GAAqB,GAE3E,GAAKgB,EAEL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,mBACAjC,GAAmB,oBACnBD,EACA2B,GAEFQ,QAAS5B,GAETyB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,uBAC9B2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBK,EAAK,eAAgBwB,QAAAA,EAA6B,EAAG,OAEvFG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACZ+B,GAA8BV,KAAKe,GAClCJ,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKF,EAAK3C,GACV2C,KAAMA,OAIZJ,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACC,OAAK,EAACxC,UAAU,QACrBK,EAAK,iBAEJ,I,yGCzHV,MCqEA,EApDsCN,IAGhC,IAHiC,KACrC0C,EAAI,UACJzC,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPoC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,EAAeC,IAAmBC,EAAAA,EAAAA,IAAQ,GAExDC,GAAgBC,EAAAA,EAAAA,KAA0BpC,EAAAA,EAAAA,OAE1CqC,GAAcvC,EAAAA,EAAAA,KAAQ,KAC1B,IAAKqC,EACH,OAAOP,EAET,IAAKG,EACH,OAAOF,EAAYS,SAAWV,EAGhC,MAAMW,EAAWV,EAAYS,QAEvBE,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAKc,OAAQD,IAC3BF,GAAYX,EAAKa,KAAOF,EAASE,GACnCD,EAASG,KACPxB,EAAAA,GAAAC,cAAA,OAAKjC,UD1CiG,wBC2CpGgC,EAAAA,GAAAC,cAAA,OAAKjC,UD3CkI,wBC2CpGyC,EAAKa,IACxCtB,EAAAA,GAAAC,cAAA,OAAKjC,UD5C+M,uBC4C/KyD,eAAgBX,GAAkBM,EAASE,IAChFtB,EAAAA,GAAAC,cAAA,OAAKjC,UD7CqX,uBC6CrVyD,eAAgBX,GAAkBL,EAAKa,MAIhFD,EAASG,KAAKxB,EAAAA,GAAAC,cAAA,YAAOQ,EAAKa,KAM9B,OAFAZ,EAAYS,QAAUV,EAEfY,CAAQ,GACd,CAACL,EAAeJ,EAAaH,IAMhC,OAJAjB,EAAAA,EAAAA,KAAU,KACRqB,GAAe,GACd,CAACJ,IAGFT,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GD/DE,uBC+D0BlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAChF0D,EACI,C,gUCzBX,SAAexE,EAAAA,EAAAA,KAzBf,SAAiCkF,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,GAAY,UAASA,EAAQpE,KAC9C4E,GAAiBC,EAAAA,EAAAA,GACrBT,GAAUU,EAAAA,EAAAA,IAAsBV,EAAQpE,SAAMD,EAC9CsE,IAAWC,EACXS,EAAAA,GAAeC,SAEXC,GAASJ,EAAAA,EAAAA,GAASF,EAAgBN,GAExC,OACE9B,EAAAA,GAAAC,cAAC0C,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYR,EACZJ,aAAcA,GAEVD,GAGV,G,oHCtCA,QAAwD,uB,oOCkBxD,MAAMc,EAAoB,IAAIC,IAyC9B,GAAerG,EAAAA,EAAAA,KAvCf,SAAiCkF,GAC/B,MAAM,WACJiB,EAAU,aAAEZ,EAAY,UAAEjE,KAAcgE,GACtCJ,GAEGoB,EAAiBC,IAAqBlC,EAAAA,EAAAA,GAAQrD,QAAQuE,IAAiBa,EAAkBI,IAAIL,IAC9FlD,GAAuBwD,EAAAA,EAAAA,GAAmBH,IACzCI,EAAkBC,IAAsBtC,EAAAA,EAAAA,IAAQ,GAEjDuC,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCN,IACAH,EAAkBU,IAAIX,EAAW,KAG7B,KAAEY,GAAS7B,EAEjB,OACE5B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EDtCT,uBCsCiC2B,GAClD+D,OAAOC,EAAAA,EAAAA,QAAoBnG,IAATiG,GAAuB,UAASA,gBAAmBA,SAEpExB,IAAiBmB,GAEhBpD,EAAAA,GAAAC,cAAA,OAAK2D,IAAK3B,EAAcjE,UAAW6F,IAEpChB,IAAeO,GAEdpD,EAAAA,GAAAC,cAAA,OACE2D,IAAKf,EACL7E,UAAW6F,EACXC,OAAQR,IAIZtD,EAAAA,GAAAC,cAAC8D,EAAAA,EAAYnB,EAAA,GAAKZ,EAAU,CAAE8B,OAAQT,EAAoBW,cAAY,KAG5E,G,sRCYO,MAAMC,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBAihBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACExE,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACVyG,IAAKD,GAEJD,EAAelF,KAAIC,IAAA,IAAC,MAAEoF,EAAK,IAAEC,GAAKrF,EAAA,OACjCU,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACV0F,MAAQ,SAAgB,IAARgB,cAAwB,IAAY,IAANC,MAC9C,IAEJ3E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,0BACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,+BACV0F,MAAQ,yBAAuC,IAAfY,SAGpCtE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,uBACV0F,MAAQ,yBAAuC,IAAfY,SAK1C,CAEA,SAAe5H,EAAAA,EAAAA,KA5iBaqB,IAuBtB,IAvBuB,MAC3B6G,EAAK,QACLC,EAAO,YACPC,EAAW,eACXC,EAAc,OACdC,EAAM,KACNC,EAAI,UACJC,EAAS,UACTlH,EAAS,aACTmH,EAAY,WACZC,EAAU,cACVC,EAAa,eACbC,EAAc,sBACdC,EAAqB,cACrBC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,cACXC,EAAa,oBACbC,EAAmB,OACnBC,EAAM,YACNC,EAAW,eACXC,EAAc,YACdC,GACDjI,EACC,MAAM,2BAAEkI,EAA0B,qBAAEC,EAAoB,gBAAEC,IAAoB/H,EAAAA,EAAAA,OAEtEgI,SAAS,MAAEC,EAAK,MAAEC,EAAK,MAAEC,GAAO,cAAEC,IAAkB3B,EACtD4B,GAAU/I,QAAQ4I,GAASC,GAC3BG,IAAY/F,EAAAA,EAAAA,KAAgB,GAE5B6D,IAAY7D,EAAAA,EAAAA,IAAuB,MACnCtC,IAAOC,EAAAA,EAAAA,MACP,MAAEqD,IAAUtD,IAEZ,SAAEsI,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KAtCL,EAuCRI,IAAYC,EAAAA,EAAAA,IAAoBrC,EAAS,aACzCsC,IAAe7E,EAAAA,EAAAA,GAAS2E,IAAW,EAAOzE,EAAAA,GAAeC,SAEzD2E,IAAY9E,EAAAA,EAAAA,IAChB4E,EAAAA,EAAAA,IAAoBrC,EAAS,WAC5BmC,IACDK,EAAAA,EAAAA,IAAsBxC,EAAS,YAGzByC,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCN,EAAAA,EAAAA,IAAoBrC,EAAS,aAC5BQ,GACDgC,EAAAA,EAAAA,IAAsBxC,EAAS,aAG3B4C,IAAkBlE,EAAAA,EAAAA,IAAgB,KACtCuD,IAAe,GACfjB,EAAOhB,EAAQpH,GAAIoH,EAAQ/H,OAAO,IAG9B4K,IAAoBnE,EAAAA,EAAAA,IAAgB,KACxCuD,IAAe,EAAM,KAGjB,WACJa,GAAU,eAAEpD,GAAc,kBAAEqD,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,MAEE,UACJC,GAAS,aAAEzD,GAAY,UAAE0D,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYvD,IACZwD,EAAAA,EAAAA,IAAiBxD,GACjB4B,GAAU,QAAU,QACpBW,GACAQ,QACApK,EACAqK,GACAhB,GACAY,GACAC,IACAY,EAAAA,EAAAA,IAAezD,IAGX0D,IAAQC,EAAAA,EAAAA,IAAa3D,GACrB4D,GAoYR,SACE7D,EACA0B,GAKA,IAJAhC,EAAYoE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,EACfH,EAAKG,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACLC,EAAUD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACV/B,EAAQ+B,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAGR,MAAME,GAAYjI,EAAAA,EAAAA,IAA0B,OAEpCkI,KAAMC,EAAM,KAAEC,IAASpK,EAAAA,EAAAA,KAAQ,KACrC,IAAK2H,EACH,OAGF,MAAM,SAAE0C,EAAQ,SAAEd,GAAa5B,EAC/B,IAAK0C,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAIjB,EC/iBQ,KD+iB8BkB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAhKxB,SAAiC3C,EAAoBgC,GACnD,MAAO,CACLU,WAAY1C,EAAY1C,EAAsBsF,QAAU,GAAK,GAAM,GACnED,WAAY3C,EACP1C,EAAsBsF,QACrB,GACCZ,GAAcvE,EAAkCmF,QAAU,GAAK,GAClE,GAER,CAuJuCC,CAAwB7C,EAAUgC,GAC/Dc,EAAiBP,KAAKC,IAAIjB,EAnfT,GAmfwC,GACzDwB,EAAcR,KAAK1I,MAAM6I,GAAcC,EAAaD,GAAcI,GAGxE,OE7hBG,SAA0BZ,EAAgBc,GAC/C,IAAIZ,EAAO,EACX,MAAMa,EAAU,IAAIX,MAAMU,GACpBE,EAAehB,EAAKtH,OAASoI,EAC7BG,EAAajB,EAAK,GAClBkB,EAAclB,EAAKA,EAAKtH,OAAS,GACvC,IAAK,IAAID,EAAI,EAAGA,EAAIqI,EAAUrI,IAAK,KAAA0I,EAAAC,EAAAC,EACjC,MAAMC,EAAMjB,KAAKkB,MAAM9I,EAAIuI,GACrBQ,IAAqB,QAAdL,EAACnB,EAAKsB,EAAM,UAAE,IAAAH,EAAAA,EAAIF,IAAwB,QAAdG,EAAKpB,EAAKsB,UAAI,IAAAF,EAAAA,EAAIH,IAA4B,QAAjBI,EAAIrB,EAAKsB,EAAM,UAAE,IAAAD,EAAAA,EAAIH,IAAgB,EAC3GH,EAAQtI,GAAK+I,EACTtB,EAAOsB,IACTtB,EAAOsB,EAEX,CACA,MAAO,CAAExB,KAAMe,EAASb,OAC1B,CF8gBWuB,CE5jBJ,SAAwBC,GAC7B,MAAMC,EAAiC,EAArBD,EAAYhJ,OACxBkJ,EAAcvB,KAAKkB,MAAMI,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAMC,EAASzB,MAAMwB,GACfE,EAAWJ,EACjB,IAAK,IAAIjJ,EAAI,EAAGsJ,EAAIH,EAAc,EAAGnJ,IAAMsJ,IAAKtJ,EAAG,CACjD,MAAMuJ,EAAY3B,KAAKkB,MAAW,EAAJ9I,EAAS,GACjCwJ,EAAW5B,KAAKkB,MAAW,EAAJ9I,EAAS,GAChCyJ,EAAQJ,EAASE,IAAcF,EAASE,EAAY,IAAM,GAChEH,EAAOpJ,GAAOyJ,GAASD,EAAY,EACrC,CACA,MAAME,EAAgB9B,KAAKkB,MAA2B,GAAnBK,EAAc,GAAU,GACrDQ,EAAe/B,KAAKkB,MAA2B,GAAnBK,EAAc,GAAU,GACpDS,EAAYP,EAASK,IAAkBL,EAASK,EAAgB,IAAM,GAG5E,OAFAN,EAAOD,EAAc,GAAMS,GAAaD,EAAgB,GAEjDP,CACT,CF6hB4BS,CAAe,IAAIC,WAAWpC,IAEbU,EAAY,GACpD,CAAC/C,EAAUL,EAAOqC,KAAgB,CAAC,EAqBtC,OAnBA0C,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAS1C,EAAUzH,QAEpBmK,GAAWxC,QAAmBtL,IAATuL,GCzjBvB,SACLuC,EACAxC,EACAyC,EAAgBxN,GAIhB,IAHA,KACEgL,EAAI,UAAEyC,EAAS,kBAAEC,GACF1N,EAEjB,MAAM2N,EAZW,EAYH5C,EAAOvH,OAGrB+J,EAAOI,MAAgB,EAARA,EACfJ,EAAOK,OAASA,GAChBL,EAAO5H,MAAMgI,MAAS,GAAEA,MACxBJ,EAAO5H,MAAMiI,OAAU,OAEvB,MAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEbhD,EAAOiD,SAAQ,CAACC,EAAM1K,KACpBsK,EAAIK,YAAe3K,EAAIwH,EAAOvH,QAAUgK,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAWjK,EAAIwH,EAAOvH,OAASkK,EAAoBD,EACnE,MAAMU,EAAchD,KAAKiD,IAAI,EAAaH,EAAO9C,KAAKiD,IAAI,EAAGpD,GAxBlD,KA8Bf,SACE6C,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GANhBC,EAQxD,EAAID,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOL,EAAIE,EAAQD,GACvBT,EAAIc,MAAMN,EAjB0DG,EAiB/CF,EAAGD,EAjB4CG,EAiBjCF,EAAIV,EAAQW,GAC/CV,EAAIc,MAAMN,EAlB0DG,EAkB/CF,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIc,MAAMN,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIc,MAAMN,EAAGC,EAAGD,EApBoDG,EAoBzCF,EAAGC,GAC9BV,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BOtK,GAzBX,GAyBqC4K,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIxC,MAAM,GAEd,CDwiBIyD,CAAevB,EAAQxC,EAAQxE,EAAc,CAC3CyE,OACAyC,UAAWjD,EANkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAQ/C6G,kBAAmBlD,EALkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAOvD,GACD,CAAC2D,EAAOQ,EAAMzE,EAAcwE,EAAQlE,IAEhCgE,CACT,CAxb4BkE,CACxBlI,EAAO0B,EAAQE,KAAkB+B,GAAS,EAAIjE,GAAciE,IAAQrD,EAAWyB,IAG3EoG,GAAehF,IAAczD,GAAe,GAAKA,GAAe,GAEtE9E,EAAAA,EAAAA,KAAU,KACRsH,GAAeiB,GAAU,GACxB,CAACA,KAEJ,MAAMiF,GAAsBnG,KAAgBc,IAEtC,YACJsF,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFvI,EACAE,GAAkBwC,GAClByF,IAAuB3H,IAIvB3F,aAAc2N,GACd1N,qBAAsB2N,KACpB1N,EAAAA,EAAAA,GAAkBsN,IAEhBK,GAAoBF,KAAwBL,IAAuBC,IAEnEO,IAAoBjK,EAAAA,EAAAA,IAAgB,KACpC0J,GACFlH,OAIGgC,IACHlC,EAAOhB,EAAQpH,GAAIoH,EAAQ/H,SAG7BsB,EAAAA,EAAAA,MAAaqP,qBAAqB,CAAEzI,WACpC8B,IAAgBD,IAChBmB,KAAW,KAGbxI,EAAAA,EAAAA,KAAU,KACJsG,GAAeU,KAAkBuB,IAAa1C,IAChDS,GACF,GACC,CAACiC,GAAWvB,GAAeV,EAAaT,IAE3C,MAAMqI,IAAsBnK,EAAAA,EAAAA,IAAgB,KACtC8B,EACFY,EAA2B,CAAEpB,YAE7BqB,EAAqB,CAAErB,WACzB,IAGI8I,IAAapK,EAAAA,EAAAA,IAAiBqK,IAClC,GAAIlH,GAAUvF,SAAWqD,GAAUrD,QAAS,CAC1C,MAAM,MAAEuK,EAAK,KAAEmC,GAASrJ,GAAUrD,QAAQ2M,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEFjG,GAAeiB,KAAKiD,IAAIjD,KAAKC,IAAIjB,KAAa6F,EAAUF,GAAQnC,GAAQxD,GAAW,IAAM,MAC3F,KAGIiG,IAAkB5K,EAAAA,EAAAA,IAAiBqK,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC1H,GAAUvF,SAAU,EACpBwM,GAAWC,GAAE,IAGTS,IAAiB9K,EAAAA,EAAAA,IAAgB,KACrCmD,GAAUvF,SAAU,CAAK,IAGrBmN,IAAkB/K,EAAAA,EAAAA,IAAgB,KACtCyC,EAAanB,EAAQpH,GAAIoH,EAAQ/H,OAAO,IAGpCyR,IAAmBhL,EAAAA,EAAAA,IAAgB,KACvC4C,EAAgB,CAAErJ,OAAQ+H,EAAQ/H,OAAQ0R,UAAW3J,EAAQpH,IAAK,IAapE,SAASgR,KACP,GAAIhI,GACF,OAAO3B,GAAe,QAGxB,MAAM,MAAE4J,EAAK,SAAEC,GAAatI,EAE5B,OAAOqI,GAASC,CAClB,EAlBAnP,EAAAA,EAAAA,KAAU,KACR,GAAKgF,GAAUrD,SAAY4L,GAC3B,OAAO6B,EAAAA,EAAAA,IAAcpK,GAAUrD,QAAS,CACtC0N,UAAWV,GACXW,UAAWT,GACXlO,QAASkO,GACTU,OAAQpB,IACR,GACD,CAACZ,GAAcoB,GAAiBR,GAAYU,KAkC/C,MAAMW,IAAgB9O,EAAAA,EAAAA,GACpB,QACAlC,EACAgH,IAAWiK,EAAAA,GAAYC,QAAU,SACjC3G,IAASvD,IAAWiK,EAAAA,GAAYC,QAAU,OACzClK,IAAWiK,EAAAA,GAAYE,QAAUnK,IAAWiK,EAAAA,GAAYG,cAAgB,SACzEhK,GAAc,qBAGViK,GAAmB,CAAC,eACtB9B,GACF8B,GAAiB7N,KAAK,WAEtB6N,GAAiB7N,KAAKuG,GAAY,QAAU,QAG9C,MAAMuH,IAAmBpP,EAAAA,EAAAA,GAAe,UAAW6M,IAAgB,iBAEnE,SAASwC,KACP,OACEvP,EAAAA,GAAAC,cAAA,OAAKjC,UAAWsR,IACdtP,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAOgN,MAAOD,OAAoBe,EAAAA,EAAAA,GAAWf,OAEtEzO,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACZN,QAAQuH,IACPjF,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CACHzR,UAAU,OACVmC,QAASmO,KAERoB,EAAAA,EAAAA,IAAoBrR,GAAa,IAAP4G,MAMlC8H,IACC/M,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqB0D,IAAKC,GAAQ,WAAQnE,GACvDwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,QAC1C4C,GAAe,GAAM,IAAEqL,EAAAA,EAAAA,IAAoBzH,GAAW5D,GAAc4D,OAEtE7D,EAAeC,GAAcC,GAAgBC,MAGhDuI,IAlER,WACE,GAAItG,GACF,OACEzG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCmS,EAAAA,EAAAA,KAAqBrJ,GAASC,GAAQ2B,WAK7C,MAAM,UAAE0H,GAAcvJ,EAEtB,OACErG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCmS,EAAAA,EAAAA,IAAoBzH,IACrBlI,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACxB4R,GAAa5P,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY0Q,MAAOkB,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAa9K,GAAe9E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACrD8G,GAAe9E,EAAAA,GAAAC,cAAA,QAAMyO,MAAO5J,IAAc0K,EAAAA,EAAAA,GAAW1K,IAG5D,CA8CwB+K,GAGxB,CAEA,OACE7P,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgR,GAAetN,IAAKrD,GAAKsD,MAAQ,MAAQ,OACtDwD,GACCnF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZoH,GAAcpF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLsP,QAASnJ,GACTlD,KAAK,UACLsM,MAAO5I,GAAe,oBAAsB,UAC5CnJ,UAAWqR,GAAiBW,KAAK,KACjCC,UAAWlI,GAAY,cAAgB,aACvC5H,QAASqN,GACT7L,MAAOtD,GAAKsD,MACZuO,gBAAiB/I,IAEjBnH,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAEdqP,IACCrN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBoN,GAAmBC,IAAqB,gBACtFvN,EAAAA,GAAAC,cAACkQ,EAAAA,EAAe,CACd5E,SAAU4B,GACViD,aAAW,EACX3M,KAAK,IACLtD,QAASoN,GAAoBC,QAAoBhQ,EACjD6S,SAAU9C,MAIflH,GAASX,IAAgBuH,IACxBjN,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLiD,KAAK,OACLzF,UAAU,kBACViS,UAAW5K,EAAgB,kBAAoB,WAC/ClF,QAASuN,IAET1N,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQmF,EAAgB,aAAe,sBAGvEL,IAAWiK,EAAAA,GAAYE,QAAUI,KACjCvK,IAAWiK,EAAAA,GAAYE,QAAU9I,GA4CxC,SACEhI,EACAgI,EACA6B,EACAH,EACAzD,EACAC,EACAC,EACA8L,EACArL,EACAsG,EACA+C,GAEA,MAAM,MACJI,EAAK,UAAEkB,EAAS,SAAEjB,GAChBtI,EACEkK,EAAexI,GAAczD,EAAe,GAAKA,EAAe,GAChE,MAAE3C,GAAUtD,EAElB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAOgN,MAAOA,IAAQc,EAAAA,EAAAA,GAAWd,GAASC,IAClE4B,GACCvQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,SAC1CiO,EAAAA,EAAAA,IAAoBzH,EAAW5D,EAAc4D,IAE/C7D,EAAeC,EAAcC,EAAgBC,KAGhD+L,GAAgBD,GAChBtQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACxC+N,EAAY,IAAEiF,EAAAA,EAAAA,IAAkBnK,EAAO5C,KAAO8H,aAAiB/N,GAAWgT,EAAAA,EAAAA,IAAkBnK,EAAO5C,QAGtG8M,IAAiBD,GACjBtQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,SAAQiO,EAAAA,EAAAA,IAAoBzH,IAC1D0H,GACC5P,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY0D,IAAI,OAAOgN,MAAOkB,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxElS,QAAQuH,IACPjF,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CAACzR,UAAU,OAAOmC,QAASmO,IAC7BoC,EAAAA,EAAAA,IAAoBrS,EAAa,IAAP4G,GAAa,MAQxD,CApGiD0L,CACzCtS,GACAgI,EACA6B,GACAH,GACAzD,GACAC,GACAC,GACCa,GAAiB4H,GAClBhI,EACAkI,GACAnH,EAAcsI,QAAkB9Q,GAEjCwH,IAAWiK,EAAAA,GAAYG,cAAgB9I,GAASC,IAAUgJ,KAC1DvK,IAAWiK,EAAAA,GAAYC,QAAU5I,GAwFxC,SACEA,EACA9B,EACAiE,EACAnE,EACAkC,EACAlB,EACAC,EACAC,EACAC,EACAmL,EACAhL,GAEA,OACE5F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACV6S,WAAW,EACXpM,IAAKD,GAELxE,EAAAA,GAAAC,cAAA,UAAQwE,IAAKgE,KAEdmI,GAEC5Q,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACJ,QAASA,MACVqF,GAAiBC,IAAyBG,EAC7CA,GAAqBL,GACXD,GACVsL,GACF,GAGA5Q,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,kBACA,OACCsF,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GACCtF,EAAAA,GAAAC,cAAA,OAAK6Q,QAAQ,YAAY9S,UAAU,eACjCgC,EAAAA,GAAAC,cAAA,QACEjC,UAAU,eACVoL,KAAK,cACLsC,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBoF,GAAG,IACHC,GAAG,IACHC,OAAO,sBACP,oBAAkB,IAClB,mBAAiB,aAO7BjR,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBsG,GAAiB,UAAW9E,IAAI,QAC3D,IAAjB4C,GAAqBqL,EAAAA,EAAAA,IAAoBrJ,EAAM4B,WAAYyH,EAAAA,EAAAA,IAAoBrJ,EAAM4B,SAAW5D,IAIzG,CAxJQ4M,CACE5K,EACA9B,GACAiE,GACAnE,GACAkC,GACAlB,EACAC,EACAC,EACAC,EACAE,EAAgB4I,QAAmB/Q,EACnCoI,GAGA,G,mFGrZV,SAAgB,KAAO,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,oBAAoB,uBAAuB,gBAAkB,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,OAAS,wBCmC1nB,GAAelJ,EAAAA,EAAAA,KAjBkBqB,IAI3B,IAJ4B,MAChCoT,EAAK,KACL1N,EAAI,UACJzF,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EAAW6F,EAAOuN,KAAMvN,EAAQ,QAAOJ,MACjE/B,IAAKrD,EAAKsD,MAAQ,MAAQ,OAEzBwP,GAAO9R,KAAKe,GAASJ,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CAACoD,KAAMA,EAAMrD,KAAMA,EAAMpC,UAAW6F,EAAOwN,WACpE,G,yMC2BV,MAAMC,GAAeC,EAAAA,EAAAA,KAAUC,GAAOA,KAAM,KAAK,GAyMjD,GAAe9U,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAAmC,IAAjC,aAAE4U,GAAc5U,EACvB,MAAQ6U,aAAeC,WAAYC,IAAoBhV,EAEjDG,EAAO0U,GAAezU,EAAAA,EAAAA,IAAWJ,EAAQ6U,QAAgBjU,EACzDqU,GAAOC,EAAAA,EAAAA,IAASL,IAAgBM,EAAAA,EAAAA,IAAWnV,EAAQ6U,QAAgBjU,EACnEwU,EAAUjV,GAAMiV,QAChBC,EAAUlV,IAAQmV,EAAAA,EAAAA,IAAkBnV,GAAMoV,EAAAA,EAAAA,IAAqBvV,IAASwV,EAAAA,EAAAA,IAAuBxV,KAC/F,SAAEyV,IAAaC,EAAAA,EAAAA,IAAyB1V,IAAW,CAAC,EACpD2V,EAAUP,EAAUK,OAAW7U,EAC/BgV,EAAiBzV,GAAO0V,EAAAA,EAAAA,IAAmB7V,EAAQG,EAAKU,KAAKiV,gBAAalV,EAChF,IAAImV,EAAcd,GAAOe,EAAAA,EAAAA,IAAmBhW,EAAQiV,EAAKpU,KAAKoV,SAAMrV,EAUpE,OATKmV,GAAe5V,IAClB4V,GAAcF,EAAAA,EAAAA,IAAmB7V,EAAQG,EAAKU,KAAKqV,OAQ9C,CACLlB,gBACA7U,OACA8U,OACAkB,eATqBhW,IAAS8U,MAC5BmB,EAAAA,EAAAA,IAAcjW,MAAUkW,EAAAA,EAAAA,IAAkBlW,EAAM,iBAC/CmW,EAAAA,EAAAA,IAAiBnW,EAAM,gBAQ1BkV,UACAM,UACAC,iBACAG,cACD,GA9BehW,EAvMyBoB,IAUvC,IAVwC,KAC5C8T,EAAI,KACJ9U,EAAI,cACJoW,EAAa,eACbJ,EAAc,QACdd,EAAO,cACPL,EAAa,QACbW,EAAO,YACPI,EAAW,eACXH,GACDzU,EACC,MAAM,aACJqV,EAAY,iBACZC,EAAgB,qBAChBC,EAAoB,sBACpBC,IACEnV,EAAAA,EAAAA,OAGFX,GAAI+V,EAAM,UACVC,EAAS,YACTC,EAAW,OACXC,GACE9B,GAAQ,CAAC,GACLpU,GAAIX,EAAQ2W,UAAWG,GAAkB7W,GAAQ,CAAC,EACpDsB,GAAOC,EAAAA,EAAAA,MAENuV,EAAyBC,IAA8B/M,EAAAA,EAAAA,KAAUkL,IAExEzS,EAAAA,EAAAA,KAAU,KACRsU,GAA4B7B,EAAQ,GACnC,CAACA,KAEJzS,EAAAA,EAAAA,KAAU,KACHgU,GACLJ,EAAa,CAAEI,UAAS,GACvB,CAACA,IAEJ,MAAMO,EAAcrW,QAAQ6U,GAAWA,IAAYyB,EAAAA,IAE7CC,GAAkBtV,EAAAA,EAAAA,KAAQ,KAC9B,MAAM+L,EAAS+I,GAAWlU,QAAQ2U,GAAMA,EAAE/W,WAE1C,OAAOuN,GAAQnJ,OAASmJ,OAASlN,CAAS,GACzC,CAACiW,IAEEU,GAAsBxV,EAAAA,EAAAA,KAAQ,KAClC,MAAM+L,EAAUmH,OAAkDrU,EAA3CoW,GAAerU,QAAQ2U,GAAMA,EAAE/W,WAEtD,OAAOuN,GAAQnJ,OAASmJ,OAASlN,CAAS,GACzC,CAACoW,EAAe/B,IAEbuC,GAAOzV,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAOgX,GACHM,EAAAA,EAAAA,IAAatX,EAAKU,GAAI0W,IAAsB,GAAGG,SAAU/B,IACzDgC,EAAAA,EAAAA,IAAYxX,IAASyV,CAAc,GACtC,CAACzV,EAAMgX,EAAaI,EAAqB5B,EAASC,IAE/CgC,GAA2BjR,EAAAA,EAAAA,IAAgB,KAC/CuQ,GAA4B3S,IAC1B,MAAMsT,GAA8BtT,EAcpC,OAZAmQ,GAAa,KACPyC,EACFR,EAAsB,CACpBzW,OAAQA,EACRyV,QAASA,EACTN,SAAUwC,IAGZnB,EAAqB,CAAExW,OAAQA,EAASmV,SAAUwC,GACpD,IAGKA,CAA0B,GACjC,IAGJ,IAAK1X,GAAQA,EAAK2X,cAAiBf,IAAWR,EAC5C,OAGF,SAASwB,EAAKlU,EAAcmU,IAC1BC,EAAAA,EAAAA,IAAoBpU,GACpB4S,EAAiB,CAAExO,QAAU,GAAE+P,gBACjC,CAEA,MAAME,EAAkBpB,IAAeqB,EAAAA,EAAAA,IAA0BnD,EAAe8B,GAEhF,SAASsB,EAAgBC,EAA6BC,GACpD,MAAOC,KAAiBC,GAAkBH,EAEpCI,EAAgBD,EAAe7T,OAChClD,EAAK,eAAgB,eACrBiX,MAAM,KACNjW,KAAKkW,GACU,cAANA,EACNvV,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACG2E,EAAe/V,KAAI,CAAAC,EAAqB6K,KAAQ,IAA1BmK,SAAUkB,GAAMlW,EACrC,MAAMmW,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBF,IAAU,IAAGA,IAC9D,OACExV,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACGtG,EAAM,EAAI,KAAO,GAClBnK,EAAAA,GAAAC,cAAA,KACEK,IAAKkV,EACLG,KAAO,GAAED,EAAAA,MAAkBF,IAC3BrV,QAAUyN,KACRgI,EAAAA,EAAAA,GAAUhI,GACV+G,EAAKc,EAAYpX,EAAK6W,EAAS,OAAS,YAAY,EAEtDlX,UAAU,kCAER,IAAGwX,KAEN,KAIPD,SAEN/X,EAEE8W,EAAWY,EAAU,QAAOC,EAAab,WAAaa,EAAab,SACnEmB,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBP,EAAab,WAAc,IAAGa,EAAab,WAE5F,OACEtU,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACPC,KAAMZ,EAAS,OAAS,UACxBa,WAAS,EACTC,QAAM,EACNlG,QAAM,EAEN3P,QAASA,IAAMwU,EAAKc,EAAYpX,EAAK6W,EAAS,OAAS,cAEvDlV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQ4S,GACpCtU,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YACbqX,GAAiBrV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmBqX,GACpDhX,EAAK6W,EAAS,OAAS,aAIhC,CAEA,OACElV,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACZ8W,GAAmBpX,QAAQoX,EAAgBvT,SAE1CvB,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CAACC,KAAK,QAAQC,WAAS,EAACC,QAAM,EAAClG,QAAM,EAAC3P,QAASA,IAAMwU,EAAKG,EAAiBzW,EAAK,WACvF2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQoT,GACpC9U,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK,WAGpC4V,GAAmBe,EAAgBf,GACnCtB,GAAejV,QAAQiV,EAAYpR,SAClCvB,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNC,UAAQ,GAERjW,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mCAAmC0D,IAAI,SACpD8N,EAAAA,EAAAA,GAAWmD,EAAa,CAAC,KAAM,QAAS,WAE3C3S,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAKmV,EAAS,UAAY,UAGzDW,IAAwBJ,GAAeiB,EAAgBb,GAAqB,KACzEA,GAAuBpB,GAAmBgB,IAAgBK,GAC5DpU,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNlG,QAAM,EAEN3P,QAASA,IAAMwU,EAAKP,EAAM/V,EAAK,uBAE/B2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASoW,GACxBpU,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK,wBAGnC8U,GACAnT,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CAACC,KAAK,SAAShG,QAAM,EAAC3P,QAASqU,GACtCxU,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,kBACZ2B,EAAAA,GAAAC,cAACiW,EAAAA,EAAQ,CACPzY,GAAG,sBACH0Y,MAAO3C,EAAS,4BAA8B,4BAC9C4C,QAASvC,EACTwC,UAAQ,KAIV,I,wICnNV,MA8KA,GAAe3Z,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA2B,IAAzB,KAAEvC,GAAMuC,EACf,MAAMgX,GAAgBxE,EAAAA,EAAAA,IAAS/U,EAAKU,IAC9B8Y,GAAiBC,EAAAA,EAAAA,IAAqB5Z,EAAQG,EAAKU,IACnDoU,EAAOyE,IAAiBvE,EAAAA,EAAAA,IAAWnV,GAAQ6Z,EAAAA,EAAAA,IAAqB1Z,IAChE2Z,EAAQ7E,IAAQ8E,EAAAA,EAAAA,IAAU9E,KAAU9U,EAAK6Z,UACzCC,EAAmBP,IAAkBC,IAAmBG,EACxDI,EAAcR,GAChBS,EAAAA,EAAAA,KAAuBhF,EAAAA,EAAAA,IAAWnV,GAAQ6Z,EAAAA,EAAAA,IAAqB1Z,UAC/DS,EAEJ,MAAO,CACL8Y,gBACAC,iBACAG,QACAM,WAAWhE,EAAAA,EAAAA,IAAcjW,GACzBka,cAAcC,EAAAA,EAAAA,IAAiBna,GAC/Boa,cAAcC,EAAAA,EAAAA,IAAiBra,GAC/Bsa,cAAeza,EAAOya,cACtBR,kBACAC,cACD,GArBena,EA9K+BoB,IAc7C,IAd8C,OAClDuZ,EAAM,KACNva,EAAI,UACJia,EAAS,cACTV,EAAa,eACbC,EAAc,MACdG,EAAK,aACLO,EAAY,aACZE,EAAY,cACZE,EAAa,gBACbR,EAAe,YACfC,EAAW,QACXS,EAAO,oBACPC,GACDzZ,EACC,MAAM,aACJ0Z,EAAY,cACZC,EAAa,cACbC,EAAa,eACbC,EAAc,aACdC,IACEzZ,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACPwZ,GAAYC,EAAAA,EAAAA,GAAa1Z,EAAMtB,GAE/Bib,GAAqBxZ,EAAAA,EAAAA,KAAY,KACrCkZ,EAAc,CAAE5a,OAAQC,EAAKU,GAAIwa,oBAAoB,IAErDV,GAAS,GACR,CAACG,EAAe3a,EAAKU,GAAI8Z,IAEtBW,GAAsB1Z,EAAAA,EAAAA,KAAY,KACtCkZ,EAAc,CAAE5a,OAAQC,EAAKU,GAAIwa,oBAAoB,IACrDJ,EAAa,CAAEM,UAAWpb,EAAKU,GAAI2a,WAAYrb,EAAKqb,aAEpDb,GAAS,GACR,CAACG,EAAe3a,EAAKU,GAAIV,EAAKqb,WAAYP,EAAcN,IAErDc,GAAmB7Z,EAAAA,EAAAA,KAAY,KAC/B8X,EACFoB,EAAc,CAAE5a,OAAQC,EAAKU,GAAIwa,oBAAoB,IAC5ChB,GACTW,EAAe,CAAE9a,OAAQC,EAAKU,GAAI+V,OAAQ6D,IAC1CK,EAAc,CAAE5a,OAAQC,EAAKU,GAAIwa,oBAAoB,MAC3CjB,IAAaG,GAAkBpa,EAAKub,WAEpCtB,GAAaG,IAAiBpa,EAAKub,WAC7CX,EAAc,CAAE7a,OAAQC,EAAKU,KAF7Bga,EAAa,CAAE3a,OAAQC,EAAKU,KAI9B8Z,GAAS,GACR,CACDjB,EACAW,EACAD,EACAG,EACAE,EACAta,EAAKub,UACLvb,EAAKU,GACL8Z,EACAG,EACAE,EACAH,EACAE,IAGIY,GAAkB/Z,EAAAA,EAAAA,KAAY,KAC9BwY,GAAaG,GACfM,EAAa,CAAE3a,OAAQC,EAAKU,KAC5B8Z,KAEAc,GACF,GACC,CAACtb,EAAKU,GAAI4a,EAAkBrB,EAAWG,EAAcM,EAAcF,IA8DtE,OACEvX,EAAAA,GAAAC,cAACuY,EAAAA,EAAK,CACJlB,OAAQA,EACRtZ,UAAU,kBACVya,OA9DAzY,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACtDwC,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLoD,KAAK,OACLrD,KAAMrD,EACN2b,gBAAiBnC,IAEnBvW,EAAAA,GAAAC,cAAA,MAAIjC,UAAU,eAAeK,EAM7B2Y,IAAcja,EAAKub,UACd,eAGLtB,GAAaja,EAAKub,UACb,gBAGLrB,GAAgBE,EACX,mBAGF,oBAuCLI,QAASA,EACTC,oBAAqBA,GApCnBR,GAAaja,EAAKub,UAElBtY,EAAAA,GAAAC,cAAA,UACGuP,EAAAA,EAAAA,GAAWnR,EAAK,2CAA4CyZ,GAAY,CAAC,kBAAmB,WAK9Fd,IAAcja,EAAKub,WAAcrB,GAAgBE,EAC7CnX,EAAAA,GAAAC,cAAA,UAAIuP,EAAAA,EAAAA,GAAWnR,EAAK,4BAA6ByZ,GAAY,CAAC,kBAAmB,WAGnF9X,EAAAA,GAAAC,cAAA,UAAIuP,EAAAA,EAAAA,GAAWnR,EAAK,kCAAmCyY,GAAc,CAAC,kBAAmB,WA2B9F9W,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZ0Y,GACC1W,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,SAAS/R,UAAU,wBAAwB2a,QAAM,EAACxY,QAAS+X,GACtE7Z,EAAK,kBAGTwY,GACC7W,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,SAAS/R,UAAU,wBAAwB2a,QAAM,EAACxY,QAAS6X,GACtElB,GAActH,EAAAA,EAAAA,GAAWnR,EAAK,6BAA8ByY,IAAgBzY,EAAK,kBAGpFiY,GAAiBvZ,EAAKub,WACtBtY,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,SAAS/R,UAAU,wBAAwB2a,QAAM,EAACxY,QAASkY,GACtEha,EAAK,iBAGV2B,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,SACN/R,UAAU,wBACV2a,QAAM,EACNxY,QAASmW,EAAgB+B,EAAmBE,GAE3Cla,EA7CH2Y,IAAcja,EAAKub,UACd,eAELtB,GAAaja,EAAKub,UACb,oBAGLrB,GAAgBE,EACX,mBAGFN,EAAkB,gCAAkC,WAoCvD7W,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACvC,UAAU,wBAAwB2a,QAAM,EAACxY,QAASoX,GAAUlZ,EAAK,YAErE,I,6JCtKZ,MAoHA,GAAe3B,EAAAA,EAAAA,KAlHgBqB,IAiBzB,IAjB0B,QAC9B8G,EAAO,oBACP+T,EAAmB,QACnBC,EAAO,YACPC,EAAW,sBACXC,EAAqB,eACrBhU,EAAc,SACdiU,EAAQ,SACRC,EAAQ,UACRjb,EAAS,OACTkb,EAAM,WACN9T,EAAU,aACVD,EAAY,eACZY,EAAc,aACdoT,EAAY,YACZnT,EAAW,cACXX,GACDtH,EACC,MAAMqb,GAAWhb,EAAAA,EAAAA,MAGXqG,GAAM9D,EAAAA,EAAAA,IAAuB,MAE7B0Y,EAAWxU,EAAQuB,QAAQiT,UAC3B,SAAE1K,EAAQ,KAAElL,EAAI,UAAE6V,GAAcD,EAChCE,GAAYC,EAAAA,EAAAA,IAAqBH,IAAa,GAE9CI,GAAiBC,EAAAA,EAAAA,IAAkBjV,EAAKmU,IACvCe,EAAgBC,IAAmB7Y,EAAAA,EAAAA,MAC1CvB,EAAAA,EAAAA,KAAU,KACJia,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoB/S,EAAAA,EAAAA,IACxC+R,KAAiBC,GAAyBtV,GAvCzB,QAuCiCsV,IAG9CgB,EAAiBrc,QAAQ2H,GAAkBwU,GAAiBF,GAE5DK,GAAe9S,EAAAA,EAAAA,IAAoBrC,EAAS,aAC1CyC,aAAcC,EAAgB,UAAEH,IAAcI,EAAAA,EAAAA,GACpDwS,GAAeD,GAAgB1S,EAAAA,EAAAA,IAAsBxC,EAAS,iBAAarH,GAAW,GAElFI,EAAWF,QAAQ0J,IAEnB,YACJ6F,EAAW,eAAEC,EAAc,iBAAEC,IAC3BC,EAAAA,EAAAA,IAAsBvI,EAASE,GAAkBwC,EAAkBwS,IAAmBnc,GAEpFqc,GAAaC,EAAAA,EAAAA,IAAsBb,GACnCpX,EAAegY,GAAaE,EAAAA,EAAAA,IAA4BtV,QAAWrH,EACnE4c,EAAeH,EAAaZ,EAAShX,oBAAiB7E,EACtD6c,GAAc/X,EAAAA,EAAAA,IAAS4E,EAAAA,EAAAA,IAAoBrC,EAAS,cAAe4U,GAEnEa,EAAkBnB,GAAgBzb,QAAQ2b,EAASkB,aACvDC,EAAAA,IAA8BtX,IAAImW,EAASoB,WAAaC,EAAAA,IAA8BxX,IAAImW,EAASoB,WAG/FE,GAAcpX,EAAAA,EAAAA,IAAgB,KAC9B0J,EACElH,GACFA,IAKAV,EACF+T,EAASnT,2BAA2B,CAAEpB,YAIpCqI,EACF4M,GAAiB,GAIfQ,EACFnB,IAEAC,EAASlT,qBAAqB,CAAErB,WAClC,IAGIyJ,IAAkB/K,EAAAA,EAAAA,IAAgB,KACtCyC,EAAanB,EAAQpH,GAAIoH,EAAQ/H,OAAO,IAG1C,OACEkD,EAAAA,GAAAC,cAAC2a,EAAAA,EAAI,CACHnW,IAAKA,EACLoW,KAAMlM,EACN4K,UAAWA,EACX9V,KAAMA,EACN6V,UAAWN,EAAWC,GAAYK,OAAY9b,EAC9Csd,iBAAkB7Y,EAClBoY,YAAaD,GAAgBC,EAC7BxB,QAASA,EACT3L,eAAgBA,EAChBD,YAAaA,EACbE,iBAAkBA,EAClBnP,UAAWA,EACXkb,OAAQA,EACR/T,aAAcA,EACdC,WAAYA,EACZ2V,WAAYT,GAAmBU,EAAAA,EAAAA,IAAuBnW,GAAW,YAAc,WAAc,gBAC7F1E,QAASwa,EACT3U,YAAaA,EAAcsI,QAAkB9Q,GAC7C,G,mFCjJN,MAUA,EAVmCO,IAA4B,IAA3B,QAAEqI,EAAO,UAAEpI,GAAWD,EACxD,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnF6N,EAAAA,EAAAA,GAAWpJ,GACZpG,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,aACX,C,4LCsBX,MAgIA,GAAetB,EAAAA,EAAAA,KAhIYqB,IAmBrB,IAnBsB,IAC1B0G,EAAG,KACHoW,EAAI,KACJpX,EAAI,UACJ8V,EAAY,GAAE,UACdD,EAAS,OACTJ,EAAM,iBACN4B,EAAgB,YAChBT,EAAW,UACXrc,EAAS,QACT6a,EAAO,eACP3L,EAAc,YACdD,EAAW,aACX9H,EAAY,WACZC,EAAU,iBACV+H,EAAgB,WAChB4N,EAAU,QACV5a,EAAO,YACP6F,GACDjI,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI2c,GAAata,EAAAA,EAAAA,IAAuB,MACpC8D,IACFwW,EAAaxW,GAGf,MAAM,SAAEkC,IAAaC,EAAAA,EAAAA,OACdsU,IAAanU,EAAAA,EAAAA,KAAUsT,GACxBc,EAAUzd,QAAQ2c,GAClBe,GAAWC,EAAAA,EAAAA,GAAcP,EAAkBK,EAASxU,IAAa2U,EAAAA,IACjEC,GAAkBpY,EAAAA,EAAAA,IAAoBgY,IAG1Czb,aAAc8b,EACd7b,qBAAsB2N,IACpB1N,EAAAA,EAAAA,GAAkBsN,OAAgB1P,GAAW,GAE3CuS,GAAQ0L,EAAAA,EAAAA,IAAsBlC,GAC9BmC,GAAalL,EAAAA,EAAAA,IAAkB/M,GAC/BkY,GAAWhd,EAAAA,EAAAA,KAAQ,IAClBuO,GAAmBC,EAChB,IAAEqD,EAAAA,EAAAA,IAAkB/M,EAAO0J,QAAuBuO,IADTA,GAEhD,CAACxO,EAAgBzJ,EAAMiY,EAAYvO,KAEhC,MAAEzB,EAAK,OAAEC,IAAWiQ,EAAAA,EAAAA,IAA+B/C,GAEnD7J,GAAgB9O,EAAAA,EAAAA,GACpB,OACAlC,EACA6a,GAAW,UACX1Y,IAAY8M,GAAe,cAC3B7H,GAAc,oBAGhB,OACEpF,EAAAA,GAAAC,cAAA,OAAKwE,IAAKwW,EAAYjd,UAAWgR,EAAetN,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACvE2H,GACCnF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZoH,GAAcpF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,sBAAsBmC,QAAS8M,OAAczP,EAAY2C,GACrE2a,GAAoBT,EACnBra,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,OACE2D,IAAKyW,EACLrc,UAAU,aACV0N,MAAOA,EACPC,OAAQA,EACRkQ,IAAI,KAELX,GACClb,EAAAA,GAAAC,cAAA,UACEwE,IAAK2W,EACLpd,WAAWkC,EAAAA,EAAAA,GAAe,YAAaqb,MAK7Cvb,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,aAAY+R,KAC1BwJ,EAAUhY,QAAU,GACnBvB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,QAAQ6X,IAI5CiC,GACCxb,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB6P,EAAOzC,IACrDtN,EAAAA,GAAAC,cAACkQ,EAAAA,EAAe,CACd5E,SAAU4B,EACV1J,KAAMoV,EAAU,IAAM,IACtB1Y,QAAS8M,EAAc9M,OAAU3C,KAItC2C,GACCH,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,cACA,OACA6a,GAAc,gBACdS,GAAuB,aAK/Bxb,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aAAa0D,IAAI,OAAOgN,MAAOmM,IAAOrL,EAAAA,EAAAA,GAAWqL,IAChE7a,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAgB0D,IAAI,QACjC1B,EAAAA,GAAAC,cAAA,YACG0b,GAEFzC,GAAUlZ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAewR,EAAAA,EAAAA,GAAW0J,KACnDA,GAAUxb,QAAQ4b,IAClBtZ,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAChBgC,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CAACtP,QAAS6F,IAAc0K,EAAAA,EAAAA,IAAoBrS,EAAkB,IAAZib,GAAkB,OAKhFJ,GAAUxb,QAAQ4b,IACjBtZ,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CAACtP,QAAS6F,IAAc0J,EAAAA,EAAAA,IAAoBrR,EAAkB,IAAZib,IAErD,G,0MCtIV,MAAMwC,EAAkB,IAAMC,EAAAA,GA8L9B,GAAerf,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAEuV,GAAU/S,EAC3B,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1Bkf,EAAa3J,GAAW4J,EAAAA,EAAAA,IAAiBrf,EAAQE,EAAQuV,QAAY7U,EACrE0e,EAAcnf,GAAOof,EAAAA,EAAAA,IAAsBvf,EAAQG,QAAQS,EAC3D4e,EAAoB1e,SAAQ2e,EAAAA,EAAAA,IAAmBzf,EAAQE,IACvDwf,EAAQjK,EAAWtV,GAAMwf,SAASlK,QAAY7U,EAGpD,MAAO,CACLT,OACAif,aACAE,cACAI,QACAF,oBACAI,cARoBF,IAASG,EAAAA,EAAAA,IAA0B7f,EAAQE,EAAQuV,GASxE,GAhBe1V,EA/J6BoB,IAqB3C,IArB4C,aAChD2e,EAAY,UACZ1e,EAAS,WACT2e,EAAa,SAAQ,SACrBC,EAAQ,OACRC,EAAM,SACNC,EAAQ,gBACRxC,EAAe,aACfyC,EAAY,aACZC,EAAY,mBACZC,EAAkB,aAClBC,EAAY,WACZlB,EAAU,MACVmB,EAAK,KACLpgB,EAAI,YACJmf,EAAW,kBACXE,EAAiB,MACjBE,EAAK,cACLE,EAAa,iBACbY,EAAgB,QAChBjd,GACDpC,EACC,MAAM,aACJsf,EAAY,gBACZC,EAAe,kBACfC,IACEnf,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEP6Y,EAAepa,IAAQqa,EAAAA,EAAAA,IAAiBra,GACxCygB,EAAU9f,QAAQX,GAAMiV,SAAWgK,GAAcM,IAC/C7e,GAAIX,EAAM,MAAE2gB,EAAK,aAAE/I,GAAiB3X,GAAQ,CAAC,GAErDyC,EAAAA,EAAAA,KAAU,KACJ1C,IAAW2gB,IACTT,GAAcK,EAAa,CAAEvgB,WAC7Bwd,GAAiBiD,EAAkB,CAAEG,UAAW5gB,IACtD,GACC,CAACA,EAAQ2gB,EAAOT,EAAcK,EAAcE,EAAmBpG,EAAcmD,IAEhF,MAAMqD,GAAyBpa,EAAAA,EAAAA,IAC7B,CAACqK,EAAiDgQ,KAC5C7gB,GAAQ6gB,IACVhQ,EAAEM,kBACFoP,EAAgB,CACdO,cAAe9gB,EAAKU,GACpBqgB,QAAS,EACT9Y,OAAuB,UAAf2X,EAAyBoB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIE9I,GAAexW,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQggB,IAAgBmB,EAAAA,EAAAA,IAAgBnhB,IAAO,CAACA,EAAMggB,IAEzF,GAAKhgB,EAqDL,OACEiD,EAAAA,GAAAC,cAAA,OACEjC,WACEkC,EAAAA,EAAAA,GAAe,WAAYlC,GAE7B0D,KAAMyb,GAAS9e,EAAKsD,MAAQ,WAAQnE,EACpC2C,QAASA,IAEPyc,IAAaY,GACbxd,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKvD,EAAKU,GACVgG,KAAMkZ,EACNvc,KAAMrD,EACNoD,QAASma,EAAkBqD,OAAyBngB,IAGvDggB,GACCxd,EAAAA,GAAAC,cAACke,EAAAA,EAAS,CACR7B,MAAOA,EACPte,UAAU,oBACVyF,KAAMqY,IAGV9b,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACZse,EACGtc,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYwR,EAAAA,EAAAA,GAAW8M,EAAM5N,QACtD1O,EAAAA,GAAAC,cAACme,EAAAA,EAAa,CAAChe,KAAMrD,KACvBqgB,GA5ER,WACE,GAAIP,EACF,OAAOC,EACL9c,EAAAA,GAAAC,cAACoe,EAAAA,EAAY,CAACrgB,UAAU,SAASoI,QAASyW,IAE1C7c,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQmb,GAIzC,GAAII,IAAuBb,IAAsB1H,EAC/C,OACE1U,EAAAA,GAAAC,cAACoe,EAAAA,EAAY,CAACrgB,UAAU,SAASoI,QAAS/H,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAI2f,EACF,OAAO1c,EAAAA,GAAAC,cAACqe,EAAAA,EAAY,CAAC5B,aAAcA,IAGrC,GAAIc,EACF,OACExd,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1B8a,EAAgBne,EAAK,WAAYme,EAAe,MAAOhN,EAAAA,EAAAA,GAAWzS,EAAK2R,QAK9E,GAAIwO,EACF,OACEld,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQrD,GAAKkgB,EAAAA,EAAAA,IAAkBxhB,KAIhE,MAAMyhB,EA6CV,SAAwBngB,EAActB,GACpC,MAAM0hB,EAAiBpgB,GAAKkgB,EAAAA,EAAAA,IAAkBxhB,KACxC,aAAE2hB,GAAiB3hB,EAEzB,OAAIA,EAAK2X,aACmB,YAAnB+J,EAA+B,0BAA4B,wBAG/DC,EAKDrgB,EADsB,YAAnBogB,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CA5DwBE,CAAetgB,EAAMtB,GACnC6hB,EAAe1C,EAAe,KAAI7d,EAAK,cAAe6d,EAAa,YAAS1e,EAElF,OACEwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UACbmX,GAAgBnV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAUmX,GAC3CnV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBwgB,GAC/BI,GAAgB5e,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBAAiB4gB,GAGxD,CA6B4BC,IAEpB,I,gFC1LV,MAYA,GAAeniB,EAAAA,EAAAA,KAZuBqB,IAAiC,IAAhC,QAAE8G,EAAO,eAAEia,GAAgB/gB,EAChE,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACZ8gB,GACC9e,EAAAA,GAAAC,cAAC8e,EAAAA,EAAqB,CAAClC,OAAQiC,IAEjC9e,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ0R,EAAAA,EAAAA,IAAoBrR,EAAqB,IAAfwG,EAAQI,OACtD,G,2JCUV,MA6DA,GAAevI,EAAAA,EAAAA,KA7DaqB,IAMtB,IANuB,QAC3B8G,EAAO,SACPma,EAAW,eAAc,YACzBC,EAAW,oBACXrG,EAAmB,QACnBzY,GACDpC,EAEC,MAAM0G,GAAM9D,EAAAA,EAAAA,IAAuB,MAE7B8Y,GAAiBC,EAAAA,EAAAA,IAAkBjV,EAAKmU,GACxC3W,GAAekY,EAAAA,EAAAA,IAA4BtV,GAC3Cqa,GAAe5c,EAAAA,EAAAA,IAAS4E,EAAAA,EAAAA,IAAoBrC,EAAS,cAAe4U,GACpE9Z,GAAuBwD,EAAAA,EAAAA,GAAmB+b,GAE1C3Y,GAAQ4Y,EAAAA,EAAAA,IAAgBta,GAExBua,GAAaC,EAAAA,EAAAA,IAAoBxa,IAChCya,EAAe,CAAGC,IAAexe,EAAAA,EAAAA,GAAQqe,GAE1CzE,GAAcpX,EAAAA,EAAAA,IAAgB,KAClCgc,IACApf,EAAS0E,EAAQpH,GAAIoH,EAAQ/H,OAAO,IAGtC,OACEkD,EAAAA,GAAAC,cAAA,OACEwE,IAAKA,EACLhH,GAAK,GAAEuhB,KAAWQ,EAAAA,EAAAA,IAAiB3a,EAAQpH,MAC3CO,UAAU,oBACVmC,QAASA,EAAUwa,OAAcnd,GAEjCwC,EAAAA,GAAAC,cAAA,OACE2D,IAAK3B,EACLjE,UAAU,kBACV6d,IAAI,GACJhL,WAAYoO,EACZQ,SAAS,QACTC,cAAeT,EAAcrJ,EAAAA,OAAYpY,IAE3CwC,EAAAA,GAAAC,cAAA,OACE2D,IAAKsb,EACLlhB,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBP,GAC3Dkc,IAAI,GACJhL,WAAYoO,EACZQ,SAAS,QACTC,cAAeT,EAAcrJ,EAAAA,OAAYpY,IAE1C4hB,GACCpf,EAAAA,GAAAC,cAAC0f,EAAAA,EAAY,CACX1d,aAAcid,GAAgBjd,EAC9B2d,UAAWN,EACXthB,UAAU,kBAGbuI,GAASvG,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBAAkBuI,EAAMsZ,MAAQ,OAAQlQ,EAAAA,EAAAA,IAAoBpJ,EAAM2B,WAC3F+W,GAAejf,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC5B,G,8FC3FV,MCiEA,GAAetB,EAAAA,EAAAA,KA1CoBqB,IAO7B,IAP8B,UAClC6hB,EAAS,cACTE,EAAa,aACb7d,EAAY,UACZjE,EAAS,MACT0N,EAAK,OACLC,GACD5N,EAEC,MAAM0G,GAAM9D,EAAAA,EAAAA,IAAuB,OAE7B,aAAEjB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7CggB,OAAWpiB,GAAW,GAAMsiB,QAAwBtiB,OAAWA,EAdxC,KAgBnBoL,GAAYyS,EAAAA,EAAAA,GAAcpZ,GAAevC,OAAclC,EAjB3C,GAiBmEkO,EAAOC,GAEtFgP,GAAcpX,EAAAA,EAAAA,IAAiBqK,IACnC,IAAKnJ,EAAItD,QAAS,OAClB,MAAM4e,EAAOnS,EAAEoS,cAAclS,wBACvB1B,EAAIwB,EAAEG,QAAUgS,EAAKlS,KACrBxB,EAAIuB,EAAEqS,QAAUF,EAAKG,IACrBC,EAAS/T,EAAK2T,EAAKrU,MAAQ,EAC3B0U,EAAS/T,EAAK0T,EAAKpU,OAAS,EAClClH,EAAItD,QAAQkf,aAAa,QAAU,oBAAmBF,yBAA8BC,MAAW,IAGjG,GAAK1gB,EAIL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDvDM,uBCuDsBP,EAAsB3B,EAAW8hB,GDvDwB,wBCwDhGrb,IAAKA,EACLtE,QAAS2f,EAAgBnF,OAAcnd,GAEvCwC,EAAAA,GAAAC,cAAA,UAAQwE,IAAKmE,EAAW5K,UD3D6M,uBC2DnL0N,MAAOA,EAAOC,OAAQA,IACxE3L,EAAAA,GAAAC,cAAA,OAAKjC,UD5DgM,yBC6DjM,G,2DCjDLsiB,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAe5jB,EAAAA,EAAAA,KAd6BqB,IAAgB,IAAf,OAAE8e,GAAQ9e,EACrD,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACsgB,EAAAA,EAAU,CAAC1F,KAAK,SAAS2F,UAAWF,EAAKzD,IAC5B,WAAXA,EACC7c,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iCACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,8BAEbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAY,qBAAoB6e,OAErC,G,8FCZV,MAAM4D,EAAe,iBAcrB,GAAe/jB,EAAAA,EAAAA,KAZoBqB,IAA0C,IAAzC,KAAE0C,EAAOggB,EAAY,YAAE9N,GAAa5U,EACtE,MAAMM,GAAOC,EAAAA,EAAAA,MACP,qBAAEqB,IAAyBC,EAAAA,EAAAA,IAAkB,GAEnD,OACEI,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,EAAsBgT,GAAe,qBACjFlS,EACAkS,GAAe3S,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAewR,EAAAA,EAAAA,GAAWnR,EAAKsU,GAAc,CAAC,QACvE,G,gJCUV,MA+HA,GAAejW,EAAAA,EAAAA,KA/HoBqB,IAgB7B,IAhB8B,UAClC2iB,GAAY,EAAK,kBACjBC,EAAiB,MACjBC,EAAK,KACLC,EAAI,YACJC,EAAc,WAAU,YACxBC,EAAc,OAAM,YACpBpO,EAAW,iBACXqO,EAAgB,iBAChBC,EAAgB,6BAChBC,GAA+B,EAAK,SACpCC,GAAW,EAAK,WAChBC,EAAU,2BACVC,EAA0B,cAC1BC,EAAa,SACbC,GACDxjB,EAEC,MAAMyjB,GAAW7gB,EAAAA,EAAAA,IAAyB,MACpCtC,GAAOC,EAAAA,EAAAA,MAEP,SAAEqI,IAAaC,EAAAA,EAAAA,OACd6a,EAAUC,IAAe3a,EAAAA,EAAAA,IAAS,KAClC4a,EAAWC,IAAgB7a,EAAAA,EAAAA,KAAS,GACrC8a,EAAsBlb,EAAW,IAAM,IAgE7C,OA9DAnH,EAAAA,EAAAA,KAAU,KACJyhB,GACFS,EAAY,GACd,GACC,CAACT,KAEJa,EAAAA,EAAAA,IAAW,KACJC,EAAAA,IACHP,EAASrgB,QAAS6gB,OACpB,GACCH,IAEHriB,EAAAA,EAAAA,KAAU,KACJohB,IACFqB,EAAAA,EAAAA,KAAgB,KACdT,EAASrgB,QAAS6gB,QAClBR,EAASrgB,QAAS+gB,QAAQ,GAE9B,GACC,CAACtB,IA4CF5gB,EAAAA,GAAAC,cAAA,QAAMkiB,OAAO,GAAGZ,SAAUA,EAzB5B,SAAsBa,GACpBA,EAAMC,iBAEF3B,GAIAiB,GACFJ,EAAUE,EAEd,EAesD7L,EAAAA,EAAW0M,aAAa,OAC1EtiB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,6BAA8BuhB,GAAY,UAAWb,GAAS,SACxFlf,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB0jB,GAhBHlhB,EAAAA,GAAAC,cAAA,SACEsiB,KAAK,WACL9kB,GAAG,mBACH6kB,aAAa,MACbtkB,UAAU,kBACVwkB,UAAW,IAYXxiB,EAAAA,GAAAC,cAAA,SACEwE,IAAK+c,EACLxjB,UAAU,eACVukB,KAAM5B,EAAoB,OAAS,WACnCljB,GAAG,mBACHsN,MAAO0W,GAAY,GACnBa,aAAcpB,EAA+B,gBAAkB,mBAC/DuB,SAvDR,SAA0B7U,GACpBgT,GACFQ,IAGF,MAAM,OAAEsB,GAAW9U,EACnB8T,EAAYgB,EAAO3X,OACnB6W,EAAac,EAAO3X,MAAMxJ,QAAUohB,EAAAA,KAChCrB,GACFA,EAAcoB,EAAO3X,MAEzB,EA6CQ6X,UAAW,IACXlhB,IAAI,SAEN1B,EAAAA,GAAAC,cAAA,aAAQ2gB,GAASC,GAAQC,GACzB9gB,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVmC,QAjDR,WACEkhB,GAA4BV,EAC9B,EAgDQkC,KAAK,SACLL,SAAU,EACV9T,MAAM,8BAEN1O,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQygB,EAAoB,WAAa,uBAGzEhO,GAAe3S,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe2U,GAC3C4O,IAAaI,GAAaX,IACzBhhB,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACgiB,KAAK,SAASzS,QAASqR,EAAUT,UAAWA,EAAWoC,UAAWnB,GACvEZ,GAGA,G,sNChHX,MAmKA,GAAerkB,EAAAA,EAAAA,KA9JcqB,IAgBvB,IAhBwB,QAC5BglB,EAAO,YACPC,EAAW,YACXC,EAAW,kBACXC,EAAiB,aACjBC,EAAY,cACZC,EAAa,UACb1C,EAAS,gBACT2C,EAAe,aACfC,EAAY,gBACZC,EAAe,UACfC,EAAS,oBACTC,EAAmB,eACnBC,EAAc,gBACdC,EAAe,WACfC,GACD7lB,EAEC,MAAMyjB,GAAW7gB,EAAAA,EAAAA,IAAyB,MACpCkjB,EAAiBb,EAAYzhB,OAtBd,IAwBrB/B,EAAAA,EAAAA,KAAU,KACH8jB,GACLQ,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACdT,EAASrgB,QAAS6gB,OAAO,GACzB,GA/Be,IAgCD,GACjB,CAACsB,IAEJ,MAAOS,EAAmBC,IAAuBrlB,EAAAA,EAAAA,KAAQ,KACvD,IAAK6kB,GAAWjiB,OAAQ,MAAO,CAAC0iB,EAAAA,EAAkBjB,GAClD,MAAMkB,EAAclB,EAAYzjB,QAAQ9B,IAAQ+lB,EAAUW,SAAS1mB,KACnE,MAAO,CAAC+lB,EAAWU,EAAY,GAC9B,CAAClB,EAAaQ,IAEXY,GAAezlB,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAIygB,IAAY,CAACA,IAElDa,GAAgB1lB,EAAAA,EAAAA,KAAQ,IACrBokB,EAAQuB,MAAK,CAACC,EAAGC,KACtB,MAAMC,EAAYL,EAAalhB,IAAIqhB,GAC7BG,EAAYN,EAAalhB,IAAIshB,GACnC,OAAIC,IAAcC,GACR,GAELD,GAAaC,EACT,EAEF,CAAC,KAET,CAAC3B,EAASqB,IAEPO,GAAkBphB,EAAAA,EAAAA,IAAiB9F,IACvC,GAAI2mB,EAAalhB,IAAIzF,GAEnB,YADAkmB,IAAkBlmB,GAIpB,MAAMmnB,EAAiB5B,EAAY5jB,QAC/BwlB,EAAeT,SAAS1mB,GAC1BmnB,EAAeC,OAAOD,EAAeE,QAAQrnB,GAAK,GAElDmnB,EAAepjB,KAAK/D,GAEtBgmB,IAAsBmB,GACtBlB,IAAiB,GAAG,IAGhBqB,GAAqBxhB,EAAAA,EAAAA,IAAiBqK,IAC1C,MAAM,MAAE7C,GAAU6C,EAAEoS,cACpB0D,IAAiB3Y,EAAM,KAGlBia,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBtB,EAAYS,EAAe3mB,QAAQulB,IAE9E5kB,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,UACZslB,GACCtjB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BAA8B0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACpEumB,EAAkB1kB,KAAI,CAAC5B,EAAI6D,IAC1BtB,EAAAA,GAAAC,cAACklB,EAAAA,EAAkB,CACjB1T,aAAchU,EACd2nB,YAAavB,GAAkBviB,EAAI0hB,EAAYzhB,OAtF7B,EAuFlBpB,QAASwkB,EACTU,SAAU5nB,MAGbumB,EAAoB3kB,KAAI,CAAC5B,EAAI6D,IAC5BtB,EAAAA,GAAAC,cAACklB,EAAAA,EAAkB,CACjB1T,aAAchU,EACd2nB,YACEvB,GAAkBviB,EAAIyiB,EAAkBxiB,OAASyhB,EAAYzhB,OA/F7C,EAiGlB+jB,UAAQ,EACRnlB,QAASwkB,EACTU,SAAU5nB,MAGduC,EAAAA,GAAAC,cAACslB,EAAAA,EAAS,CACR9nB,GAAI2lB,EACJ3e,IAAK+c,EACLzW,MAAOkY,EACPR,SAAUsC,EACVjE,YAAaoC,GAAqB7kB,EAAK,iBAK5C2mB,GAAazjB,OACZvB,EAAAA,GAAAC,cAACulB,EAAAA,EAAc,CACbxnB,UAAU,4BACVynB,MAAOT,EACPpB,WAAYqB,EACZ5B,gBAAiBA,GAEhB2B,EAAY3lB,KAAK5B,IAChB,MAAMioB,EAAiBA,IAEnB1lB,EAAAA,GAAAC,cAAC0lB,EAAAA,EAAQ,CACPxP,MAAM,GACN2M,SAAUsB,EAAalhB,IAAIzF,GAC3B2Y,QAAS4M,EAAYmB,SAAS1mB,GAC9B+C,MAAO+iB,IAIb,OACEvjB,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACPvV,IAAK7C,EACLO,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwCqjB,GAAmB,aACrFT,SAAUsB,EAAalhB,IAAIzF,GAC3BmoB,mBAAoBloB,QAAQimB,GAE5BxjB,QAASA,IAAMwkB,EAAgBlnB,GAC/BqS,QAAM,GAEJyT,OAAqC/lB,EAAnBkoB,KACnB5T,EAAAA,EAAAA,IAASrU,GACRuC,EAAAA,GAAAC,cAAC4lB,EAAAA,EAAe,CAACrS,OAAQ/V,IAEzBuC,EAAAA,GAAAC,cAAC6lB,EAAAA,EAAa,CAAChpB,OAAQW,IAExB8lB,EAAkBmC,SAAmBloB,EAC7B,KAIdkjB,IAAasE,GAAgBA,EAAYzjB,OAG5CvB,EAAAA,GAAAC,cAAC8lB,EAAAA,EAAO,MAFR/lB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,cAAcmlB,GAAgB,yBAIzC,G,+HC5KV,MAuEA,GAAezmB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAEmS,GAAcnS,EACvB,OAAKmS,EAOE,CACL1U,KAJW0U,GAAezU,EAAAA,EAAAA,IAAWJ,EAAQ6U,QAAgBjU,EAK7DqU,MAJWC,EAAAA,EAAAA,IAASL,IAAgBM,EAAAA,EAAAA,IAAWnV,EAAQ6U,QAAgBjU,EAKvE6Z,cAAeza,EAAOya,eATf,CAAC,CAUT,GAbe1a,EAvEkCoB,IAWhD,IAXiD,KACrD+X,EAAI,MACJpH,EAAK,YACL0W,EAAW,SACXE,EAAQ,SACRD,EAAQ,KACRtoB,EAAI,KACJ8U,EAAI,UACJ7T,EAAS,cACTqZ,EAAa,QACblX,GACDpC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI0nB,EACAC,EAEJ,GAAInQ,GAAQpH,EACVsX,EACEhmB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAS,QAAO4V,QAIjDmQ,EAAYvX,OACP,GAAImD,GAAQ9U,EAAM,CACvBipB,EACEhmB,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLD,KAAMyR,GAAQ9U,EACd0G,KAAK,QACLiV,gBAAiB7G,GAAM8B,SAI3B,MAAMkH,GAAQ9d,GAAS8U,IAASA,EAAK8B,QACjCoD,EAAAA,EAAAA,IAAuBlF,IACvBkG,EAAAA,EAAAA,GAAa1Z,EAAMtB,EAAMA,EAAKU,KAAO4Z,GAEzC4O,EAAYpL,GAAOrL,EAAAA,EAAAA,GAAWqL,QAAQrd,CACxC,CAEA,MAAMwR,GAAgB9O,EAAAA,EAAAA,GACpB,qBACAlC,EACAjB,GAAMiV,SAAW,eACjBoT,GAAe,YACfE,GAAY,aAGd,OACEtlB,EAAAA,GAAAC,cAAA,OACEjC,UAAWgR,EACX7O,QAASA,IAAMA,EAAQklB,GACvB3W,MAAO0W,EAAca,OAAYzoB,EACjCkE,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBwoB,GACCZ,GACAplB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YAAY0D,IAAI,QAC5BukB,GAGJX,GACCtlB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGb,I,oLC/CV,MAwIA,GAAetB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEkU,EAAM,cAAEL,GAAe7T,EAChC,MAAMuS,GAAOE,EAAAA,EAAAA,IAAWnV,EAAQ4W,GAKhC,MAAO,CACL3B,OACAqU,YANiBC,EAAAA,EAAAA,IAAiBvpB,EAAQ4W,GAO1CkF,iBANuBvF,GAAiBtB,GAAQA,EAAK8B,OAOrDyI,kBANwB1e,SAAQ2e,EAAAA,EAAAA,IAAmBzf,EAAQ4W,IAO5D,GAZe7W,EAxI+BoB,IAmB7C,IAnB8C,aAClD2e,EAAY,WACZC,EAAa,SAAQ,OACrBE,EAAM,WACNuJ,EAAU,SACVtJ,EAAQ,gBACRxC,EAAe,aACfyC,EAAY,aACZC,EAAY,mBACZC,EAAkB,gBAClBoJ,EAAe,iBACfjJ,EAAgB,cAChBkJ,EAAa,MACbnJ,EAAK,KACLtL,EAAI,WACJqU,EAAU,gBACVxN,EAAe,kBACf0D,EAAiB,YACjBmK,GACDxoB,EACC,MAAM,aACJqV,EAAY,gBACZkK,EAAe,kBACfC,IACEnf,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAI+V,GAAW3B,GAAQ,CAAC,GAEhCrS,EAAAA,EAAAA,KAAU,KACJgU,IACEwJ,GAAc5J,EAAa,CAAEI,WAC7B8G,GAAiBiD,EAAkB,CAAEG,UAAWlK,IACtD,GACC,CAACA,EAAQwJ,EAAc1C,IAE1B,MAAMqD,GAAyBpa,EAAAA,EAAAA,IAC7B,CAACqK,EAAiDgQ,KAC5C/L,GAAQ+L,IACVhQ,EAAEM,kBACFoP,EAAgB,CACdO,cAAehM,EAAKpU,GACpBqgB,QAAS,EACT9Y,OAAuB,UAAf2X,EAAyBoB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIE9I,GAAexW,EAAAA,EAAAA,KAAQ,IAAMkT,GAAQkL,IAAgBmB,EAAAA,EAAAA,IAAgBrM,IAAO,CAACA,EAAMkL,IAEzF,IAAKlL,EACH,OAqCF,MAAM2U,EAAcD,EAChBA,EAAYC,aAAenoB,EAAKkoB,EAAYE,QAAU,uBAAyB,6BAC/EjpB,EA2BJ,OACEwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WAAW0D,KAAMyb,GAAS9e,EAAKsD,MAAQ,WAAQnE,GAC5DwC,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKuR,EAAKpU,GACVgG,KAAMkZ,EACNvc,KAAMyR,EACN6G,gBAAiBA,EACjBvY,QAASma,EAAkBqD,OAAyBngB,IAEtDwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QAjCbwoB,EAEAxmB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAACme,EAAAA,EAAa,CACZhe,KAAMyR,EACN6U,iBAAkBJ,EAClBD,gBAAiBA,EACjB3N,gBAAiBA,IAElB8N,GAAexmB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBwoB,IAMpDxmB,EAAAA,GAAAC,cAACme,EAAAA,EAAa,CACZhe,KAAMyR,EACN6U,iBAAkBJ,EAClBD,gBAAiBA,EACjB3N,gBAAiBA,KAgBfmE,IAAYnE,IAAoB0E,KAzElCP,EACKC,EACL9c,EAAAA,GAAAC,cAACoe,EAAAA,EAAY,CAACrgB,UAAU,SAASoI,QAASyW,IAE1C7c,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1B0kB,GAAcpmB,EAAAA,GAAAC,cAAA,KAAGjC,UAAY,QAAOooB,mBACpC5W,EAAAA,EAAAA,GAAWqN,IAKdI,IAAuBb,EAEvBpc,EAAAA,GAAAC,cAACoe,EAAAA,EAAY,CAACrgB,UAAU,SAASoI,QAAS/H,EAAK,cAI9CwT,EAID6K,EACK1c,EAAAA,GAAAC,cAACqe,EAAAA,EAAY,CAAC5B,aAAcA,IAInC1c,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,UAAUymB,EAAAA,EAAAA,IAAa9U,EAAMqU,IAAe,WACzE/Q,GAAgBnV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAUmX,GAC3CnV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQklB,EAAAA,EAAAA,IAAcvoB,EAAMwT,EAAMqU,UAXxE,IA0DM,I,ySClJV,MAkHA,GAAexpB,EAAAA,EAAAA,KAlHoBqB,IAO7B,IAP8B,KAClChB,EAAI,KACJ8U,EAAI,MACJgV,EAAK,gBACLnO,EAAe,aACfoO,EAAY,QACZ3mB,GACDpC,EAEC,MAAMgpB,GAAWpmB,EAAAA,EAAAA,IAAyB,MAEpCtC,GAAOC,EAAAA,EAAAA,MACP,SAAEqI,IAAaC,EAAAA,EAAAA,MAEfogB,EAAYnV,IAAQoV,EAAAA,EAAAA,IAAcpV,GAClCqV,EAAgBnqB,IAAQoqB,EAAAA,EAAAA,IAAqBpqB,EAAKU,IAClD2pB,EAAavV,GAAQ9U,EACrBsqB,EAAeD,IAAe1O,IAAoBsO,IAAcE,GAChE,QAAEI,GAAYT,GAAS,CAAC,EAExBU,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkBJ,EAAY,UAC3DK,GAAgBnlB,EAAAA,EAAAA,GAASilB,GAEzBG,EAAYL,GAAgBR,IAAUS,GAAY,QAAOT,EAAMppB,YAC/DkqB,GAAerlB,EAAAA,EAAAA,GAASolB,GAExBE,EAAYP,GAAgBR,GAASS,IAAWO,EAAAA,EAAAA,IAAwBhB,GAGxEiB,GAFexlB,EAAAA,EAAAA,GAASslB,IAEQD,GAC/BI,EAAcC,IAAkBjnB,EAAAA,EAAAA,KACjCknB,EAAmBvqB,QAAQoqB,KAAmBR,GAAWS,IACzDpoB,GAAuBwD,EAAAA,EAAAA,GAAmB8kB,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiBZ,GAAO3kB,WAAWC,QAC1FgmB,GAAwB9M,EAAAA,EAAAA,GAC5BwL,GAAO3kB,WAAWC,SAAU+lB,EAAgBvhB,IAAa2U,EAAAA,IAErDsC,EAAWiJ,GAASY,GAAiBS,EAQ3C,IAAI9hB,EAEJ,IARA5G,EAAAA,EAAAA,KAAU,KACJunB,EAAS5lB,UAAY2lB,IACvBC,EAAS5lB,QAAQinB,YAAc,EACjC,GACC,CAACtB,IAIApO,EACFtS,EAAUpG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,yCAClB,GAAIgpB,EACT5gB,EAAUpG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CAClB,GAAIkpB,EACT9gB,EAAUpG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gCAClB,GAAI4f,EACTxX,EACEpG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACGyX,EACCloB,EAAAA,GAAAC,cAAA,UAAQwE,IAAK0jB,EAAuBnqB,UAAU,UAE9CgC,EAAAA,GAAAC,cAAA,OAAK2D,IAAK6jB,EAAezpB,UAAU,QAAQ6d,IAAI,KAEhDgL,IACCS,EACEtnB,EAAAA,GAAAC,cAACooB,EAAAA,EAAc,CACbC,QAASxB,EACTriB,IAAKsiB,EACLnjB,IAAKkkB,EACL9pB,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1C4oB,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASX,IAGXhoB,EAAAA,GAAAC,cAAA,OACE2D,IAAKkkB,EACL9pB,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1Ckc,IAAI,YAMT,GAAIhK,EAAM,CACf,MAAM+W,GAAeC,EAAAA,EAAAA,IAAgBhX,GACrCzL,EAAUwiB,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAKprB,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAM2R,GAAQqJ,EAAAA,EAAAA,GAAa1Z,EAAMtB,GACjCqJ,EAAUsI,IAASoa,EAAAA,EAAAA,IAAgBpa,GAAOoD,EAAAA,EAAAA,IAAS/U,EAAKU,IAAM,EAAI,EACpE,MACE2I,EACEpG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAC8oB,EAAAA,EAAO,CAAChZ,MAAM,WAKrB,MAAMf,GAAgB9O,EAAAA,EAAAA,GACpB,eACC,aAAW8oB,EAAAA,EAAAA,IAAgBnX,GAAQ9U,KACpC2b,GAAmB,iBACnBsO,GAAa,kBACbE,GAAiB,uBACfxO,IAAoBkF,GAAa,YAGrC,OACE5d,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgR,EAAe7O,QAASyd,EAAWzd,OAAU3C,GACvC,iBAAZ4I,GAAuBoJ,EAAAA,EAAAA,GAAWpJ,EAAS,CAAC,aAAeA,EAC/D,I,mCCpJV,QAAqF,uBAArF,EAA4H,uBAA5H,EAA2K,uBAA3K,EAAyN,uBAAzN,EAA4S,uBAA5S,EAA6e,uBC0V7e,GAAe1J,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEkU,EAAM,cAAEL,GAAe7T,EAChC,MAAM,gBAAE2pB,GAAoBrsB,EACtBiV,GAAOE,EAAAA,EAAAA,IAAWnV,EAAQ4W,GAC1B0V,GAAYpX,EAAAA,EAAAA,IAAS0B,GACrB0S,GAAaC,EAAAA,EAAAA,IAAiBvpB,EAAQ4W,GACtCzW,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQ4W,GAC1BkF,GAAmBvF,GAAiBtB,GAAQA,EAAK8B,QACjD,QAAEmK,EAAO,cAAED,IAAkBzgB,EAAAA,EAAAA,IAAeR,GAAQusB,YACpDnX,EAAUjV,GAAMiV,SACdK,SAAU+W,IAAmB9W,EAAAA,EAAAA,IAAyB1V,IAAW,CAAC,EACpE0f,EAAQtK,GAAWoX,EAAiBrsB,GAAMwf,SAAS6M,QAAkB5rB,EACrE6rB,EAAeH,GAAYtW,EAAAA,EAAAA,IAAmBhW,EAAQ4W,QAAUhW,EAChE8rB,EAAgBJ,OAAiD1rB,GAArCiV,EAAAA,EAAAA,IAAmB7V,EAAQ4W,GAE7D,MAAO,CACLyV,kBACApX,OACAqU,aACAnpB,OACAwsB,kBAAmBF,GAAcG,cACjCC,iBAAkBJ,GAAcK,aAChCC,kBAAmBN,GAAcO,cACjCC,iBAAkBP,GAAcI,aAChChR,kBACAoF,UACAD,mBACIvB,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,IAA0B7f,EAAQ4W,EAAQ4V,IAE5D,GA/BezsB,EArR2BoB,IAgBzC,IAhB0C,cAC9CoV,EAAa,aACb2T,EAAY,KACZjV,EAAI,WACJqU,EAAU,KACVnpB,EAAI,gBACJ2b,EAAe,gBACfuQ,EAAe,QACfnL,EAAO,cACPD,EAAa,MACbvB,EAAK,cACLE,EAAa,kBACb+M,EAAiB,iBACjBE,EAAgB,kBAChBE,EAAiB,iBACjBE,GACD9rB,EACC,MAAM,aACJqV,EAAY,gBACZkK,EAAe,iBACfwM,IACE1rB,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAI+V,GAAW3B,GAAQ,CAAC,GACxBpU,GAAIX,GAAWC,GAAQ,CAAC,EAC1BgtB,EAASlY,GAAMkY,QAAUhtB,GAAMgtB,QAAU9F,EAAAA,EACzC+F,GAAcC,EAAAA,EAAAA,GAAYnM,GAC1BoM,GAAoBD,EAAAA,EAAAA,GAAYpM,IAC/BsM,EAAmBC,IAAwBrjB,EAAAA,EAAAA,KAAS,GACrDsjB,EAAiBF,EAClB9rB,EAAKsD,MAAQ,oBAAsB,iBACpC,QAEG2oB,EAAmBC,KAAwBxjB,EAAAA,EAAAA,IAAS,GACrDyjB,GAAU9R,GAAmBqR,EAAOxoB,QAAU,GAA2B,IAAtB+oB,EACnDG,GAAS/R,GAAmBqR,EAAOxoB,QAAU,GAAK+oB,IAAsBP,EAAOxoB,OAAS,GAG9F/B,EAAAA,EAAAA,KAAU,KACJ0qB,QAAqC1sB,IAAhBwsB,QAAyCxsB,IAAZsgB,IACpDsM,GAAqB,GACrBG,GAAqBP,GACvB,GACC,CAAClM,EAASkM,EAAaE,KAG1B1qB,EAAAA,EAAAA,KAAU,KACJ8qB,EAAoBP,EAAOxoB,QAC7BgpB,GAAqBrhB,KAAKiD,IAAI,EAAG4d,EAAOxoB,OAAS,GACnD,GACC,CAAC+oB,EAAmBP,EAAOxoB,UAE9B/B,EAAAA,EAAAA,KAAU,KACgB,yBAApBypB,GAA8CzV,IAAWL,GAC3DC,EAAa,CAAEI,UACjB,GACC,CAACA,EAAQJ,EAAc6V,EAAiB9V,ICzH9B,SACb4W,EACAW,IAEAlrB,EAAAA,EAAAA,KAAU,KACRuqB,EAAO3qB,MAAMsrB,EAAcA,EAPL,GAOuC3e,SAAS8a,IAClD8D,EAAAA,GAA2B,QAAO9D,EAAMppB,cAExDktB,EAAAA,GAAmB,QAAO9D,EAAMppB,YAAa+E,EAAAA,GAAeC,QAC9D,GACA,GACD,CAACioB,EAAcX,GACpB,CD+GEa,CAAiBb,EAAQO,GAEzB,MAAMO,IAA0BtnB,EAAAA,EAAAA,IAAgB,KAC9C+Z,EAAgB,CACdO,cAAerK,GAAU1W,EACzBghB,QAASwM,EACTtlB,OAAQmO,EAAgB4K,EAAAA,GAAkB+M,eAAiB/M,EAAAA,GAAkBC,eAC7E,IAGE+M,IAAqBxnB,EAAAA,EAAAA,IAAgB,KACpCsO,GAELiY,EAAiB,CAAEkB,WAAYnZ,EAAKpU,IAAK,IAGrCwtB,IAAsB1nB,EAAAA,EAAAA,IAAgB,KACtCinB,KAGJJ,GAAqB,GACrBG,GAAqBD,EAAoB,GAAE,IAGvCY,IAAkB3nB,EAAAA,EAAAA,IAAgB,KAClCknB,KAGJL,GAAqB,GACrBG,GAAqBD,EAAoB,GAAE,IAuF7C,IAAwBa,GAAAC,GAvDxB,IAtBA5rB,EAAAA,EAAAA,KAAU,KACR,MAAM6rB,EAAUhS,SAASiS,cAA+B,IAAGznB,KAC3D,GAAKwnB,EAIL,OAAOzc,EAAAA,EAAAA,IAAcyc,EAAS,CAC5BE,wBAAyB,8BACzBC,QAASzJ,EAAAA,GAAe,CAACnU,EAAG6d,IACtBA,IAAcC,EAAAA,GAAeC,OAC/BV,MACO,GACEQ,IAAcC,EAAAA,GAAeE,OACtCV,MACO,QAIP1tB,GACJ,GACD,CAAC0tB,GAAiBD,KAEhBpZ,GAAS9U,EA0Ed,OAAIuf,EApEAtc,EAAAA,GAAAC,cAAA,OAAKjC,UDpM4qB,wBCqM/qBgC,EAAAA,GAAAC,cAACke,EAAAA,EAAS,CACR7B,MAAOA,EACP7Y,KApIe,IAqIfzF,UDxMovB,uBCyMpvB6tB,gBDzM4xB,uBC0M5xBC,aAAW,IAEb9rB,EAAAA,GAAAC,cAAA,MAAIjC,UD5M+sB,uBC4MjrB0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,IAAYgS,EAAAA,EAAAA,GAAW8M,EAAO5N,QAC1F1O,EAAAA,GAAAC,cAAA,KAAGjC,UD7My0B,wBC8Mz0Bwe,EAAgBne,EAAK,mBAAoBme,EAAe,KAAOne,EAAK,2BA+D3E2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,cAAeiT,GD9QxB,wBC+QjBzR,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAE1BwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,GA7DpB,WACE,KAAI6U,IAAoBqR,GAAUA,EAAOxoB,QAAU,GAInD,OACEvB,EAAAA,GAAAC,cAAA,OAAKjC,UD1NsU,wBC2NxU+rB,EAAO1qB,KAAI,CAAC0sB,EAAGzqB,IACdtB,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GD5NyV,uBC4NxToB,IAAMgpB,GD5N6V,4BCgO7Z,CAkDO0B,IACC7Y,GAAiBoW,GACjBvpB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACd2D,EACA2mB,IAAW3mB,IAGX7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,GACbxF,EAAKkrB,EAAkBjC,QAAU,uBAAyB,0BAIhEnU,GAAiBwW,GAChB3pB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACd2D,GACC2mB,IAAWC,KAAW5mB,IAGvB7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,EAA8B1D,QAnIxD,WACOqqB,KACLJ,GAAqB,GACrBG,GAAqBR,EAAOxoB,OAAS,GACvC,IAgIckpB,IACAzqB,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLwmB,MAAO8C,EACP3rB,UDxSoP,uBCySpPyF,KAAK,SAGRpF,EAAKsrB,EAAkBrC,QAAU,uBAAyB,0BAIjEtnB,EAAAA,GAAAC,cAACsgB,EAAAA,EAAU,CAACC,UAAW8J,EAAmBzP,KAAMwP,GAC7C4B,KAGDzB,IACAxqB,EAAAA,GAAAC,cAAA,UACEsiB,KAAK,SACL7gB,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAe2D,EDxTgf,wBCyT1gB,aAAYxF,EAAK,oBACjB8B,QAAS8qB,MAGXR,IACAzqB,EAAAA,GAAAC,cAAA,UACEsiB,KAAK,SACL7gB,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAe2D,EDjUikB,wBCkU3lB,aAAYxF,EAAK,QACjB8B,QAAS+qB,MAKflrB,EAAAA,GAAAC,cAAA,OAAKjC,UDxU0C,uBCwUlB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnDkQ,GAAQ9U,IACRiD,EAAAA,GAAAC,cAACme,EAAAA,EAAa,CACZhe,KAAOyR,GAAQ9U,EACf2pB,iBAAe,EACfL,gBA3Qc,GA4Qd3N,gBAAiBA,EACjBwT,mBAAoBnB,GACpBe,aAAW,EACXK,cAAY,KAGdzT,IA9FF7G,EAEA7R,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAe,UAAU8iB,EAAAA,EAAAA,IAAa9U,EAAMqU,IAAe,WACxFlmB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQklB,EAAAA,EAAAA,IAAcvoB,EAAMwT,EAAMqU,KAMxElmB,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAe,UAAWnC,IAAI,SAC5DsR,EAAAA,EAAAA,IAAcjW,GACVsB,EAAK,cAAiC,QAApB8sB,GAAEpuB,EAAM2hB,oBAAY,IAAAyM,GAAAA,GAAI,EAAG,KAC7C9sB,EAAK,UAA6B,QAApB+sB,GAAEruB,EAAM2hB,oBAAY,IAAA0M,GAAAA,GAAI,EAAG,SAhCnD,SAASa,GAAY9uB,GACnB,MAGMusB,IAHShR,GAAmBqR,EAAOxoB,OAAS,EAC9CwoB,EAAOO,QACP9sB,IAC0B+rB,GAAqBE,GAAoBI,GAAoBF,EAE3F,OACE3pB,EAAAA,GAAAC,cAACmsB,EAAY,CACX9rB,IAAKgqB,EACLzY,KAAMA,EACN9U,KAAMA,EACN8pB,MAAO6C,EACPhR,gBAAiBA,EACjBoO,aAAcppB,QAAQP,GAAY2pB,GAClC3mB,QAAS0qB,IAGf,CAmGQ,I,6HE7TV,MAqCA,GAAenuB,EAAAA,EAAAA,KArC2BqB,IAMpC,IANqC,SACzCsuB,EAAQ,mBACRC,EAAkB,UAClBtuB,EAAS,KACTyF,EAAI,oBACJmV,GACD7a,EACC,MAAMwuB,EAAW,eAAgBF,EAC3BG,GAAoB7tB,EAAAA,EAAAA,KAAQ,IAChC2tB,GAAoBG,MAAMC,IAAcC,EAAAA,EAAAA,IAAeD,EAAUL,SAAUA,MAC1E,CAACC,EAAoBD,IAClBO,EAAeJ,GAAmBK,YAAYpvB,GAC9C2J,GAAY9E,EAAAA,EAAAA,GAAU,WAAUsqB,KAAiBA,EAAcpqB,EAAAA,GAAeC,SAE9E9C,GAAuBwD,EAAAA,EAAAA,GAAmBiE,GAEhD,OAAImlB,EAEAvsB,EAAAA,GAAAC,cAAC6sB,EAAAA,EAAW,CACVC,WAAYV,EAASU,WACrB/uB,WAAWkC,EAAAA,EAAAA,GAAe,sBAAuBlC,GACjDyF,KAAMA,EACNupB,8BAA+BpU,IAMnC5Y,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,sBAAuBP,EAAsB3B,GACvE0F,MAAOD,EAAQ,UAASA,gBAAmBA,WAAWjG,EACtDoG,IAAKwD,GAAa6lB,EAClBpR,IAAK2Q,GAAmB9d,OACxB,G,6HCjCN,MAoGA,GAAehS,EAAAA,EAAAA,KApGmBqB,IAQ5B,IAR6B,OACjCuZ,EAAM,QACN4V,EAAU,WAAU,OACpBpwB,EAAM,MACN+pB,EAAK,WACLsG,EAAU,QACV5V,EAAO,oBACPC,GACDzZ,EACC,MAAM,eACJqvB,EAAc,WACdC,EAAU,mBACVC,EAAkB,sBAClBC,IACEnvB,EAAAA,EAAAA,OAEGovB,EAAgBC,IAAqB1mB,EAAAA,EAAAA,IAA0B,SAC/D4L,EAAa+a,IAAkB3mB,EAAAA,EAAAA,IAAS,IAEzC4mB,GAAepqB,EAAAA,EAAAA,IAAgB,KACnC,OAAQ2pB,GACN,IAAK,WACHE,EAAe,CAAED,WAAYA,EAAaS,OAAQJ,EAAgB7a,gBAClE4a,IACA,MACF,IAAK,OACHF,EAAW,CAAEvwB,SAAQ8wB,OAAQJ,EAAgB7a,gBAC7C,MACF,IAAK,QACH2a,EAAmB,CACjBxwB,SAAQ+pB,QAAO+G,OAAQJ,EAAgB7a,gBAI7C4E,GAAS,IAGLsW,GAAqBtqB,EAAAA,EAAAA,IAAiBwH,IAC1C0iB,EAAkB1iB,EAAyB,IAGvC+iB,GAA0BvqB,EAAAA,EAAAA,IAAiBqK,IAC/C8f,EAAe9f,EAAE8U,OAAO3X,MAAM,IAG1B1M,GAAOC,EAAAA,EAAAA,KAEPyvB,GAA8DpvB,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAEoM,MAAO,OAAQoL,MAAO9X,EAAK,2BAC7B,CAAE0M,MAAO,WAAYoL,MAAO9X,EAAK,+BACjC,CAAE0M,MAAO,cAAeoL,MAAO9X,EAAK,kCACpC,CAAE0M,MAAO,aAAcoL,MAAO9X,EAAK,kCACnC,CAAE0M,MAAO,YAAaoL,MAAO9X,EAAK,+BAClC,CAAE0M,MAAO,eAAgBoL,MAAO,iBAChC,CAAEpL,MAAO,kBAAmBoL,MAAO,oBACnC,CAAEpL,MAAO,QAASoL,MAAO9X,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZ6uB,IAA2BC,GACZ,SAAZD,IAAuBpwB,GACX,UAAZowB,KAAyBpwB,IAAW+pB,GAExC,OAGF,MAAMnY,EACFrQ,EADsB,aAAZ6uB,EACL,2BACA,qBAET,OACEltB,EAAAA,GAAAC,cAACuY,EAAAA,EAAK,CACJlB,OAAQA,EACRC,QAASA,EACTyW,QAAS1W,EAASqW,OAAenwB,EACjCga,oBAAqBA,EACrBxZ,UAAU,SACV0Q,MAAOA,GAEP1O,EAAAA,GAAAC,cAACguB,EAAAA,EAAU,CACTpT,KAAK,iBACLqT,QAASH,EACTtL,SAAUoL,EACVM,SAAUX,IAEZxtB,EAAAA,GAAAC,cAACslB,EAAAA,EAAS,CACRpP,MAAO9X,EAAK,iCACZ0M,MAAO4H,EACP8P,SAAUqL,IAEZ9tB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,SAAS/R,UAAU,wBAAwB2a,QAAM,EAACxY,QAASwtB,GACtEtvB,EAAK,sBAER2B,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACvC,UAAU,wBAAwB2a,QAAM,EAACxY,QAASoX,GAAUlZ,EAAK,YAErE,G,kNClEZ,MAAM+vB,EAA8B,CAClC,CAAE1f,MAAO,sBAAuB3D,MAAO,EAAGsjB,IAAK,MAC/C,CAAE3f,MAAO,sBAAuB3D,MAAO,EAAGsjB,IAAK,MAC/C,CAAE3f,MAAO,sBAAuB3D,MAAO,EAAGsjB,IAAK,OAC/C,CAAE3f,MAAO,qBAAsB3D,MAAO,EAAGsjB,IAAK,OAC9C,CAAE3f,MAAO,qBAAsB3D,MAAO,EAAGsjB,IAAK,SA4ShD,GAAe3xB,EAAAA,EAAAA,KAzSOqB,IAyBH,IAzBqF,QACtG8D,EAAO,KACP4B,EAAI,OACJ6qB,EAAM,MACN5f,EAAK,UACL1Q,EAAS,cACTuwB,EAAa,gBACb7V,EAAe,eACf8V,EAAc,WACdC,EAAU,oBACV7V,EAAmB,8BACnB8V,EAA6B,WAC7BtpB,EAAU,qBACVupB,EAAoB,cACpBC,EAAa,gBACbC,EAAe,qBACfC,EAAoB,QACpB3uB,EAAO,SACPklB,EAAQ,YACR0J,EAAW,cACXC,EAAa,oBACbC,EAAmB,kBACnBC,EAAiB,mBACjBC,EAAkB,mBAClBC,GACYrxB,EACZ,MAAM,eACJsxB,EAAc,iBACdvF,EAAgB,eAChBwF,EAAc,iBACdjc,IACEjV,EAAAA,EAAAA,MAEEqG,GAAM9D,EAAAA,EAAAA,IAAuB,MAE7B4uB,GAAU5uB,EAAAA,EAAAA,IAAuB,MACjCtC,GAAOC,EAAAA,EAAAA,KACPkxB,EAAiB3tB,EAAQ4tB,mBACzBC,GAAcC,EAAAA,EAAAA,GAAwBlrB,GAAM+qB,IAE5C,GACJ/xB,EAAE,cAAEmyB,EAAeC,UAAWC,EAAS,eAAEC,IACvCluB,EACEmuB,IAAYrB,GAAwBmB,EAEpCrW,IAAiBC,EAAAA,EAAAA,IAAkBjV,EAAKmU,GACxC5R,GAAayS,GACbwW,GAAaxW,KAAmB6U,EAEhC4B,IAA0BxW,EAAAA,EAAAA,IAAkBjV,EAAKiqB,IAEjD,kBACJyB,GAAiB,oBAAEC,GAAmB,wBACtCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBhsB,GACrBisB,GAA0BhzB,SAAS6wB,GAAiB6B,IAEpDO,IAAoBptB,EAAAA,EAAAA,IAAgB,IAAMkB,EAAItD,UAC9CyvB,IAAiBrtB,EAAAA,EAAAA,IAAgB,IAAMkB,EAAItD,QAAS0vB,QAAQ,mCAC5DC,IAAiBvtB,EAAAA,EAAAA,IAAgB,IAC9BirB,EAAiBe,EAAQpuB,QAAUsD,EAAItD,QAASmqB,cAAc,oCAKjE,UACJyF,GAAS,UAAEC,GAAS,iBAAEC,GAAgB,iBAAEC,GAAkBxtB,MAAOytB,KAC/DC,EAAAA,EAAAA,GACFhB,GACAO,GACAC,GACAE,IARgBO,KAAA,CAASC,WAAY9C,EAAgB+C,6BAA6B,OAYpF/xB,EAAAA,EAAAA,KAAU,KACJ2wB,GACFjB,MAEAC,KACF,GACC,CAACgB,GAAmBhB,EAAoBD,KAE3C1vB,EAAAA,EAAAA,KAAU,KACHia,IAAgB8W,IAAwB,GAC5C,CAACA,GAAwB9W,KAE5B,MAoBM+X,IAAoBjuB,EAAAA,EAAAA,IAAiBqK,IACzCA,EAAEM,kBACFN,EAAEyU,iBAEF4M,EAAqBptB,EAAQ,IAGzB4vB,IAA4BluB,EAAAA,EAAAA,IAAgB,KAChD0rB,EAAqBptB,EAAQ,IAGzB6vB,IAAsBnuB,EAAAA,EAAAA,IAAgB,KAC1CyrB,EAAentB,EAAQ,IAGnB8vB,IAAoBpuB,EAAAA,EAAAA,IAAgB,KACxCwrB,EAAaltB,EAAQ,IAGjB+vB,IAAkBruB,EAAAA,EAAAA,IAAgB,KACtCpD,IAAUklB,GAAU,EAAK,IAGrBwM,IAAsBtuB,EAAAA,EAAAA,IAAgB,KAC1CpD,IAAUklB,OAAU7nB,GAAW,EAAK,IAGhCs0B,IAAgBvuB,EAAAA,EAAAA,IAAgB,KACpC8rB,EAAe,CAAEU,mBAAiB,IAG9BgC,IAAgCxuB,EAAAA,EAAAA,IAAgB,SAACqK,GAA0C,IAAjB1F,EAAQQ,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,EACzFkF,EAAEyU,iBACFzU,EAAEM,kBAEFqiB,KACAnB,MACAE,EAAe,CACb0C,YAAanwB,EACbowB,QAASC,KAAKC,MAAQ,IAAOjqB,GAAWkqB,EAAAA,EAAAA,OAE5C,IAEMC,IAAyBtQ,EAAAA,IAAgBkN,EAEzCjgB,IAAgB9O,EAAAA,EAAAA,GACpB,gBACAC,GAAW,cACXiF,GAAc,WACdwqB,GAAiB,eACjB5xB,GAGIs0B,IAAmB3zB,EAAAA,EAAAA,KAAQ,KAC/B,IAAK+xB,IAA2BnC,GAAkBqB,IAAkBpB,EAAiB,MAAO,GAE5F,MAAM/I,EAAqB,GAE3B,OAAImK,GACFxB,EAA4BriB,SAASC,IACnCyZ,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACpyB,QAAS4xB,GAA+B1M,SAAUrZ,EAAKqiB,KAC9DhwB,EAAK2N,EAAK0C,MAAO1C,EAAKjB,MAAO,MAEjC,IAGI0a,IAGLuJ,GACFvJ,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,WAAW3V,QAASuxB,IAChCrzB,EAAK,kCAKR0wB,GACFtJ,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,WAAW3V,QAASwxB,IAChCtzB,EAAK,8BAKP2xB,IAAY7vB,IACVuY,GACH+M,EAAMjkB,KAAKxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACpyB,QAASyxB,GAAiB9b,KAAK,SAASzX,EAAK,sBAEpEonB,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACpyB,QAAS0xB,GAAqB/b,KAAK,YAC1CzX,EAAKqa,EAAkB,cAAgB,sBAK1C+V,GACFhJ,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACpyB,QAAS2xB,GAAehc,KAAK,YACpCzX,EAAK,qBAIR4wB,GACFxJ,EAAMjkB,KACJxB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,SAAS3V,QAASsxB,IAC9BpzB,EAAK,sBAILonB,EAAK,GACX,CACDiL,GAAyBnC,EAAeqB,EAAepB,EAAgBQ,EAAeD,EAAaiB,GACnG7vB,EAASsuB,EAAYQ,EAAqB8C,GAA+B1zB,EAAMqzB,GAC/EC,GAAmBjZ,EAAiBmZ,GAAqBD,GAAiBE,GAAeL,KAG3F,OACEzxB,EAAAA,GAAAC,cAAA,OACEwE,IAAKA,EACLzG,UAAWgR,GACXN,MAAOA,GAAU7M,GAAS2wB,MAC1B,kBAAiB/0B,EACjBg1B,YAjIqB7kB,KACvB8kB,EAAAA,EAAAA,GAAoC9kB,GACpCyiB,GAAwBziB,EAAE,EAgIxBzN,QAjJgBwa,KACdwV,KACAH,GACFlG,EAAiB,CAAE6I,eAAgB,qBAGjChE,EACFxuB,IAAUklB,GAEVhS,EAAiB,CACfxO,QAAS,8DAEb,EAsIE6a,cAAe4Q,IAEdJ,IACClwB,EAAAA,GAAAC,cAAC2yB,EAAAA,EAAW,CACVC,aAAcpuB,EACd5C,QAASA,EACTixB,SAAO,EACPrvB,KAAMA,EACNsvB,YAAU,EACVC,sBAAoB,EACpBlxB,QAASkF,GACTsnB,QAAS2B,GACTgD,qBAAmB,EACnBpE,gBAAiBA,EACjBC,qBAAsBA,EACtBY,YAAaA,KAGfd,GAAiBoB,IACjBhwB,EAAAA,GAAAC,cAAA,OACEjC,UAAU,kBAEVgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2BAGf4wB,GAAiBkB,IAAcE,IAC/BhwB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAGhBq0B,IACCryB,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLvC,UAAU,wBACV+R,MAAM,OACNvP,OAAK,EACL0yB,aAAW,EACX/yB,QAASqxB,IAETxxB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGhBN,QAAQ40B,GAAiB/wB,SACxBvB,EAAAA,GAAAC,cAACkzB,EAAAA,EAAI,CACH1uB,IAAK8qB,EACLjY,OAAQ6Y,GACRc,iBAAkBA,GAClBC,iBAAkBA,GAClBH,UAAWA,GACXC,UAAWA,GACXttB,MAAOytB,GACPnzB,UAAU,uBACVo1B,WAAS,EACT9B,WAAY9C,EACZjX,QAASgZ,GACT/Y,oBAAqBgZ,IAEpB8B,IAGD,G,uEClVV,MAqCA,GAAe51B,EAAAA,EAAAA,KAlCiBqB,IAQ1B,IAR2B,MAC/Bue,EAAK,UACLte,EAAS,gBACT6tB,EAAe,KACfpoB,EAAI,YACJqoB,EAAW,oBACXlT,EAAmB,QACnBzY,GACDpC,EACC,OAAIue,EAAM+W,aAXY,MAWG/W,EAAM+W,YAE3BrzB,EAAAA,GAAAC,cAAC6sB,EAAAA,EAAW,CACVC,WAAYzQ,EAAM+W,YAClBr1B,UAAWA,EACXyF,KAAMA,EACNupB,8BAA+BpU,EAC/B0a,UAAYxH,OAA2BtuB,EAnB5B,EAoBX2C,QAASA,IAMbH,EAAAA,GAAAC,cAACszB,EAAAA,EAAgB,CACfC,UAAWlX,EAAMkX,UACjB9kB,MAAO4N,EAAM5N,MACb6D,QAAS+J,EAAM7e,GACfO,UAAWA,EACX6tB,gBAAiBA,EACjB1rB,QAASA,GACT,G,oHC7BN,MAkBA,GAAezD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAEod,GAAcpd,EACvB,OAAKod,EAAalJ,OAMX,CAAEigB,YAFU1hB,EAAAA,EAAAA,IAAWnV,EAAQ8f,EAAalJ,SAH1C,CAAC,CAKW,GARL7W,EAlB4BoB,IAAkC,IAAjC,aAAE2e,EAAY,WAAE+W,GAAY11B,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KACPo1B,EAAiBD,IAAeA,EAAW9f,SAAUoD,EAAAA,EAAAA,IAAuB0c,GAC5ErtB,EAAU/H,EAAKqe,EAAayF,QAE/BwR,QAAQ,SAAU,IAClBA,QAAQ,UAAWjX,EAAa8V,OAAS,IAAIoB,OAEhD,OACE5zB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAgB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,QACpD+xB,GACC1zB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQ8N,EAAAA,EAAAA,GAAWkkB,IAEvD1zB,EAAAA,GAAAC,cAACoe,EAAAA,EAAY,CAACjY,QAASA,IACrB,I,sKCXR,MAyGA,GAAe1J,EAAAA,EAAAA,KA3FeqB,IAExB,IAFyB,QAC7B8G,EAAO,YAAEC,EAAW,YAAEma,EAAW,oBAAErG,EAAmB,eAAEib,GACzD91B,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIw1B,GAAgDC,EAAAA,EAAAA,IAAkBlvB,GAEtE,IAAKivB,EAAU,CACb,MAAM1f,GAAO4f,EAAAA,EAAAA,IAAsBnvB,GACnC,GAAIuP,EAAM,CACR,MAAM,IAAE6f,EAAG,OAAEC,GAAW9f,EAExB0f,EAAW,CACTK,SAAUD,EAAOP,QAAQ,QAAS,IAClCM,IAAKA,EAAI9P,SAAS,OAAS8P,EAAMA,EAAI9P,SAAS,KAAQ,UAAS8P,IAAS,UAASA,IACjFG,sBAAsBC,EAAAA,EAAAA,IAAexvB,KAAaovB,GAC9CK,EAAAA,EAAAA,GAAqBj2B,EAAMwG,OAASrH,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAM+2B,GAAqBhxB,EAAAA,EAAAA,IAAgB,KACzCswB,EAAehvB,EAAQpH,GAAIoH,EAAQ/H,OAAO,IAG5C,IAAKg3B,EACH,OAGF,MAAM,SACJK,EAAQ,IACRF,EAAG,WACHO,EAAU,MACV9lB,EAAK,YACLiE,EAAW,qBACXyhB,EAAoB,MACpBvN,EAAK,MACLtgB,GACEutB,EAEEW,GAAwB3vB,GAAe6N,IAAe+hB,EAAAA,EAAAA,GAAS/hB,EAvD/C,KAyDhB3U,GAAYkC,EAAAA,EAAAA,GAChB,uBACE2mB,IAAUtgB,GAAU,iBAGlBouB,EAAkBV,EAAIN,QAAQ,UAAW,KAAOa,EAEtD,OACEx0B,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX,gBAAem2B,GAAYK,GAAY,GACvC9yB,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBqpB,GACC7mB,EAAAA,GAAAC,cAAC20B,EAAAA,EAAK,CAAC/vB,QAASA,EAASoa,YAAaA,EAAarG,oBAAqBA,IAE1E5Y,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CAAC9N,MAAOtD,EAAKsD,MAAO3D,UAAU,aAAamC,QAASo0B,IACtD/kB,EAAAA,EAAAA,GAAWd,GAASylB,GAAYK,KAEjCC,GAAwBL,IACxBp0B,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CAAC9N,MAAOtD,EAAKsD,MAAO3D,UAAU,mBAAmBmC,QAASo0B,GAC5DH,GAAyBK,IAAwBjlB,EAAAA,EAAAA,GAAWilB,IAGjEz0B,EAAAA,GAAAC,cAAC40B,EAAAA,EAAQ,CACPZ,IAAKA,EACLj2B,UAAU,YACVyC,KAAMk0B,EACNhzB,MAAOtD,EAAKsD,QAEbmD,GAAe9E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAewR,EAAAA,EAAAA,GAAW1K,KAE1DA,GACC9E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACwP,EAAAA,EAAI,CACHzR,UAAU,OACVmC,QAASo0B,EACT5yB,MAAOtD,EAAKsD,QAEX+N,EAAAA,EAAAA,IAAoBrR,EAAqB,IAAfwG,EAAQI,QAIrC,G,mGC/GH,SAAS6vB,EACdjwB,EACAkwB,EACAC,EACAC,EACAC,EACAjW,EACAkW,GAEA,MAAM,KAAE10B,EAAI,SAAE20B,GAAavwB,EAAQuB,QAAQ3F,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAM40B,GAA0BhB,EAAAA,EAAAA,IAAexvB,GAC/C,OAAOwwB,EAA0B,EAACX,EAAAA,EAAAA,GAASW,EAAyBH,SAAmB13B,CACzF,CAEA,OAAO83B,EAAAA,EAAAA,GAAuB,CAC5B70B,MAAMi0B,EAAAA,EAAAA,GAASj0B,EAAMy0B,GACrBE,WACAL,YACAC,YACAG,qBACA3mB,UAAW3J,EAAQpH,GACnBw3B,WACAhW,eAEJ,CAGO,SAASqV,EACdj2B,EACAwG,GAIY,IAHZ0wB,EAAO7sB,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACPqsB,EAAkBrsB,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAClB03B,EAAcxsB,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG8sB,EAAAA,GAEjB,MAAM,SAAEJ,GAAavwB,EAAQuB,QAAQ3F,MAAQ,CAAC,EAExCg1B,EAAcL,GAAUM,MAAM9nB,GAAMA,EAAE2U,OAASoT,EAAAA,GAAsBC,UACrEC,EAAiBT,GAAUM,MAAM9nB,GAAMA,EAAE2U,OAASoT,EAAAA,GAAsB7I,cAC9E,IAAK2I,IAAgBI,EAAgB,CACnC,MAAMp1B,GAAOi0B,EAAAA,EAAAA,IAASoB,EAAAA,EAAAA,IAAsBz3B,EAAMwG,EAAS0wB,GAAUL,GAErE,OAAIH,GACKvlB,EAAAA,EAAAA,GAAW/O,EAAM,CAAC,QAAS,aAAc,CAAEs0B,eAE3CvlB,EAAAA,EAAAA,GAAW/O,EAEtB,CAEA,MAAM+xB,GAAS+C,IAAWQ,EAAAA,EAAAA,IAAuBlxB,GAC3CmxB,EAAiBxD,EAAS,GAAEA,KAAW,GAEvC/xB,EAAOq0B,EAAkBjwB,EAASkwB,OAAWv3B,GAAW,EAAM03B,GAC9DviB,GAAcsjB,EAAAA,EAAAA,IAA6B53B,EAAMwG,EAASpE,GAEhE,MAAO,KACF+O,EAAAA,EAAAA,GAAWwmB,MACV/sB,MAAMitB,QAAQvjB,GAAeA,EAAc,CAACA,IAChDpT,OAAO7B,QACX,C,wECrEA,MAQA,EAR4CkE,IAC1C,MAAM,OAAE0V,GAAW1V,EACbu0B,GAAkBC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBhf,GAG3E,OAAO6e,EAAkBn2B,EAAAA,GAAAC,cAACk2B,EAAoBv0B,QAAYpE,CAAS,C,wECLrE,MAQA,EAR0CoE,IACxC,MAAM,OAAE0V,GAAW1V,EACb20B,GAAgBH,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBhf,GAGvE,OAAOif,EAAgBv2B,EAAAA,GAAAC,cAACs2B,EAAkB30B,QAAYpE,CAAS,C,mHCejE,MAyGA,GAAed,EAAAA,EAAAA,KAzGiBqB,IAE1B,IAF2B,MAC/Bue,EAAK,KAAEvf,EAAI,SAAEy5B,EAAQ,QAAEvkB,EAAO,4BAAEwkB,EAA2B,eAAEC,EAAc,YAAEC,GAC9E54B,EACC,MAAM,oBACJ64B,EAAsB,EAAC,qBAAEC,EAAuB,GAC7C95B,EAAKiV,QAAiB,CAAC,EAARjV,EAEd+5B,GAAmBN,GAAYla,IAAUoa,EACzC1kB,EAAUjV,EAAKiV,UAAYsK,EAC3Bya,GAAmBp4B,EAAAA,EAAAA,KAAQ,IAC/BqT,GAAWjV,GAAMwf,OAASrd,OAAOC,OAAOpC,EAAKwf,QAAQhd,QAAOD,IAAA,IAAC,YAAE03B,GAAa13B,EAAA,OAAK03B,CAAW,SAAIx5B,GAC/F,CAACT,EAAMiV,IAEJglB,GAAcr4B,EAAAA,EAAAA,KAAQ,IAC1BqT,EAEMC,GAAW8kB,GAAkBx3B,QAAQ03B,IAAwB,IAAhBA,EAAIhlB,UAAmB1Q,QACnEw1B,GAAkBx1B,QACpB+a,GAASvf,GAAMi6B,aACnB,CAACj6B,EAAMuf,EAAOya,EAAkB/kB,EAASC,IAEtCilB,GAAgBv4B,EAAAA,EAAAA,KAAQ,KAC5B,MAAMw4B,EAAyBp6B,EAAKwf,QAC/Brd,OAAOC,OAAOpC,EAAKwf,QAAQmZ,MAAMuB,GAAQA,EAAIhlB,SAAWglB,EAAID,cAEjE,OAAO/kB,GAAYlV,EAAKwf,SAAW4a,CAAuB,GACzD,CAACp6B,EAAMkV,IAEJmlB,GAAgB9a,GAAgBvf,EAAKq6B,cAMrCC,IAJsBC,EAAAA,EAAAA,IAC1B,KAAOC,EAAAA,EAAAA,IAASZ,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCj5B,QACtCs5B,GAAeJ,GAAuBQ,GAAiBZ,GAAYK,GAChEC,GAGCU,EAAW95B,QAAQs5B,GAAeI,GAClCp5B,GAAYkC,EAAAA,EAAAA,GAChB,YACAg3B,GAAiB,SAChBM,GAAYhB,GAAY,SACzBgB,GAAY,UAsDd,OACEx3B,EAAAA,GAAAC,cAACw3B,EAAAA,EAAc,CAAClL,UAAQ,EAACvuB,UAAU,uBAAuBsZ,OAAQ+f,GApDpE,WACE,MAAMK,EAAyBb,GAC7B72B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsBg3B,GAAiB,UACpEl3B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIX25B,EAAwBf,GAC5B52B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAIX45B,EAAuBd,GAC3B92B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsBg3B,GAAiB,WAGlEW,EAAsBT,GAAiBJ,EAC3Ch3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,IACZo5B,GAAiBp3B,EAAAA,GAAAC,cAAC63B,EAAAA,EAAe,CAACr3B,MAAMs3B,EAAAA,EAAAA,IAAqBf,WAE/Dx5B,EAEEw6B,EAAgBxB,IAAaqB,IAAuBF,IAA0BD,GAClF13B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2BAIXqD,EAAW,CACfu2B,EAAsBF,EAAwBC,EAAuBE,EAAoBG,GACzFz4B,OAAO7B,SAET,GAAwB,IAApB2D,EAASE,OAEb,OAAwB,IAApBF,EAASE,OAAqBF,EAAS,GAEvCo1B,EACgC,CAChCkB,EAAuBE,EAAoBH,EAAwBM,GACnEz4B,OAAO7B,SACwB,GAIjCsC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACZqD,EAGP,CAIK42B,GACc,G,gSCzGrB,MAAMC,EAAa,IAAIC,KAEvBC,EAAAA,EAAAA,KAAax7B,IACX,IAAK,MAAOy7B,GAAU,OAAEC,MAAaJ,EACnCI,EAAOD,EAASz7B,GAClB,I,kJC3BF,QAAkG,uBCgClG,GAAeF,EAAAA,EAAAA,KArBsBqB,IAI/B,IAJgC,WACpCqH,EAAU,SACVjI,EAAQ,SACRwJ,GACD5I,EACC,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDjBG,uBCmBjB/C,GDnB8J,uBCoB9JiI,IAAeuB,GDpB+G,yBCuB9H3G,EAAAA,GAAAC,cAAA,OAAKjC,UDvB+C,wBCwBlDgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,IAChB7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,IAChB7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,KAEd,I,eCuEV,MAyOA,GAAenH,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EACjB,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAChC,IAAKC,EACH,MAAO,CAAC,EAGV,MAAM,SAAEw7B,EAAQ,iBAAEC,EAAgB,WAAEC,GAAe17B,EAAK27B,aAAe,CAAC,EAClEC,EAAoBJ,GACrBxmB,EAAAA,EAAAA,IAAWnV,EAAQ27B,KAAav7B,EAAAA,EAAAA,IAAWJ,EAAQ27B,QAAa/6B,EAC/Do7B,EAAoB77B,EAAK27B,aAAcG,EAAAA,EAAAA,IAAiB97B,EAAK27B,kBAAel7B,EAC5Es7B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkBn8B,EAAQG,EAAKU,GAAI+6B,QACnCh7B,GACIw7B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjGQ,GAAoB3iB,EAAAA,EAAAA,IAAqB1Z,IAE7CD,OAAQu8B,EACRhnB,SAAUinB,EACV/W,KAAMgX,IACJjnB,EAAAA,EAAAA,IAAyB1V,IAAW,CAAC,EACnCwI,EAAatI,IAAWu8B,GAAiBC,IAAoBtlB,EAAAA,GAC7DwlB,EAAmBz8B,EAAKiV,SAAWlV,IAAWu8B,GAC/Cv8B,KAAWM,EAAAA,EAAAA,IAAeR,GAAQ68B,iBAEjC5nB,EAAOunB,GAAoBrnB,EAAAA,EAAAA,IAAWnV,EAAQw8B,QAAqB57B,EACnE0oB,EAAakT,GAAoBjT,EAAAA,EAAAA,IAAiBvpB,EAAQw8B,QAAqB57B,EAC/Ek8B,EAAmB38B,EAAK27B,cAAeiB,EAAAA,EAAAA,IAAuB/8B,EAAQG,EAAK27B,aAE3Ehc,GAAekd,EAAAA,EAAAA,IAAkBh9B,EAAQE,EAAQkX,EAAAA,GAAgB,gBAEvE,MAAO,CACLjX,OACAkV,SAASC,EAAAA,EAAAA,IAAkBnV,GAAMoV,EAAAA,EAAAA,IAAqBvV,IAASwV,EAAAA,EAAAA,IAAuBxV,IACtF+7B,oBACAM,sBACAE,qBACAL,sBACAe,OAAOC,EAAAA,EAAAA,IAAYl9B,EAAQE,EAAQkX,EAAAA,IACnC5O,aACAo0B,kBACAO,kBAAkBC,EAAAA,EAAAA,IAAuBp9B,GACzCq9B,cAAe70B,GAAkC,WAApBm0B,EAC7BW,iBAAkBt9B,EAAOu9B,YAAYC,YAAY74B,QAAU,GAAK,KAC5Dk3B,GAAc17B,EAAK27B,aAAe,CACpC2B,2BAA2BC,EAAAA,EAAAA,IAAqB19B,EAAQG,EAAK27B,cAE/D7mB,OACAqU,aACAwT,mBACAhd,eACA6d,yBAAyBt5B,EAAAA,EAAAA,IAA0BrE,GACpD,GApDeD,EAzOoBoB,IA2BlC,IA3BmC,OACvCjB,EAAM,SACN09B,EAAQ,UACRC,EAAS,cACTC,EAAa,SACblE,EAAQ,oBACR5d,EAAmB,KACnB7b,EAAI,QACJkV,EAAO,KACPJ,EAAI,WACJqU,EAAU,oBACV+S,EAAmB,kBACnBN,EAAiB,0BACjB0B,EAAyB,oBACzBvB,EAAmB,mBACnBK,EAAkB,UAClBwB,EAAS,MACTd,EAAK,wBACLU,EAAuB,WACvBn1B,EAAU,gBACVo0B,EAAe,iBACfO,EAAgB,cAChBE,EAAa,gBACbC,EAAe,iBACfR,EAAgB,aAChBhd,EAAY,YACZke,IACD78B,EACC,MAAM,SACJ88B,GAAQ,iBACRC,GAAgB,WAChBC,GAAU,eACVC,GAAc,gBACdC,KACE78B,EAAAA,EAAAA,OAEE,SAAEuI,KAAaC,EAAAA,EAAAA,OACds0B,GAAmBC,GAAiBC,KAAoBr6B,EAAAA,EAAAA,MACxDs6B,GAAiBC,GAAeC,KAAkBx6B,EAAAA,EAAAA,MAClDy6B,GAAuBC,GAAqBC,KAAwB36B,EAAAA,EAAAA,MACpE46B,GAAmBC,GAAiBC,KAAoB96B,EAAAA,EAAAA,MACxD+6B,GAAyBC,GAAuBC,KAA2Bj7B,EAAAA,EAAAA,MAC3Ek7B,GAAuBC,GAAqBC,KAAyBp7B,EAAAA,EAAAA,MACrEq7B,GAA6BC,GAA2BC,KAA+Bv7B,EAAAA,EAAAA,MACvFw7B,GAAyBC,GAAuBC,KAA2B17B,EAAAA,EAAAA,MAE5E,YAAE23B,GAAW,QAAE1mB,IAAYjV,GAAQ,CAAC,GAEpC,eAAE2/B,GAAc,IAAEj4B,KAAQk4B,EAAAA,EAAAA,GAAiB,CAC/C5/B,OACAD,SACA47B,eACAhc,eACAmd,QACAf,sBACAG,sBACAE,qBACAO,mBACAf,oBACA/f,sBACA8hB,gBACAH,0BACAE,cAGImC,GHtIR,SAA0CvE,GACxC,IAAIwE,EAAQ3E,EAAW4E,IAAIzE,GAE3B,IAAKwE,EAAO,CACV,MAAOE,EAAQzE,IAAU0E,EAAAA,EAAAA,IAAa3E,GAASx5B,EAAAA,EAAAA,QAC/Cg+B,EAAQ,CAAEI,aAAc,EAAGF,SAAQzE,UACnCJ,EAAWgF,IAAI7E,EAAUwE,EAC3B,CAcA,OAZAM,EAAAA,EAAAA,IAAc,KACZN,EAAOI,eAEA,KACLJ,EAAOI,eAEFJ,EAAOI,cACV/E,EAAWkF,OAAO/E,EACpB,KAIGwE,EAAME,MACf,CGgHgCM,CAAkBC,EAAAA,IAE1C3iB,IAAcpX,EAAAA,EAAAA,IAAgB,KAC9ByO,GACE+nB,EACFkB,QAAgBz9B,EAAW,CAAE+/B,uBAAuB,IAEpDvC,GAAe,CAAEl+B,UAAU,CAAEygC,uBAAuB,KAMxD1C,GAAS,CAAEp9B,GAAIX,EAAQ0gC,sBAAsB,GAAQ,CAAED,uBAAuB,IAE1En4B,GAAc60B,GAChBa,KACF,IAGI2C,IAAkBl6B,EAAAA,EAAAA,IAAiBqK,IACvCA,EAAEyU,iBACFuY,KAAc99B,EAAO,IAGjB4gC,IAAen6B,EAAAA,EAAAA,IAAgB,KACnCw4B,KACAZ,IAAiB,IAGbwC,IAAap6B,EAAAA,EAAAA,IAAgB,KACjC24B,KACAZ,IAAe,IAGXsC,IAAyBr6B,EAAAA,EAAAA,IAAgB,KAC7C84B,KACAZ,IAAqB,IAGjB9N,IAAepqB,EAAAA,EAAAA,IAAgB,KACnCi5B,KACAZ,IAAiB,IAGbiC,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3C/gC,OACA8U,OACA6rB,gBACAC,cACAC,0BACAjQ,gBACA6M,WACAhE,WACAvkB,UACAioB,oBAGIzgB,IAAiBC,EAAAA,EAAAA,IAAkBjV,GAAK1H,EAAO6b,OAAsBpb,IAG3EgC,EAAAA,EAAAA,KAAU,KACJia,IAAkBzH,IAAWjV,QAAgCS,IAAxBT,EAAKghC,gBAC5ChD,GAAW,CAAEj+B,UACf,GACC,CAACC,EAAMD,EAAQkV,GAASyH,KAE3B,MAAMukB,GAAWnsB,GAAQqU,IAAcS,EAAAA,EAAAA,IAAa9U,EAAMqU,IAClD+X,cAAeC,KAAwBt+B,EAAAA,EAAAA,GAAkBo+B,IAEjE,IAAKjhC,EACH,OAGF,MAAMqD,GAAOyR,GAAQ9U,EAEfiB,IAAYkC,EAAAA,EAAAA,GAChB,4BACA4R,EAAAA,EAAAA,IAAShV,GAAU,UAAY,QAC/BkV,IAAW,QACX5M,GAAc,WACdo0B,GAAmB,kBAGrB,OACEx5B,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACPpR,IAAKA,GACLzG,UAAWA,GACX2X,KAAMwoB,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBthC,EAAQ,SAAUkX,EAAAA,WAAoBxW,EAClGkG,MAAQ,QAAOi3B,MACf7qB,QAASkC,KAAYrL,GACrBk3B,eAAgBA,GAChB19B,QAASwa,GACTigB,YAAa6C,GACbY,mBAAiB,GAEjBr+B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,UACbgC,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLD,KAAMA,GACNsY,gBAAiB7G,GAAM8B,SAEzB3T,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBg+B,IAAuB,yBACvEl+B,EAAAA,GAAAC,cAACq+B,EAAAA,EAAS,CAACvhC,KAAMA,EAAMkV,QAASA,EAASwkB,6BAA2B,EAACE,YAAaiG,MAEnF7/B,EAAKe,cAAgBf,EAAKc,gBACzBmC,EAAAA,GAAAC,cAACs+B,EAAc,CAAC53B,SAAUA,GAAUvB,WAAYA,EAAYjI,SAAUo9B,KAG1Ev6B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAACme,EAAAA,EAAa,CACZhe,KAAMA,GACNsmB,iBAAe,EACfhO,gBAAiB5b,IAAW+U,GAAMpU,IAAMoU,GAAM8B,OAC9CiF,oBAAqBA,IAEtB3G,GAAWjS,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACzBgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdjB,EAAK27B,aACJ14B,EAAAA,GAAAC,cAACu+B,EAAAA,EAAe,CACd35B,QAAS9H,EAAK27B,YACd5Z,eAAgBub,KAItBr6B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ0+B,KACD18B,EAAAA,GAAAC,cAACq+B,EAAAA,EAAS,CAACvhC,KAAMA,EAAMy5B,SAAUA,EAAUvkB,QAASA,MAGvD6pB,IACC97B,EAAAA,GAAAC,cAACw+B,EAAAA,EAAe,CACdnnB,OAAQ4jB,GACR3jB,QAAS6jB,GACT5jB,oBAAqBwkB,GACrBj/B,KAAMA,IAGTk/B,IACCj8B,EAAAA,GAAAC,cAACs2B,EAAAA,EAAa,CACZjf,OAAQ+jB,GACR9jB,QAASgkB,GACT/jB,oBAAqB2kB,GACrBr/B,OAAQA,IAGXs/B,IACCp8B,EAAAA,GAAAC,cAACk2B,EAAAA,EAAe,CACd7e,OAAQkkB,GACRjkB,QAASmkB,GACTlkB,oBAAqB8kB,GACrBx/B,OAAQA,IAGXy/B,IACCv8B,EAAAA,GAAAC,cAACy+B,EAAAA,EAAW,CACVpnB,OAAQqkB,GACRpkB,QAASskB,GACTrkB,oBAAqBilB,GACrB3/B,OAAQA,EACRowB,QAAQ,SAGH,K,mCCxUf,MCqEA,GAAexwB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA2C,IAAzC,SAAEk7B,EAAQ,WAAEmE,GAAYr/B,EAGxE,MAAO,CACLs/B,WAHiBpE,GAA2B,WAAfmE,GAA0BE,EAAAA,EAAAA,IAAiBjiC,EAAQ49B,QAAYh9B,EAI5FshC,eAAeC,EAAAA,EAAAA,IAAoBniC,EAAQ,MAC5C,GANiBD,EAvC2BoB,IAEzC,IAF0C,WAC9C6gC,EAAU,cAAEE,EAAa,gBAAEE,EAAe,uBAAEC,GAC7ClhC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,SAAEqI,IAAaC,EAAAA,EAAAA,MAEfs4B,GAAmB1gC,EAAAA,EAAAA,KAAY,KACnCwgC,EAAgB,CAAEzc,KAAM,aAAc4c,QAASP,IAC/CK,EAAuBG,EAAAA,GAAgBC,8BAA8B,GACpE,CAACT,EAAYI,EAAiBC,IAEjC,OACEj/B,EAAAA,GAAAC,cAAA,OAAKjC,UD1Cc,wBC2CjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UD3C6C,wBC4C/C8gC,GAAiB9+B,EAAAA,GAAAC,cAACq/B,EAAAA,EAAuB,CAACz9B,QAASi9B,EAAer7B,KAhBzD,MAkBZzD,EAAAA,GAAAC,cAAA,MAAIjC,UD9C6E,uBC8CpD0D,IAAI,QAAQrD,EAAK,2BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,UD/CmH,uBC+CpF0D,IAAI,QACnCrD,EAAKugC,EAAa,mCAAqC,mBAEzDA,GACC5+B,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLuP,QAASnJ,EACT44B,OAAK,EACLC,MAAI,EACJr/B,QAAS++B,EACTz7B,KAAK,UACL9B,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5DwT,wBC6D1TK,EAAK,sCAIR,K,+CCjEV,SAAgB,KAAO,uBAAuB,UAAY,uBAAuB,OAAS,uBAAuB,MAAQ,uBAAuB,eAAe,uBAAuB,YAAc,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,cAAgB,uBAAuB,OAAS,uBAAuB,aAAe,uBAAuB,OAAS,wBCqK3a,GAAe3B,EAAAA,EAAAA,KAzIeqB,IAIxB,IAJyB,gBAC7B0hC,EAAe,YACf7E,EAAW,QACXz6B,GACDpC,EACC,MAAM,sBAAE2hC,IAA0BthC,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEPqhC,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAqBF,EAAeD,EAAAA,MAAqBI,WAEzDC,GAAevhC,EAAAA,EAAAA,KAAQ,KAC3B,IAAKghC,GAAgBp+B,OAAQ,OAAOlD,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAO4gC,EAAevgC,MAAM,EAnBV,GAmB4BC,KAAI,CAACvC,EAAQwE,EAAG6+B,KAC5D,MAAM1V,EAASnpB,IAAM6+B,EAAI5+B,OAAS,EAC5BxE,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAM2R,GAAQqJ,EAAAA,EAAAA,GAAa1Z,EAAMtB,GAEjC,OACEiD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAO9G,KAAMijC,GAAsBjjC,EAAKi6B,aAAenzB,EAAOu8B,UAC3F5wB,EAAAA,EAAAA,GAAWd,IAEb+b,EAAS,GAAK,KACd,GAEL,GACD,CAACkV,EAAgBthC,EAAM2hC,IAEpBnC,GAAiBl/B,EAAAA,EAAAA,KAAQ,KAC7B,MAAM0hC,GAAkBZ,EAAgBra,aAAe,CACrD1W,MAAOrQ,EAAK,gCACZyX,KAAM,WACNwqB,QAASA,KACPZ,EAAsB,CAAEta,aAAa,GAAO,GAI1Cmb,EAAed,EAAgBra,aAAe,CAClD1W,MAAOrQ,EAAK,8BACZyX,KAAM,SACNwqB,QAASA,KACPZ,EAAsB,CAAEta,aAAa,GAAQ,GAYjD,OAAOob,EAAAA,EAAAA,IAAQ,CAACH,EAAgBE,GAAc,GAC7C,CAACd,EAAgBra,YAAa/mB,EAAMqhC,IAEjCjC,GAAkBj/B,EAAAA,EAAAA,KAAaoP,IACnCA,EAAEyU,iBACFuY,KAAe,GACd,CAACA,IAiDJ,OACE56B,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACP1V,QAASA,EACTy6B,YAAa6C,EACbz/B,WAAWkC,EAAAA,EAAAA,GACT2D,EAAOuN,KACPquB,EAAgBra,aAAevhB,EAAO48B,UACtC,sBACA,oBACA,oBAEFC,gBAAiB78B,EAAOuK,OACxByvB,eAAgBA,EAChBQ,mBAAiB,GAEhBoB,EAAgBra,YA5DjBplB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAO88B,KAAM,SAC1C3gC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAAS2D,EAAO6K,QAC7C1O,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAOgX,KAAM,aACpD7a,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAOiS,KAAM,OAAQ,yBACjDzX,EAAK,mBAGV2B,EAAAA,GAAAC,cAAC2gC,EAAAA,EAAK,CACJ5iC,UAAW6F,EAAOmzB,YAClBv2B,KAAMu/B,GAAqBjI,EAAAA,EAAAA,IAAqBiI,QAAsBxiC,MAS5EwC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU2D,EAAOg9B,gBAC9C7gC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU2D,EAAOwN,SAC9CrR,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAGjBgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAO88B,KAAM,SAC1C3gC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAAS2D,EAAO6K,QAC7C1O,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAOgX,KAAM,aAAcxc,EAAK,oBAG7E2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU2D,EAAOi9B,eAC7CZ,GAEHlgC,EAAAA,GAAAC,cAAC2gC,EAAAA,EAAK,CACJ5iC,UAAW6F,EAAOmzB,YAClBv2B,KAAMu/B,GAAqBjI,EAAAA,EAAAA,IAAqBiI,QAAsBxiC,OAwBrE,I,gBC/Gf,MAEMujC,GAAmB,IAAIh+B,IAAI,CAAC,IAAK,MACjCi+B,GAAsB,GAC5B,IAAIC,GAEJ,MA0QA,IAAevkC,EAAAA,EAAAA,KA1QgBqB,IAWzB,IAX0B,WAC9B4gC,EAAU,SACVnE,EAAQ,SACRr9B,EAAQ,iBACR48B,EAAgB,kBAChBmH,EAAiB,gBACjBzB,EAAe,gBACfT,EAAe,uBACfC,EAAsB,0BACtBkC,EAAyB,oBACzBC,GAAsB,GACvBrjC,EACC,MAAM,SAAE88B,EAAQ,aAAEwG,EAAY,gBAAEpG,IAAoB78B,EAAAA,EAAAA,MAE9Cy0B,GAAelyB,EAAAA,EAAAA,IAAuB,MACtC2gC,GAAsB3gC,EAAAA,EAAAA,KAAO,GAC7B4gC,GAAc5gC,EAAAA,EAAAA,KAAY,GAE1B6gC,EACW,QAAf7C,EAAuB8C,EAAAA,IAA+B,aAAf9C,EAA4BkB,EAAAA,IAAqBrF,EAGpFkH,EAAsC,QAAf/C,GAAwBuC,EAE/C9G,GAAawF,EAAAA,EAAAA,IAA8B4B,GAE3CG,GAAevH,GAAY74B,QAAU,GAAKqgC,EAAAA,IAC1CC,EAAgBH,EAClBjC,EAAgBra,YAAc0c,EAAAA,IAA2BF,EAAAA,IAAiB,GAExE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAa7H,GACnD8H,EAAiBC,eAAeC,QAAQ,mBAEvCpd,EAAaC,IAAWC,EAAAA,EAAAA,QAAkB1nB,EAAW48B,OAAY58B,EAAW6kC,EAAAA,MAEnF7iC,EAAAA,EAAAA,KAAU,KAEJqzB,EAAa1xB,SACf2iB,YAAW,KACU,aAAf6a,GACF9L,EAAa1xB,SAASmhC,SAAS,CAAEpiB,IAAK,GACxC,GACC,IACL,GACC,CAAC2S,EAAcqP,EAAgBvD,KAGlC4D,EAAAA,EAAAA,GAAWplC,GAAYi9B,GAAY74B,OAAS,CAC1C,cAAgBqM,IACdA,EAAEyU,iBACFgf,EAAa,CAAEmB,kBAAmB,EAAGpI,cAAa,EAEpD,gBAAkBxsB,IAChBA,EAAEyU,iBACFgf,EAAa,CAAEmB,iBAAkB,EAAGpI,cAAa,QAEjD58B,IAGJgC,EAAAA,EAAAA,KAAU,KACR,GAAKrC,GAAai9B,GAAeqI,EAAAA,GA2BjC,OAFAppB,SAASqpB,iBAAiB,UAAWC,GAE9B,KACLtpB,SAASupB,oBAAoB,UAAWD,EAAc,EAxBxD,SAASA,EAAc/0B,GACrB,IAAMi1B,EAAAA,IAAaj1B,EAAEk1B,UAAcD,EAAAA,IAAaj1B,EAAEm1B,UAAan1B,EAAEo1B,KAAKC,WAAW,SAAU,CACzF,MAAO,CAAEC,GAASt1B,EAAEo1B,KAAKG,MAAM,cAAgB,GAC/C,IAAKD,GAASnC,GAAiB79B,IAAIggC,GAAQ,OAE3C,MAAME,EAAkB1B,IAAyBjC,EAAgBra,YAE3Die,EAAQD,GAAmB,EAAI,EAC/BE,EAAWC,OAAOL,GAASG,EAAQ,EAEzC,GAAID,IAAiC,IAAdE,EAErB,YADAnC,EAA0BqC,EAAAA,GAAkBC,UAI9C,GAAIH,EAAWlJ,EAAY74B,OAAS,EAAG,OAEvCs5B,EAAS,CAAEp9B,GAAI28B,EAAYkJ,GAAW9F,sBAAsB,GAC9D,CACF,CAMC,GACA,CAACiC,EAAiBtiC,EAAUgkC,EAA2BtG,EAAUwG,EAAcjH,EAAYsH,IAE9F,MAAM,QAAEgC,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/Q,EACTgR,WApG0B,MAuGtBC,GAAsBvgC,EAAAA,EAAAA,IAAgB,MAC1C1E,EAAAA,EAAAA,MAAYklC,mBAAoB,EAChC5C,EAA0BqC,EAAAA,GAAkBC,UAC5CxI,GAAiB,IAGb+I,GAA0BzgC,EAAAA,EAAAA,IAAgB,KAC1C+9B,EAAoBngC,QACtBmgC,EAAoBngC,SAAU,EAGhC2iC,GAAqB,IAGjBrG,GAAkBwG,EAAAA,EAAAA,IAAsBnnC,IACxCwkC,EAAoBngC,QACtBmgC,EAAoBngC,SAAU,EAGhC05B,EAAS,CAAEp9B,GAAIX,EAAQ0gC,sBAAsB,GAAO,GACnD,CAAC3C,GA1HsB,KA0HU,GAE9BqJ,GAAkB3gC,EAAAA,EAAAA,IAAiBqK,IACvC,MAAMmS,EAAOnS,EAAEoS,cAAclS,wBACvB1B,EAAIwB,EAAEG,QAAUgS,EAAKlS,KACrBxB,EAAIuB,EAAEqS,QAAUF,EAAKG,IACvB9T,EAAI2T,EAAKrU,OAASW,EAAI0T,EAAK1T,IAC/Bi1B,EAAoBngC,SAAU,EAAI,IAqGpC,OACEnB,EAAAA,GAAAC,cAACulB,EAAAA,EAAc,CACb/nB,GAAG,iCACHO,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2B65B,GAAoB,oBACzEt1B,IAAKouB,EACLpN,MAAOT,EACPmf,aAAa,oCACbC,iBAAkB/B,EAAAA,IAClBgC,yBAAuB,EACvBC,UAAW3C,EAAcE,EAAgBb,GACzCpd,WAAYqB,EACZsf,YAAaL,EAEbM,SAnDJ,SAAsBpiB,GAIpB,GAAImf,EAAYpgC,QAEd,YADAsjC,EAAAA,GAAAA,MAGFC,aAAazD,IACb,MAAM0D,EAAMtrB,SAASurB,gBACfC,EAAYziB,EAAMpC,cAAc6kB,UAChCC,EAAuB57B,KAAKC,IAChC,IACAD,KAAK1I,MAAOqkC,EAAY7D,GAAuB,MAG3C+D,EAAgBF,GAAa7D,IAAqD,MAAzB8D,EAC3D,EAFY,EAA2B,IAAvBA,EASdE,EAJiBH,GAAa7D,IAAgD,MAAzB8D,EAA+B,EAAI57B,KAAKC,IACjG63B,IACE,IAAM8D,GAAwB9D,GAAuB,KAGzD2D,EAAIjhC,MAAMuhC,YAAY,sBAAuB,QAC7ChE,GAAcnd,YAAW,KACvB6gB,EAAIjhC,MAAMuhC,YAAY,sBAAuB,OAAO,GACnD,KACH9C,eAAe+C,QAAQ,iBAAoC,IAAlBH,EAAsB,OAAS,SACxEJ,EAAIjhC,MAAMuhC,YAAY,qBAAuB,IAAGH,MAChDH,EAAIjhC,MAAMuhC,YACR,yBACC,GAAED,OAELL,EAAIjhC,MAAMuhC,YAAY,wBAA0B,GAAEF,IACpD,GAiBKrD,GACC1hC,EAAAA,GAAAC,cAACklC,EAAO,CACN7kC,IAAI,UACJm/B,gBAAiBA,EACjBt/B,QAAS2jC,EACTlJ,YAAaoJ,IAGhBhf,GAAazjB,OAzHlB,WACE,MAAM6jC,EAAiBhL,EAAYtV,QAAQE,EAAa,IAElDqgB,GAAcC,EAAAA,EAAAA,IAAoB9D,IAAqB,EA+B7D,OA3BA1d,YAAW,KACT,GAAI+O,EAAa1xB,SAAWogC,EAAYpgC,SAAWigC,EAAqB,CACtE,MAAMmE,EAAiBlsB,SAASmsB,eAAe,mBAC/C,GAAID,EACFA,EAAe7hC,MAAM+hC,WAAc,GAAGvhC,OAAewhC,qBAChD,KAAAC,EAEL,MAAMC,EAAyG,QAApFD,EAAGtsB,SAASiS,cAAc,kEAA0D,IAAAqa,EAAAA,EAC1GtsB,SAASmsB,eAAe,kCACzBI,IACFA,EAAiBliC,MAAM+hC,WAAc,GAAGvhC,OAAewhC,iBAE3D,CACA,MAAMG,EAAmBxsB,SAASmsB,eAAe,oBAC7CK,IACFA,EAAiBniC,MAAM+hC,WAAc,GAAGvhC,OAAewhC,kBAEzD5hB,YAAW,KACL+O,EAAa1xB,UACf0xB,EAAa1xB,QAAQmhC,SAAS,CAAEpiB,IAAK8gB,KACrCld,YAAW,KACTyd,EAAYpgC,SAAU,CAAK,GAC1B,KACL,GACC,EACL,IACC,GACI6jB,EAAa3lB,KAAI,CAAC5B,EAAI6D,KAC3B,MAAMk1B,EAAW4O,EAAiB9jC,EAAI+jC,EAChC1K,EAAYkH,GAAiBuD,EAAiB9jC,GAAKsgC,EAAAA,KACpDR,EAAsBJ,GAAsB,GAEjD,OACEhhC,EAAAA,GAAAC,cAAC6lC,EAAI,CACHxlC,IAAK7C,EACLsoC,cAAevP,EAAWl1B,GAAI0kC,EAAAA,EAAAA,IAAYvoC,GAC1CX,OAAQW,EACR+4B,SAAUA,EACVgE,SAAUA,EACVE,cAAesH,EAAiBvkC,GAChCg9B,UAAWsH,EAActkC,GACzBk9B,UAAWA,EACX/hB,oBAAqB8qB,EACrB9I,YAAa6C,GACb,GAGR,CAoEMwI,GACEjhB,IAAgBA,EAAYzjB,OAE5BvB,EAAAA,GAAAC,cAACimC,EAAW,CACV1L,SAAUA,EACVmE,WAAYA,EACZK,gBAAiBA,EACjBC,uBAAwBA,IAI5Bj/B,EAAAA,GAAAC,cAAC8lB,EAAAA,EAAO,CAACzlB,IAAI,YAEA,G,qZC9TrB,MCsOA,GAAe5D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAoC,IAAlC,OAAExC,EAAM,MAAEwf,EAAK,WAAElX,GAAY9F,EACpC,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAE1B47B,GAAcK,EAAAA,EAAAA,IAAkBn8B,EAAQE,EAAQwf,EAAM6pB,gBACtD,SAAE5N,EAAQ,iBAAEC,EAAgB,WAAEC,GAAeC,GAAe,CAAC,EAC7DC,EAAoBJ,GACrBxmB,EAAAA,EAAAA,IAAWnV,EAAQ27B,KAAav7B,EAAAA,EAAAA,IAAWJ,EAAQ27B,QAAa/6B,EAC/Do7B,EAAoBF,GAAcG,EAAAA,EAAAA,IAAiBH,QAAel7B,EAClEs7B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkBn8B,EAAQE,EAAQ07B,QAClCh7B,GACIw7B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjGlc,GAAekd,EAAAA,EAAAA,IAAkBh9B,EAAQE,EAAQwf,EAAM7e,GAAI,gBAC3Do8B,GAAQC,EAAAA,EAAAA,IAAYl9B,EAAQE,EAAQwf,EAAM7e,IAC1Cue,GAAaC,EAAAA,EAAAA,IAAiBrf,EAAQE,EAAQwf,EAAM7e,IACpDi5B,EAAiBh5B,QAAQse,GAAYoqB,yBAEnCtpC,OAAQu8B,EAAehnB,SAAUinB,IAAoBhnB,EAAAA,EAAAA,IAAyB1V,IAAW,CAAC,EAElG,MAAO,CACLG,OACA27B,cACAO,sBACAE,qBACAL,sBACAH,oBACAjc,eACA2pB,WAAWC,EAAAA,EAAAA,IAAqB1pC,EAAQE,EAAQwf,EAAM7e,IACtD88B,yBAAyBt5B,EAAAA,EAAAA,IAA0BrE,GACnDi9B,WACIpB,GAAcC,GAAe,CAC/B2B,2BAA2BC,EAAAA,EAAAA,IAAqB19B,EAAQ87B,IAE1DuB,cAAe70B,GAAcrI,GAAMU,KAAO47B,GAAiBC,IAAoBhd,EAAM7e,GACrFi5B,iBACD,GApCe/5B,EA/JqBoB,IAqBnC,IArBoC,MACxCue,EAAK,WACLlX,EAAU,OACVtI,EAAM,KACNC,EAAI,MACJ2G,EAAK,YACLg1B,EAAW,cACXuB,EAAa,0BACbI,EAAyB,oBACzBzhB,EAAmB,UACnBytB,EAAS,oBACTvN,EAAmB,oBACnBG,EAAmB,mBACnBE,EAAkB,kBAClBR,EAAiB,cACjB+B,EAAa,wBACbH,EAAuB,UACvBE,EAAS,aACT/d,EAAY,MACZmd,EAAK,eACLnD,GACD34B,EACC,MAAM,SAAE88B,EAAQ,YAAE0L,EAAW,iBAAEzL,IAAqB18B,EAAAA,EAAAA,MAE9CC,GAAOC,EAAAA,EAAAA,MAEN48B,EAAmBC,EAAiBC,IAAoBr6B,EAAAA,EAAAA,MACxDs6B,EAAiBC,EAAeC,IAAkBx6B,EAAAA,EAAAA,MAClD+6B,EAAyBC,EAAuBC,IAA2Bj7B,EAAAA,EAAAA,MAC3Ek7B,EAAuBC,EAAqBC,KAAyBp7B,EAAAA,EAAAA,MAEtE,SACJy1B,GAAQ,SAAEgQ,IACRlqB,EACErK,GAAUqK,EAAMrK,cAA8BzU,IAAlB8e,EAAMrK,SAAyBlV,EAAKkV,QAEhEw0B,IAAwBljC,EAAAA,EAAAA,IAAgB,KAC5Cw4B,IACAZ,GAAiB,IAGbuC,IAAen6B,EAAAA,EAAAA,IAAgB,KACnCgjC,EAAY,CAAEzpC,OAAQC,EAAKU,GAAI8U,QAAS+J,EAAM7e,IAAK,IAG/CkgC,IAAap6B,EAAAA,EAAAA,IAAgB,KACjC24B,IACAZ,GAAe,KAGX,eAAEoB,GAAc,IAAEj4B,KAAQk4B,EAAAA,EAAAA,GAAiB,CAC/C5/B,OACAD,SACA47B,cACAmB,QACAf,sBACAG,sBACAE,qBACAR,oBACAe,iBAAkBpd,EAClB1D,sBACA4E,SAAS,EACTd,eAEAge,gBACAH,0BACAE,cAGIiM,IAAkBnjC,EAAAA,EAAAA,IAAgB,KACtCs3B,EAAS,CAAEp9B,GAAIX,EAAQuV,SAAUiK,EAAM7e,GAAI+/B,sBAAsB,IAE7DvD,GACFa,GACF,IAGI+C,GCzIO,SAA+B9/B,GAc3C,IAd4C,MAC7Cue,EAAK,KACLvf,EAAI,UACJ4pC,EAAS,UACTN,EAAS,aACT3I,EAAY,WACZC,GAQD5/B,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJ63B,EAAQ,QAAEvkB,EAAO,SAAEu0B,EAAU/oC,GAAI8U,GAC/B+J,EAEExf,EAASC,EAAKU,IAEd,UACJmpC,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACbvzB,EAAqB,iBACrBwzB,IACE3oC,EAAAA,EAAAA,MAEE4oC,GAAkBC,EAAAA,EAAAA,IAAkBlqC,EAAMuf,GAC1C4qB,EAAkBnqC,EAAKub,YAAapF,EAAAA,EAAAA,IAAiBnW,EAAM,gBAU3DoqC,EAAmB7qB,EAAM0a,cAAgB2P,EAC3C,CACAj4B,MAAOrQ,EAAK,cACZyX,KAAM,YACNwqB,QAASA,KACPwG,EAAc,CAAEhqC,SAAQyV,WAAU,QAGpC/U,EAEE4pC,EAAYF,EAAmB1Q,EACjC,CACA9nB,MAAOrQ,EAAK,gBACZyX,KAAM,QACNwqB,QAASA,IAAMuG,EAAkB,CAAE/pC,SAAQyV,UAASikB,UAAU,KAE9D,CACA9nB,MAAOrQ,EAAK,YACZyX,KAAM,MACNwqB,QAASA,IAAMuG,EAAkB,CAAE/pC,SAAQyV,UAASikB,UAAU,UAC3Dh5B,EAED6pC,EAAetqC,EAAKkV,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACAvD,MAAOrQ,EAAK,mBACZyX,KAAM,SACNwqB,QAASA,IAAM/sB,EAAsB,CAAEzW,SAAQyV,UAASN,SAAS,KAEjE,CACAvD,MAAQ,GAAErQ,EAAK,sBACfyX,KAAM,OACNwqB,QAAS3C,GAGP2J,EAAmBN,EAAmBR,EACxC,CACA93B,MAAOrQ,EAAK,0BACZyX,KAAM,eACNwqB,QAASA,IAAMsG,EAAU,CAAE9pC,SAAQyV,UAASi0B,UAAU,KAEtD,CACA93B,MAAOrQ,EAAK,yBACZyX,KAAM,cACNwqB,QAASA,IAAMsG,EAAU,CAAE9pC,SAAQyV,UAASi0B,UAAU,UACnDhpC,EAED+pC,EAAelB,EAAY,CAC/B33B,MAAOrQ,EAAK,0BACZyX,KAAM,SACN0xB,aAAa,EACblH,QAAS5C,QACPlgC,EAEJ,OAAOgjC,EAAAA,EAAAA,IAAQ,CAEb4G,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAACjrB,EAAOvf,EAAM4pC,EAAWtoC,EAAMgoC,EAAW3I,EAAcC,GAC7D,CDgCyB8J,CAAuB,CAC5CnrB,QACAvf,OACA4pC,UAAWjQ,EACX2P,YACA3I,aAAc+I,GACd9I,gBAGF,OACE39B,EAAAA,GAAAC,cAAC4V,EAAAA,EAAQ,CACP7X,WAAWkC,EAAAA,EAAAA,GD/JM,uBCiKf,OACAkF,GAAc,WACd,uBAEFjF,QAASumC,GACThjC,MAAOA,EACPiS,KAAMwoB,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBthC,EAAQ,SAAUwf,EAAM7e,WAAQD,EAC5FqgC,eAAgBA,GAChBQ,mBAAiB,EACjB55B,IAAKA,IAELzE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,UAC7BF,EAAAA,GAAAC,cAACke,EAAAA,EAAS,CAAC7B,MAAOA,EAAOte,UD/KkI,uBC+KrG4a,oBAAqBA,IAC3E5Y,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYwR,EAAAA,EAAAA,GAAW8M,EAAM5N,SAEvD4N,EAAMrK,SAAWjS,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC/BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdwoC,IACCxmC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,OACA,kBDvLkF,0BC4LrFw4B,GACC14B,EAAAA,GAAAC,cAACu+B,EAAAA,EAAe,CACd35B,QAAS6zB,EACT5Z,eAAgBub,KAItBr6B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ0+B,KACD18B,EAAAA,GAAAC,cAACq+B,EAAAA,EAAS,CACRvhC,KAAMA,EACNy5B,SAAUA,GACVvkB,QAASA,GACTqK,MAAOA,EACPoa,eAAgBA,MAIrBoF,GACC97B,EAAAA,GAAAC,cAACynC,EAAAA,EAAa,CACZpwB,OAAQ4jB,EACR3jB,QAAS6jB,EACT5jB,oBAAqBwkB,EACrB2L,sBAAoB,EACpBC,eAAgBlK,GAChBj9B,KAAMpC,EAAK,+BACXwpC,aAAcxpC,EAAK,YAGtB49B,GACCj8B,EAAAA,GAAAC,cAACs2B,EAAAA,EAAa,CACZjf,OAAQ+jB,EACR9jB,QAASgkB,EACT/jB,oBAAqB2kB,GACrBr/B,OAAQA,EACRyV,QAAS+J,EAAM7e,KAGV,K,qEElOf,SAAgB,KAAO,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,QAAU,uBAAuB,MAAQ,uBAAuB,YAAc,uBAAuB,SAAS,uBAAuB,MAAQ,uBAAuB,WAAW,uBAAuB,QAAU,wBC0BjUqqC,EAAY,EAAI/rB,EAAAA,GAwCtB,GAAerf,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EAC1D,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1BirC,EAAkBhrC,IAASA,EAAKub,YAAapF,EAAAA,EAAAA,IAAiBnW,EAAM,iBAE1E,MAAO,CACL+hC,eAAeC,EAAAA,EAAAA,IAAoBniC,EAAQ,MAC3CmrC,kBACD,GAPiBprC,EAtC0BoB,IAExC,IAFyC,OAC7CjB,EAAM,cAAEgiC,EAAa,gBAAEiJ,GACxBhqC,EACC,MAAM,qBAAEiqC,IAAyB5pC,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAEqI,IAAaC,EAAAA,EAAAA,MAEfqhC,GAAoBzpC,EAAAA,EAAAA,KAAY,KACpCwpC,EAAqB,CAAElrC,UAAS,GAC/B,CAACA,EAAQkrC,IAEZ,OACEhoC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,EAAOuN,MACrBpR,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,EAAOhC,SACpBi9B,GAAiB9+B,EAAAA,GAAAC,cAACq/B,EAAAA,EAAuB,CAACz9B,QAASi9B,EAAer7B,KAAMqkC,KAE3E9nC,EAAAA,GAAAC,cAAA,MAAIjC,UAAW6F,EAAO6K,MAAOhN,IAAI,QAAQrD,EAAK,8BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EAAO8O,YAAa9O,EAAOqkC,UAAWxmC,IAAI,QACpErD,EAAK,oCAEP0pC,GACC/nC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLuP,QAASnJ,EACT44B,OAAK,EACLp/B,QAAS8nC,EACTxkC,KAAK,UACL9B,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,EAAOskC,YACpB9pC,EAAK,gCAIR,KC0NV,GAAe3B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAQwrC,EAAUC,KACjBA,GAAkBrO,EAAAA,EAAAA,IAAuBp9B,IAEzC,MAAME,GAASM,EAAAA,EAAAA,IAAeR,GAAQ68B,iBAChC18B,EAAOD,GAASE,EAAAA,EAAAA,IAAWJ,EAAQE,QAAUU,GAEjDV,OAAQu8B,EACRhnB,SAAUinB,IACRhnB,EAAAA,EAAAA,IAAyB1V,IAAW,CAAC,EAEzC,MAAO,CACLG,OACAqsB,eAAgBtsB,IAAWu8B,EAAgBC,OAAkB97B,EAC7D+8B,yBAAyBt5B,EAAAA,EAAAA,IAA0BrE,GACpD,GAfeD,EA5N0BoB,IASxC,IATyC,KAC7ChB,EAAI,eACJqsB,EAAc,OACd9R,EAAM,SACNgxB,EAAQ,cACRC,EAAa,oBACb/wB,EAAmB,qBACnBgxB,EAAoB,wBACpBjO,GACDx8B,EACC,MAAM,gBACJk9B,EAAe,iBAAEwN,EAAgB,WAAE1N,IACjC38B,EAAAA,EAAAA,MAGEqG,GAAM9D,EAAAA,EAAAA,IAAuB,MAG7BkyB,GAAelyB,EAAAA,EAAAA,IAAuB,MAEtC+nC,GAAsB/nC,EAAAA,EAAAA,IAAuB,OAC7C,SAAEgG,IAAaC,EAAAA,EAAAA,OAErBpH,EAAAA,EAAAA,KAAU,KACJzC,IAASA,EAAKwf,QAChBwe,EAAW,CAAEj+B,OAAQC,EAAKU,IAC5B,GACC,CAACV,EAAMg+B,IAEV,MAAO4N,EAAYC,IAAiB7hC,EAAAA,EAAAA,KAAS,GACvC1I,GAAOC,EAAAA,EAAAA,KAEPuqC,GAActlC,EAAAA,EAAAA,IAAgB,KAClC03B,GAAiB,KAGnBz7B,EAAAA,EAAAA,KAAU,KACH+6B,GAA4BjjB,GAC/BE,KACF,GACC,CAAC+iB,EAAyBjjB,EAAQE,IAErC,MAAMsxB,GAAuBvlC,EAAAA,EAAAA,IAAgB,KACtCxG,GACL0rC,EAAiB,CAAEhrC,GAAIV,EAAKU,GAAI+/B,sBAAsB,GAAO,KAGzD,QAAEkG,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/Q,EACTgR,WAnD0B,OAsD5BkF,EAAAA,EAAAA,IAAeL,EAAqBhF,GAASpkC,IAAwB,IAAvB,eAAEma,GAAgBna,EAC9DspC,GAAenvB,EAAe,IAGhC,MAAM2gB,GAAaz7B,EAAAA,EAAAA,KAAQ,IAClB5B,GAAMwf,QACTysB,EAAAA,EAAAA,IAAiB9pC,OAAOC,OAAOpC,EAAKwf,QAASxf,EAAKksC,uBAAuB5pC,KAAIxC,IAAA,IAAC,GAAEY,GAAIZ,EAAA,OAAKY,CAAE,IAC3F,IACH,CAACV,KAEE,cAAEglC,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAa7H,EAAYr9B,GAAMU,KAEpEunB,GAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1CnoB,GACLg+B,EAAW,CAAEj+B,OAAQC,EAAKU,IAAK,GAC9B28B,GAAar9B,GAAMmsC,aAAe9O,EAAW74B,QAAUxE,EAAKmsC,YAAaC,EAAAA,KAEtEC,IAAkBzoC,EAAAA,EAAAA,KAAO,GACzBif,GAAYtI,IAAWgxB,EACvBe,IAAgBpf,EAAAA,EAAAA,GAAYrK,IAE9BypB,KAAkBzpB,KACpBwpB,GAAgBjoC,SAAU,IAG5BmoC,EAAAA,EAAAA,GAAe,CACbnsC,SAAUyiB,GACV2pB,OAAQV,EACRW,KAAMzsC,GAAOqhC,EAAAA,EAAAA,IAAmBrhC,EAAKU,GAAI,SAAUuW,EAAAA,SAAkBxW,KAGvEgC,EAAAA,EAAAA,KAAU,IAAOogB,IAAY6pB,EAAAA,EAAAA,GAAsBZ,QAAerrC,GAAY,CAACqrC,EAAajpB,MAE5FpgB,EAAAA,EAAAA,KAAU,KACJ6pC,KAAkBzpB,KAEpB8pB,EAAAA,EAAAA,KAAoB,KAClB,IAAKjlC,EAAItD,QAAS,OAElB,MAAMwoC,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqBplC,EAAItD,QAASwoC,GAElCnB,MAEI5oB,IACFwpB,GAAgBjoC,SAAU,EAC1BsD,EAAItD,QAASuC,MAAMomC,UAAY,SAE/BV,GAAgBjoC,SAAU,EAC1BsD,EAAItD,QAASuC,MAAMomC,UAAY,GACjC,GAEJ,GACC,CAAClqB,GAAW4oB,EAAsBa,MAErC7pC,EAAAA,EAAAA,KAAU,KACR,GAAKuiB,EAAAA,GAIL,OAAOnT,EAAAA,EAAAA,IAAcnK,EAAItD,QAAU,CACjCoqB,wBAAyB,aACzBC,QAAUA,CAAC5d,EAAG6d,IAGRA,KAFmBptB,EAAKsD,MAAQ+pB,EAAAA,GAAeE,KAAOF,EAAAA,GAAeC,SAGvEsP,KACO,IAKX,GACD,CAACA,EAAiB58B,EAAKsD,QAmB1B,MAAM+e,QAA6BljB,IAAjBT,GAAMwf,OAExB,OACEvc,EAAAA,GAAAC,cAAA,OACEwE,IAAKA,EACLzG,WAAWkC,EAAAA,EAAAA,GCjNM,uBDmNfyoC,GCnN+P,uBDoN/PtqC,EAAKsD,OCpNuC,wBDqN3C44B,GCrNsH,wBDuNzHwP,gBAAkBzyB,OAA+B9Z,EAAtBga,GAE3BxX,EAAAA,GAAAC,cAAA,OAAKxC,GAAG,kBAAkBO,UAAU,eAClCgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLiD,KAAK,UACLsM,MAAM,cACN5P,QAAS0oC,EACT54B,UAAW5R,EAAK,UAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGdjB,GACCiD,EAAAA,GAAAC,cAAC6lB,EAAAA,EAAa,CACZlJ,UAAQ,EACR5e,UCvO+W,uBDwO/WlB,OAAQC,EAAKU,GACb0C,QAAS2oC,IAIZ/rC,GAEGiD,EAAAA,GAAAC,cAAC+pC,EAAAA,EAAa,CACZltC,OAAQC,EAAKU,GACb4U,SAAU2B,EAAAA,GACVulB,gBAAgB,SAChB0Q,kBAAkB,EAClBC,kBAAgB,EAChBvjC,SAAUA,EACV4hC,cAAeA,KAKtBxrC,GAAQiD,EAAAA,GAAAC,cAACkqC,EAAAA,EAAgB,CAACrtC,OAAQC,EAAKU,GAAIQ,iBAAiB,EAAOD,UC3P4H,yBD6PhMgC,EAAAA,GAAAC,cAAA,OAAKjC,UC7P0N,yBD+P/NgC,EAAAA,GAAAC,cAACulB,EAAAA,EAAc,CACbxnB,UAAU,0BACVyG,IAAKouB,EACLpN,MAAOT,GACPof,iBAAkB+E,EAAAA,IAClB9E,yBAAuB,EACvBC,WAAYlK,GAAY74B,QAAU,GAAK6oC,EAAAA,IACvCxmB,WAAYqB,GACZolB,cAAeC,EAAAA,IACfC,eAAgBvqC,EAAAA,GAAAC,cAAA,OAAKwE,IAAKikC,EAAqB1qC,UCxQsS,0BD0QpVN,QAAQsnB,IAAazjB,SA/E5B,WACE,MAAM6jC,EAAiBhL,EAAYtV,QAAQE,GAAa,IAExD,OAAOA,IAAa3lB,KAAI,CAAC5B,EAAI6D,IAC3BtB,EAAAA,GAAAC,cAACuqC,EAAK,CACJlqC,IAAK7C,EACLX,OAAQC,EAAMU,GACd6e,MAAOvf,EAAMwf,OAAQ9e,GACrBiG,MAAQ,SAAQ0hC,EAAiB9jC,GAAK8oC,EAAAA,SACtChlC,WAAYgkB,IAAmB3rB,EAC/Bmb,oBAAqB8qB,EACrBhJ,cAAesH,EAAiBvkC,GAChCg9B,UAAWsH,EAActkC,MAG/B,CAiEQgtC,GAED/pB,KAAcsE,IAAazjB,QAC1BvB,EAAAA,GAAAC,cAAC8lB,EAAAA,EAAO,CAACzlB,IAAI,cAGfogB,IAAqC,IAAxBsE,IAAazjB,QAAgByjB,GAAY,KAAO0lB,EAAAA,KAC7D1qC,EAAAA,GAAAC,cAAC0qC,EAAU,CAAC7tC,OAAQC,EAAKU,KAEvB,I,yDEnRH,IAAKmtC,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASC,EAAgD9I,GAC9D,OAAOpjC,EAAAA,EAAAA,KAAQ,KACb,MAAMmsC,EAAa5rC,OAAOC,OAAO4iC,GAC3BgJ,EAAaD,EAAWvrC,QAAQyrC,GAASA,EAAO,IAAGzpC,OACnD0pC,EAAeH,EAAWvrC,QAAQyrC,GAASA,EAAO,IAAGzpC,OAE3D,OAAQzE,IACN,MAAM29B,EAAYsH,EAAcjlC,GAChC,OAAkB,IAAd29B,EACKmQ,EAAmBM,KAI1BzQ,IAAc0Q,KACX1Q,KAAc,KACbsQ,GAAcE,GAAgBxQ,EAAY,GAC1CwQ,EAAeF,GAActQ,EAAY,EAEtCmQ,EAAmBQ,QAGrBR,EAAmBS,IAAI,CAC/B,GACA,CAACtJ,GACN,C,0OC/BA,QAA4F,uBAA5F,EAAiT,uBAAjT,EAAyc,uBAAzc,EAAwe,uBC8BleuJ,EAAsB/H,OAAOxnB,EAAAA,IAsInC,GAAerf,EAAAA,EAAAA,KAnI4BqB,IAIrC,IAJsC,KAC1ChB,EAAI,kBACJwuC,EAAiB,oBACjB3yB,GACD7a,EACC,MAAM,SAAE88B,IAAaz8B,EAAAA,EAAAA,MAGfotC,GAAiB7qC,EAAAA,EAAAA,IAAuB,MAExC8qC,GAAgB9qC,EAAAA,EAAAA,IAAuB,MAEvCtC,GAAOC,EAAAA,EAAAA,MAENotC,KAAoBC,IAAehtC,EAAAA,EAAAA,KAAQ,IAC3C5B,EAAKwf,QAIHysB,EAAAA,EAAAA,IAAiB9pC,OAAOC,OAAOpC,EAAKwf,aAAS/e,GAAW,GAAM4B,MAAM,EArB5D,GAkBN,IAIR,CAACrC,EAAKwf,UAEFqvB,EAAkBC,IAAuB9kC,EAAAA,EAAAA,KAAS,IAClD+kC,EAAkBC,IAAuBhlC,EAAAA,EAAAA,SAA6BvJ,IAG3Emd,YAAaqxB,EACbC,gBAAiBC,IACfC,EAAAA,EAAAA,IAAcv+B,IACoB,IAAhC89B,EAAgB1U,cAEpBppB,EAAEM,kBACFN,EAAEyU,iBAEFwY,EAAS,CACPp9B,GAAIV,EAAKU,GACT4U,SAAUq5B,EAAgBjuC,GAC1B+/B,sBAAsB,EACtB4O,mBAAmBC,EAAAA,EAAAA,QACnB,IAmBJ,OAhBA7sC,EAAAA,EAAAA,KAAU,KACR,MAAM8sC,EAAqBd,EAAerqC,QACpCorC,EAAoBd,EAActqC,QACxC,IAAKmrC,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBG,YACtCC,EAAkBH,EAAkBE,YAEtCvjC,KAAKyjC,IAAIH,EAAmBE,GAAmBpB,EACjDS,EAAoB7iC,KAAKiD,IAAIqgC,EAAkBE,IAE/CX,OAAoBvuC,GAEtBquC,EAAoBW,EAAmBE,EAAgB,GACtD,CAAChB,EAAiBH,IAGnBvrC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD7FM,uBC+Ff0rC,GD/F4zB,uBCgG5zBE,GDhGi5B,wBCkGn5BpqC,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BkG,MAAOooC,EAAoB,wBAAuBA,WAAuBtuC,GAExEkuC,GACC1rC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,GACd7D,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDxG0P,uBC0GnQwrC,EAAgB1U,aAAenzB,GAEjCY,IAAKgnC,EACLtrC,QAAS6rC,EACTvZ,YAAayZ,GAEblsC,EAAAA,GAAAC,cAACke,EAAAA,EAAS,CACR7B,MAAOovB,EACP9yB,oBAAqBA,IAEvB5Y,EAAAA,GAAAC,cAAA,OAAKjC,UDpHsf,yBCoH5dwR,EAAAA,EAAAA,GAAWk8B,EAAgBh9B,SACxDo9B,GAAoBF,GACpB5rC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,GACd7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,MAKtB7D,EAAAA,GAAAC,cAAA,OAAKjC,UD5HosB,wBC6HtsB2tC,EAAYtsC,KAAKid,GAChBtc,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD/H6K,uBCgIlKoc,EAAM0a,aAAenzB,GAE3CvD,IAAKgc,EAAM7e,IAEXuC,EAAAA,GAAAC,cAACke,EAAAA,EAAS,CACR7B,MAAOA,EACPte,UDtI8hB,uBCuI9hB4a,oBAAqBA,IAEvB5Y,EAAAA,GAAAC,cAAA,QAAMjC,UDzIgnB,yBCyI3kBwR,EAAAA,EAAAA,GAAW8M,EAAM5N,YAKlE1O,EAAAA,GAAAC,cAAA,OAAKjC,UD9IsuB,2BCiJ7uB0tC,GAAmB1rC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe2D,EDjJmE,yBCiJhCxF,EAAK,YAC5F2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDnJyW,uBCmJtUwrC,GAAiB1U,aAAenzB,GAC9EY,IAAK+mC,EACLrrC,QAAS6rC,EACTvZ,YAAayZ,GAEZX,KACCO,IAAqBF,GACrB5rC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,GACd7D,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6F,MAKlB,I,eC3HV,MAAM+oC,EAAqB,IAEZ,SAASjQ,EAAgB5+B,GAiCrC,IAjCsC,KACvChB,EAAI,YACJ27B,EAAW,OACX57B,EAAM,aACN4f,EAAY,MACZmd,EAAK,oBACLf,EAAmB,oBACnBG,EAAmB,iBACnBS,EAAgB,kBAChBf,EAAiB,mBACjBQ,EAAkB,oBAClBvgB,EAAmB,cACnB8hB,EAAa,UACbD,EAAS,wBACTF,EAAuB,QACvB/c,GAkBDzf,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPmG,GAAM9D,EAAAA,EAAAA,IAAuB,MAE7BksC,EAAWnU,IAAeoU,EAAAA,EAAAA,IAAgBpU,IAEhDqU,EAAAA,EAAAA,GAAiBjwC,EAAQ+vC,EAAWnU,EAAYF,sBAAmBh7B,EAAWs7B,GAE9E,MAAMkU,EAAiBtU,KAAgBuU,EAAAA,EAAAA,IAAkBvU,IACrDve,EAAAA,EAAAA,IAA4Bue,QAC5Bl7B,EACE0hB,GAAe5c,EAAAA,EAAAA,GAASo2B,GAAcxxB,EAAAA,EAAAA,IAAoBwxB,EAAa,cAAWl7B,GAClF0vC,EAAexvC,QAAQg7B,IAAeyU,EAAAA,EAAAA,IAAqBzU,IAE3D0U,GAAoBzuC,EAAAA,EAAAA,KAAQ,KAChC,IAAKs6B,EACH,OAIF,MAAMr6B,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,OAAOk6B,EAAoB55B,KAAKmU,GAAW5U,EAAU4U,KAASjU,OAAO7B,QAAQ,GAC5E,CAACu7B,IAEEoU,GAA4B7uC,EAAAA,EAAAA,KAAY,KAC5C,GAAIke,GAAgBgc,GAAehc,EAAapD,UAA+B,IAAnBof,EAAYzzB,KACtE,OAAOjF,EAAAA,GAAAC,cAACqe,EAAAA,EAAY,CAAC5B,aAAcA,IAGrC,GAAImd,GAAOp5B,KAAKc,UAAYxE,GAAMiV,SAAWwL,GAC3C,OACExd,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,OAAS,OACrD3B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,WAC7Bi3B,EAAAA,EAAAA,GAAuB,CACtB70B,KAAMo5B,EAAMp5B,KACZ20B,SAAUyE,EAAMzE,SAChBH,UAAU,EACVqY,uBAAuB,KAM/B,IAAK5U,EACH,OAGF,GAAImU,EAAU,CACZ,MAAM33B,EAASnY,KAASiW,EAAAA,EAAAA,IAAcjW,IAAS27B,EAAYH,WAAaG,EAAY57B,QAEpF,OACEkD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5E4rC,EAAAA,EAAAA,GACClvC,EACAq6B,EACCxjB,OAAwC1X,EAA/Bm7B,EACVzjB,EAASnY,OAAOS,EAChB4vC,EACAtU,EACAK,EACAO,EACA,CAAE8T,YAAY,QACdhwC,OACAA,GAIR,CAEA,MAAMiwC,GAAaC,EAAAA,EAAAA,IAAqBrvC,EAAMvB,EAAQ67B,GAEtD,OACE34B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,OAC5E8rC,GACCztC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACEzQ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAewR,EAAAA,EAAAA,GAAWi+B,IAC1CztC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ,MAoEpC,SACEK,EAAcwG,EAAqB+T,EAAiC+0B,EAAkBT,GAEtF,MAAMU,EACJ5tC,EAAAA,GAAAC,cAAC4tC,EAAAA,EAAc,CACbxvC,KAAMA,EACNwG,QAASA,EACT0wB,QAAS73B,QAAQiwC,GACjBG,8BAA+Bl1B,EAC/Bm1B,YAAU,IAId,IAAKJ,EACH,OAAOC,EAGT,MAAMI,GAAY3uB,EAAAA,EAAAA,IAAoBxa,GAEtC,OACE7E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBACdgC,EAAAA,GAAAC,cAAA,OACE2D,IAAK+pC,EACL9xB,IAAI,GACJ7d,WACEkC,EAAAA,EAAAA,GAAe,uBAAwBgtC,GAAgB,QAASc,GAAa,4BAGhF7uB,EAAAA,EAAAA,IAAgBta,IAAY7E,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACzC4vC,EAGP,CAjGSK,CAAc5vC,EAAMq6B,EAAa9f,EAAqBsG,GAAgB8tB,EAAgBE,GACrF,GAEL,CACD/T,EAAoBL,EAAqBsU,EAAmBrwC,EAAMD,EAAQ+8B,EAAOgT,EACjFK,EAAc1vB,EAASnf,EAAMq6B,EAAaC,EAAmBe,EAAkBxa,EAAc8tB,EAC7Fp0B,EAAqB8D,IAqDvB,OAnCArR,EAAAA,EAAAA,KAAgB,KACd,MAAMggB,EAAU5mB,EAAItD,QAEpB,GAAKo5B,GAA4BlP,EAAjC,CAKA,GAAIqP,IAAkBkQ,EAAAA,EAAmBQ,QACvC/f,EAAQ3nB,MAAMwqC,QAAU,KAExBjsB,EAAAA,EAAAA,KAAgB,KACdoJ,EAAQ8iB,UAAU3qC,IAAI,mBACtB6nB,EAAQ3nB,MAAMwqC,QAAU,GAAG,QAExB,IAAIxT,IAAkBkQ,EAAAA,EAAmBS,KAQ9C,OAPAhgB,EAAQ3nB,MAAMomC,UAAa,mBAAkBrP,EAAYmH,EAAAA,aAEzD3f,EAAAA,EAAAA,KAAgB,KACdoJ,EAAQ8iB,UAAU3qC,IAAI,qBACtB6nB,EAAQ3nB,MAAMomC,UAAY,EAAE,GAIhC,CAEAhmB,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACdoJ,EAAQ8iB,UAAUC,OAAO,kBAAmB,qBAC5C/iB,EAAQ3nB,MAAMwqC,QAAU,GACxB7iB,EAAQ3nB,MAAMomC,UAAY,EAAE,GAC5B,GACD8C,EAAqByB,EAAAA,IA3BxB,CA2B4C,GAC3C,CAAC9T,EAAyBE,EAAWC,IAEjC,CACLgC,eAnDF,WACE,OAAI3/B,GAAMiV,UAAYwL,EAElBxd,EAAAA,GAAAC,cAACquC,EAAoB,CACnBvxC,KAAMA,EACNwuC,kBAAmB8B,EACnBz0B,oBAAqBA,IAKpBy0B,GACT,EAwCE5oC,MAEJ,C,wECpNe,SAAS8pC,EAAsCC,GAC5D,MAAMC,GAAcC,EAAAA,EAAAA,KACdC,GAAyChuC,EAAAA,EAAAA,IAAO6tC,GAChDI,GAAuB3kB,EAAAA,EAAAA,GAAYukB,GAWzC,OAJyB,IAArBA,GAA8BI,IAAyBJ,IACzDG,EAAuCxtC,SAAU,GAG5C,CAAEwtC,yCAAwCE,gCATjD,WACEF,EAAuCxtC,QAAUzD,QAAQ8wC,GACzDC,GACF,EAOF,C,kFCde,SAASxM,EAAa7H,EAA6C95B,GAChF,MAAMwuC,GAAYnwC,EAAAA,EAAAA,KAAQ,KACxB,GAAKy7B,EAIL,OAAOA,EAAW2U,QAAO,CAAC9X,EAAKx5B,EAAI6D,KACjC21B,EAAIx5B,GAAM6D,EACH21B,IACN,CAAC,EAA4B,GAC/B,CAACmD,IAEE4U,GAAgB/kB,EAAAA,EAAAA,GAAY6kB,GAC5BG,GAAahlB,EAAAA,EAAAA,GAAY3pB,GAEzByhC,GAAgBpjC,EAAAA,EAAAA,KAAQ,IACvBmwC,GAAcE,GAAiB1uC,IAAQ2uC,GAIrCC,EAAAA,EAAAA,IAAUJ,GAAW,CAACK,EAAO1xC,SACLD,IAAtBwxC,EAAcvxC,GAAoB0xC,EAAQH,EAAcvxC,IAAM,MAJ9D,CAAC,GAMT,CAAC6C,EAAKwuC,EAAWG,EAAYD,IAIhC,MAAO,CACLjN,gBACAC,kBAJuB6I,EAAAA,EAAAA,GAAqB9I,GAMhD,C,+CC3BO,SAASqN,EACd/wC,EAAcwG,EAAqB7F,EAAoCJ,GAEvE,MAAM,SAAE25B,GAAa1zB,EACrB,IAAK0zB,EACH,OAGF,MAAMrf,GAASpH,EAAAA,EAAAA,IAASymB,GAAY35B,EAAU25B,GAAYv5B,EAAUu5B,GAEpE,IAAIkV,GAAa4B,EAAAA,EAAAA,IAAehxC,EAAM6a,GAEtC,MAAMnc,EAAOiC,EAAU6F,EAAQ/H,QAS/B,OARIC,KACE+U,EAAAA,EAAAA,IAASymB,IAAcrf,EAAmBvF,OAC5C85B,EAAc,GAAEpvC,EAAK,iBAAgB0Z,EAAAA,EAAAA,GAAa1Z,EAAMtB,MAC/CuyC,EAAAA,EAAAA,IAAYvyC,KACrB0wC,GAAe,OAAK11B,EAAAA,EAAAA,GAAa1Z,EAAMtB,OAIpC0wC,CACT,C,4LCxBA,MAQA,EARgD7rC,IAC9C,MAAM,OAAE0V,GAAW1V,EACb2tC,GAAsBnZ,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,uBAAwBhf,GAGnF,OAAOi4B,EAAsBvvC,EAAAA,GAAAC,cAACsvC,EAAwB3tC,QAAYpE,CAAS,E,qCCoE7E,MA4VA,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,OACPC,EAAM,SAAEuV,EAAQ,gBAAEknB,EAAe,SAAE5yB,GACpC9J,EACC,MAAME,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1Bka,EAAYtZ,QAAQX,IAAQiW,EAAAA,EAAAA,IAAcjW,IAC1CyyC,GAAWC,EAAAA,EAAAA,IAAmB7yC,GAC9B8yC,GAAsBC,EAAAA,EAAAA,IAA0B/yC,IAChD,eAAEgzC,GAAmBhzC,EAAOizC,SAASC,MAE3C,IAAK/yC,GAAQA,EAAK2X,eAAgBq7B,EAAAA,EAAAA,IAAqBnzC,GACrD,MAAO,CACLozC,QAAQ,EACRR,WACAE,sBACAE,kBAIJ,MAAMK,GAAMC,EAAAA,EAAAA,IAAUtzC,EAAQE,GACxBwsB,GAAgBxX,EAAAA,EAAAA,IAAShV,QAA+CU,GAArCiV,EAAAA,EAAAA,IAAmB7V,EAAQE,GAC9DusB,GAAevX,EAAAA,EAAAA,IAAShV,IAAU8V,EAAAA,EAAAA,IAAmBhW,EAAQE,QAAUU,EACvE2yC,EAAW7mB,GAAgBD,EAC3B9S,GAAiBC,EAAAA,EAAAA,IAAqB5Z,EAAQE,GAC9CszC,EAAmC,WAApB7W,GAAgClnB,IAAa2B,EAAAA,GAC5Dq8B,EAAyC,WAApB9W,GAAgClnB,IAAa2B,EAAAA,GAClEs8B,GAAqBC,EAAAA,EAAAA,IAAyB3zC,EAAQ+J,GAEtD6pC,EAAgB9yC,QAAQuyC,IAAOQ,EAAAA,EAAAA,IAAoB7zC,EAAQqzC,EAAIxyC,KAC/DizC,GAAeF,GAAiB9yC,SAAQizC,EAAAA,EAAAA,IAA0B/zC,EAAQE,IAC1E8zC,EAAelzC,SAClB0yC,GAAgBrzC,EAAKiV,WAAagF,IAAaI,EAAAA,EAAAA,IAAiBra,KAAUA,EAAK8zC,aAE5EC,EAAYV,GAAgBC,EAC5BU,EAAUC,EAAAA,KAAuBl/B,EAAAA,EAAAA,IAAS/U,EAAKU,MAAQ8Y,IAAmB05B,EAC1EgB,EAAUb,IAAiB75B,IAAmBq6B,EAC9CM,EAAWd,IAAiBQ,EAC5BO,EAAoBH,EAAAA,IAAuBZ,GAAgBrzC,EAAKe,aAChEszC,EAAqBJ,EAAAA,IAAuBZ,IAAiBrzC,EAAKe,eAClEf,EAAKs0C,aAAaC,YAAev0C,EAAKub,YAAapB,EAAAA,EAAAA,IAAiBna,IACpEw0C,EAAoBnB,GAAgB9mB,GAAcioB,kBAClDC,EAAsBpB,EAAe9mB,GAAcmoB,qBAAkBj0C,EACrEk0C,EAAmBh0C,QAAQX,GAAM8zC,aAAe9zC,EAAK40C,cACrDC,EAAwBl0C,QAAQX,GAAM8zC,aAAe9zC,EAAK80C,eAC1DC,IAAe7wC,EAAAA,EAAAA,IAA0BrE,GAEzCm1C,EAAgBr0C,SAAQs0C,EAAAA,EAAAA,IAAuCp1C,EAAQE,IAG7E,MAAO,CACLkzC,QAAQ,EACRh5B,YACAs5B,qBACAI,cACAF,gBACAI,eACAE,YACAC,UACAE,UACAM,oBACAL,WACAC,oBACAC,qBACAI,sBACAE,mBACAE,wBACAE,cACAG,cApBmBC,EAAAA,EAAAA,IAAuBt1C,EAAQE,KAAYqzC,GAAUgC,sBAqBxEJ,gBACArC,sBACAF,WACAI,iBACAwC,qBAAsBr1C,EAAKs1C,iBAC5B,GAzEe11C,EA1V6BoB,IA8B3C,IA9B4C,OAChDjB,EAAM,SACNuV,EAAQ,OACR29B,EAAM,SACNrpC,EAAQ,UACRqQ,EAAS,YACT05B,EAAW,cACXF,EAAa,aACbI,EAAY,UACZE,EAAS,QACTC,EAAO,QACPE,EAAO,kBACPM,EAAiB,SACjBL,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,oBAClBI,EAAmB,mBACnBlB,EAAkB,iBAClBpG,EAAgB,iBAChBD,EAAgB,iBAChByH,EAAgB,sBAChBE,EAAqB,YACrBE,EAAW,aACXG,EAAY,cACZF,EAAa,oBACbrC,EAAmB,SACnBF,EAAQ,qBACR4C,EAAoB,eACpBxC,EAAc,cACdrH,GACDxqC,EACC,MAAM,YACJu0C,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3Bt/B,EAAgB,SAChBwnB,EAAQ,uBACR+X,EAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrBC,KACE30C,EAAAA,EAAAA,MAEE40C,IAAgBryC,EAAAA,EAAAA,IAA0B,MAC1CtC,IAAOC,EAAAA,EAAAA,MACN20C,GAAYC,KAAiBnsC,EAAAA,EAAAA,KAAS,IACtCosC,GAAcC,KAAmBrsC,EAAAA,EAAAA,SAAsCvJ,GAExE61C,IAAuB9vC,EAAAA,EAAAA,IAAgB,KAC3C2vC,IAAc,GACd,MAAMnzB,EAAOizB,GAAc7xC,QAAS2M,wBACpCslC,GAAgB,CAAEhnC,EAAG2T,EAAKuzB,MAAOjnC,EAAG0T,EAAKwzB,QAAS,IAG9CC,IAAwBjwC,EAAAA,EAAAA,IAAgB,KAC5C2vC,IAAc,EAAM,IAGhBO,IAAuBlwC,EAAAA,EAAAA,IAAgB,KAC3C6vC,QAAgB51C,EAAU,IAGtBk2C,IAAuBnwC,EAAAA,EAAAA,IAAgB,KAC3C+uC,EAAY,CAAEx1C,WACV80C,GACFv+B,EAAiB,CACfxO,QAAqBxG,GAAZ2Y,EAAiB,sCAA8C,sCAE5E,IAGI28B,IAAiBpwC,EAAAA,EAAAA,IAAgB,KACrCgvC,EAAe,CAAEqB,QAAS,UAAW,IAGjCC,IAAmBtwC,EAAAA,EAAAA,IAAgB,KACvCkvC,EAAW,CAAE31C,UAAS,IAGlBg3C,IAAuBvwC,EAAAA,EAAAA,IAAgB,KAEzCqvC,EADEb,EACqB,CAAEj1C,SAAQi3C,oBAAgBv2C,GAI5B,CAAEV,SAAQi3C,eAAgBrE,GAAsB,IAGnEsE,IAA0BzwC,EAAAA,EAAAA,IAAgB,KAC9CovC,EAA4B,CAAEsB,OAAQC,EAAAA,GAAkBC,cAAe,IAGnEC,IAAoB7wC,EAAAA,EAAAA,IAAgB,KACpC2mC,EACF3B,OAIFiK,IAEI7rC,EAEkB0S,SAASiS,cAAgC,uBACjDtJ,QACH8vB,GAETuC,EAAAA,EAAAA,KAAe,MACb3K,EAAAA,EAAAA,IAAoB4K,EAAsB,IAG5CxwB,WAAWwwB,EAnHa,KAoH1B,IAGIC,IAAwBhxC,EAAAA,EAAAA,IAAgB,KAC5Cs3B,EAAS,CAAEp9B,GAAIX,EAAQuV,SAAU2B,EAAAA,IAAiB,IAO9CwgC,IAA0BjxC,EAAAA,EAAAA,IAAiBqK,IAC1CkjC,GAAcrO,EAAAA,KAAU70B,EAAE6mC,WAI/B7mC,EAAEyU,iBACF+xB,KAAmB,IAGfM,IAAsBnxC,EAAAA,EAAAA,IAAgB,CAACoxC,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAASt/B,MAAM,KAAK,GACew/B,gBAChDj6B,EAAOxc,GAAKw2C,GAClB,GAAIh6B,IAASg6B,EACX,OAAOx2C,GAAKs2C,EAAS95B,GAGvB,MACMk6B,EADkB,IAAIC,KAAKC,aAAa,CAACzF,GAAW,CAAEjtB,KAAM,aAC3B2yB,GAAGN,GAC1C,OAAOv2C,GAAM,GAAEs2C,SAAgBI,EAAe,IAG1C5M,IAAaxpC,EAAAA,EAAAA,KAAQ,IACrBozC,EAAsB1zC,GAAK,sBAExBq2C,GAAoB,oBAAqBhF,IAC/C,CAACA,EAAqBgF,GAAqB3C,EAAe1zC,KAEvD82C,IAAqBx2C,EAAAA,EAAAA,KAAQ,KACjC,GAAKyzC,EAEL,OAAOsC,GAAoB,yBAA0BtC,EAAqB,GACzE,CAACsC,GAAqBtC,IAEnBgD,IAAa7xC,EAAAA,EAAAA,IAAgB,KACjCsvC,GAAuB,CAAE/1C,SAAQu4C,WAAW,IAC5CzC,EAAuB,CAAE91C,SAAQi3C,oBAAgBv2C,GAAY,IAGzD83C,IAAuB/xC,EAAAA,EAAAA,IAAgB,KAC3CuvC,GAAsB,CAAEh2C,UAAS,IAG7By4C,IAAuBhyC,EAAAA,EAAAA,IAAgB,KACtC6uC,IAELW,GAAiB,CACfnD,eAAgB,IAAIA,EAAgBwC,KAEtCQ,EAAuB,CAAE91C,SAAQi3C,oBAAgBv2C,IAEjD6V,EAAiB,CAAExO,QAAS6vC,GAAoB,wBAAyBtC,KAAwB,KAGnG7P,EAAAA,EAAAA,GAAW,CACT,QAASiS,KAGX,MAAMgB,IAAkE72C,EAAAA,EAAAA,KAAQ,IACvEW,IAAA,IAAC,UAAEm2C,EAAS,OAAEn+B,GAAQhY,EAAA,OAC3BU,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLsP,OAAQwgC,EACRvgC,MAAM,cACNtM,KAAK,UACLzF,UAAWsZ,EAAS,SAAW,GAC/BnX,QAASs1C,EACTxlC,UAAW5R,GAAK,qBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAqB,mBAC3B,GAEV,CAACsyC,EAAoBjyC,KAExB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iBACZi0C,GACCjyC,EAAAA,GAAAC,cAACy1C,EAAAA,EAAY,CACX13C,UAAU,2CACV23C,QAASH,GACTzkB,UAAU,SAEV/wB,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,WAAW3V,QAAS2zC,IAChC3L,IAEHnoC,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,UAAU3V,QAASm1C,IAC/Bj3C,GAAK,2BAER2B,EAAAA,GAAAC,cAAC21C,EAAAA,EAAa,MACbxD,GACIpyC,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,YAAY3V,QAASo1C,IAAuBJ,IAChEn1C,EAAAA,GAAAC,cAACsyB,EAAAA,EAAQ,CAACzc,KAAK,eAAe3V,QAASi1C,IAAa/2C,GAAK,WAG3DsI,GACA3G,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACGw5B,IAAqB2H,IAA0BhB,GAAgBc,IAC9D1xC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLkD,KAAK,OACLqM,QAAM,EACNyvB,OAAK,EACLp/B,QAASuzC,IAERr1C,GAAK2Y,EAAY,qBAAuB,qBAG5CizB,GAAoB2H,GACnB5xC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLkD,KAAK,OACLqM,QAAM,EACNyvB,OAAK,EACLp/B,QAASuzC,IAERr1C,GAAK,uBAGT4rC,GAAoByG,GACnB1wC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLkD,KAAK,OACLqM,QAAM,EACNyvB,OAAK,EACLp/B,QAASwzC,IAERt1C,GAAK,aAGT4rC,GAAoBuG,GACnBxwC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLkD,KAAK,OACLqM,QAAM,EACNyvB,OAAK,EACLp/B,QAAS0zC,IAERx1C,GAAK,eAGTyyC,GACC9wC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLsP,OAAQwgC,EACRvgC,MAAM,cACNtM,KAAK,UACLtD,QAASi0C,GACTnkC,UAAW5R,GAAK,mCAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBAAmB,oBAGnC+yC,GACC/wC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLuP,MAAM,cACNtM,KAAK,UAELtD,QA9JZ,WACEuyC,EAA4B,CAAEl/B,OAAQ1W,GACxC,EA6JYmT,UAAU,QAEVjQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,kBAAkB,sBAKrCksC,GAAoBxsC,QAAQ8zC,IAC5BxxC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLxC,UAAU,eACV8R,OAAQwgC,EACRvgC,MAAM,cACNtM,KAAK,UACLtD,QAAS6zC,GACT/jC,UAAuB5R,GAAZ2Y,EAAiB,oBAA4B,mBAExDhX,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,mBAC9BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASwzC,IAG5BxxC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLkE,IAAKuuC,GACLh1C,UAAWi1C,GAAa,SAAW,GACnCzyC,OAAK,EACLsP,QAASnJ,EACTlD,KAAK,UACLsM,MAAM,cACN+S,SAAUktB,EACV//B,UAAU,eACV9P,QAASkzC,IAETrzC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,oBAE/Bm1C,IACCnzC,EAAAA,GAAAC,cAACsvC,EAAmB,CAClBzyC,OAAQA,EACRuV,SAAUA,EACViF,OAAQ27B,GACR4C,OAAQ1C,GACR2C,iBAAkBnvC,IAAasjC,EAC/BjzB,UAAWA,EACX05B,YAAaA,EACbF,cAAeA,EACfI,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTM,kBAAmBA,EACnBL,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBI,oBAAqBA,EACrBuE,oBAAqB/B,GACrB9J,iBAAkBA,EAClB8L,mBAAoBtC,GACpBuC,cAAe7B,GACf8B,kBAAmB3B,GACnBh9B,QAASi8B,GACTh8B,oBAAqBi8B,KAGrB,KAiFV,SAASa,IACP,MAAM6B,EAAc98B,SAASiS,cAAgC,mCAC7D6qB,GAAan0B,OACf,C,wECrfA,MAQA,EAR+CpgB,IAC7C,MAAM,OAAE0V,GAAW1V,EACbw0C,GAAqBhgB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,sBAAuBhf,GAGjF,OAAO8+B,EAAqBp2C,EAAAA,GAAAC,cAACm2C,EAAuBx0C,QAAYpE,CAAS,C,wECL3E,MAQA,EAR2CoE,IACzC,MAAM,OAAE0V,GAAW1V,EACby0C,GAAajgB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,kBAAmBhf,GAGrE,OAAO++B,EAAar2C,EAAAA,GAAAC,cAACo2C,EAAez0C,QAAYpE,CAAS,C,kJCE3D,MAmCA,GAAed,EAAAA,EAAAA,KAnCkBqB,IAA0C,IAAzC,QAAEu4C,EAAO,UAAEC,EAAS,aAAEC,GAAcz4C,EACpE,MAAO04C,EAAWC,EAAaC,IAAiB51C,EAAAA,EAAAA,KAY1C/C,GAAYkC,EAAAA,EAAAA,GAChB,aACAu2C,GAAa,WAGf,OACEz2C,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX44C,OAAQJ,EACR5b,YAAa8b,EACbnS,YApBqB32B,IACvB,MAAQipC,cAAeC,GAAalpC,EAEhCkpC,GACFlpC,EAAEM,kBAGJyoC,GAAe,EAcb,oBAEA32C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,cAAYs4C,EAAU,QAAU,cACjDt2C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAQ,iCACrBu4C,GAAav2C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAes4C,EAAU,iBAAmB,wBAExE,ICrBH,IAAKS,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAoFA,GAAer6C,EAAAA,EAAAA,KAlFgBqB,IAEzB,IAF0B,OAC9BuZ,EAAM,UAAE0/B,EAAS,OAAEC,EAAM,aAAET,GAC5Bz4C,EAEC,MAAMm5C,GAAiBv2C,EAAAA,EAAAA,IAAe,MAChCw2C,GAAgBltB,EAAAA,EAAAA,GAAY+sB,IAC5B,aAAEt3C,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB0X,IAEjE9X,EAAAA,EAAAA,KAAU,IAAO8X,GAASmyB,EAAAA,EAAAA,GAAsBwN,QAAUz5C,GAAY,CAAC8Z,EAAQ2/B,IAE/E,MAAMG,GAAkB7zC,EAAAA,EAAAA,IAAgB8zC,UACtC,MAAQC,aAAcC,GAAO3pC,EAC7B,IAAI4pC,EAAgB,GAEpB,KAAID,EAAGC,OAASD,EAAGC,MAAMj2C,OAAS,IAAOg2C,EAAG9xB,OAAU8xB,EAAG9xB,MAAMlkB,QAExD,GAAIg2C,EAAG9xB,OAAS8xB,EAAG9xB,MAAMlkB,OAAS,EAAG,CAC1C,MAAMk2C,QAAoBC,EAAAA,EAAAA,GAA8BH,EAAG9xB,OACvDgyB,GAAal2C,SACfi2C,EAAQA,EAAMG,OAAOF,GAEzB,OANED,EAAQA,EAAMG,OAAO1uC,MAAM2uC,KAAKL,EAAGC,QAQrCP,IACAT,EAAagB,GAAOR,QAAoBx5C,EAAU,IAG9Cq6C,GAAuBt0C,EAAAA,EAAAA,IAAiBqK,IAC5C,MAAQ0pC,aAAcC,GAAO3pC,EAEzB2pC,EAAGC,OAASD,EAAGC,MAAMj2C,OAAS,IAChC01C,IACAT,EAAavtC,MAAM2uC,KAAKL,EAAGC,QAAQ,GACrC,IAGItT,GAAkB3gC,EAAAA,EAAAA,IAAiBqK,IACvCA,EAAEM,kBAEF,MAAQwU,OAAQo1B,EAAYjB,cAAeC,GAAalpC,EAGnDkqC,EAA8BvuC,QAAQ,4BAA8ButC,IACvEI,EAAe/1C,QAAU+C,OAAO4f,YAAW,KACzCmzB,GAAQ,GA9Cc,KAgD1B,IASF,IAAKv3C,EACH,OAGF,MAAMq4C,EAAoBf,GAAaG,EAEjCn5C,GAAYkC,EAAAA,EAAAA,GAChB,WACAP,GAGF,OACEK,EAAAA,GAAAC,cAAC+3C,EAAAA,EAAM,CAACC,YAAY,0BAClBj4C,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACXumC,YAAaL,EACbgU,WAtBiBC,KACjBjB,EAAe/1C,SACjB+C,OAAOwgC,aAAawS,EAAe/1C,QACrC,EAoBIy1C,OAAQK,EACR92C,QAAS82C,GAETj3C,EAAAA,GAAAC,cAACm4C,EAAU,CAAC5B,aAAcY,EAAiBb,WAAYwB,IACtDA,GAAqB/3C,EAAAA,GAAAC,cAACm4C,EAAU,CAAC5B,aAAcqB,EAAsBvB,SAAO,KAExE,G,wECvGb,MAQA,EARyC10C,IACvC,MAAM,OAAE0V,GAAW1V,EACby2C,GAAejiB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,gBAAiBhf,GAGrE,OAAO+gC,EAAer4C,EAAAA,GAAAC,cAACo4C,EAAiBz2C,QAAYpE,CAAS,C,2rBCFhD,MAAM86C,EAKnBC,WAAAA,CACEC,EACQC,EACAvqB,GACR,KAFQuqB,UAAAA,EAAsB,KACtBvqB,QAAAA,EAA6BwqB,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAKpyC,MAAQ8S,SAASpZ,cAAc,SACpC04C,KAAKpyC,MAAM3C,IAAM40C,EACjBG,KAAKpyC,MAAMiiB,yBAA0B,EACrCmwB,KAAKpyC,MAAMgiB,OAAQ,EACf2F,EAAQxqB,OACVi1C,KAAKpyC,MAAM8Z,aAAa,QAAS6N,EAAQxqB,OAE3Ci1C,KAAKpyC,MAAM7C,MAAM4/B,SAAW,WAC5BqV,KAAKpyC,MAAMqyC,OAEND,KAAKzqB,QAAQ2qB,SAChBF,KAAKpyC,MAAMkiB,MAAO,IAGpBxG,EAAAA,EAAAA,KAAgB,KACd02B,KAAKF,UAAUK,YAAYH,KAAKpyC,OAEhCoyC,KAAKI,4BAA4B,GAErC,CAEOC,IAAAA,IACDL,KAAK5wC,WAAc4wC,KAAKpyC,QAC5BoyC,KAAKI,6BACDJ,KAAKpyC,MAAM0yC,SACbC,EAAAA,EAAAA,GAASP,KAAKpyC,OAEhBoyC,KAAK5wC,WAAY,EACnB,CAEOoxC,KAAAA,GACAR,KAAK5wC,WAAc4wC,KAAKpyC,QACxBoyC,KAAKpyC,MAAM0yC,QACdN,KAAKpyC,MAAM4yC,QAEbR,KAAK5wC,WAAY,EACnB,CAEOqxC,OAAAA,GACLT,KAAKQ,QACLR,KAAKpyC,OAAO6nC,SACZuK,KAAKpyC,WAAQ/I,CACf,CAEO67C,cAAAA,CAAe/V,GACpBqV,KAAKzqB,QAAQoV,SAAWA,EACxBqV,KAAKI,4BACP,CAEQA,0BAAAA,GACN,MAAM,KAAEt1C,EAAM6/B,UAAU,EAAEl3B,EAAC,EAAEC,IAAQssC,KAAKzqB,SAC1CmmB,EAAAA,EAAAA,KAAe,KACb,IAAKsE,KAAKpyC,MAAO,OACjB,MAAMA,EAAQoyC,KAAKpyC,OACb,MAAEmF,EAAK,OAAEC,GAAWgtC,KAAKF,UAAU3qC,yBACzCmU,EAAAA,EAAAA,KAAgB,KACd1b,EAAM7C,MAAMmK,KAAQ,GAAE3E,KAAK1I,MAAM4L,EAAIV,OACrCnF,EAAM7C,MAAMwc,IAAO,GAAEhX,KAAK1I,MAAM6L,EAAIV,OACpCpF,EAAM7C,MAAMgI,MAAS,GAAEjI,MACvB8C,EAAM7C,MAAMiI,OAAU,GAAElI,KAAQ,GAChC,GAEN,E,yFCtDF,MAAM61C,EAAO,KAAOv9B,EAAAA,G,qCCOpB,MAKMw9B,EAAiB,iBAsCjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SA8f5G,GAAe/8C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiD,IAA/C,OAAExC,EAAM,SAAEuV,GAAoB/S,EACrC,MAAM,oBAAEo6C,GAAwB98C,EAAOizC,SAASC,MAEhD,MAAO,CACL4J,sBACAC,aAAc78C,GAAUuV,GAAWunC,EAAAA,EAAAA,IAAmBh9C,EAAQE,EAAQuV,QAAY7U,EAClFq8C,oBAAoB9J,EAAAA,EAAAA,IAAqBnzC,GACzCk9C,uBAAuBC,EAAAA,EAAAA,IAA4Bn9C,GACpD,GATeD,EA9e4BoB,IAyB1C,IAzB2C,IAC/C0G,EAAG,GACHhH,EAAE,OACFX,EAAM,aACNk9C,EAAY,uBACZC,EAAsB,gBACtBC,EAAe,QACfC,EAAO,SACPh9C,EAAQ,QACRi9C,EAAO,YACPt5B,EAAW,kBACXu5B,EAAiB,iBACjBC,EAAgB,aAChBC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,4BACnBC,EAA2B,aAC3Bf,EAAY,mBACZE,GAAkB,sBAClBC,GAAqB,oBACrBJ,GAAmB,SACnBiB,GAAQ,kBACRC,GAAiB,OACjBC,GAAM,SACNrW,IACDzmC,EACC,MAAM,gBACJ+8C,GAAe,mBACfC,GAAkB,oCAClBC,KACE58C,EAAAA,EAAAA,MAGJ,IAAIojB,IAAW7gB,EAAAA,EAAAA,IAAuB,MAClC8D,IACF+c,GAAW/c,GAIb,MAAMw2C,IAAsBt6C,EAAAA,EAAAA,IAAe,MAErCu6C,IAAWv6C,EAAAA,EAAAA,IAAuB,MAElCw6C,IAAmBx6C,EAAAA,EAAAA,IAAuB,MAE1CkuB,IAAkBluB,EAAAA,EAAAA,IAA0B,MAE5Cy6C,IAAoBz6C,EAAAA,EAAAA,IAA0B,MAE9C06C,IAAuB16C,EAAAA,EAAAA,IAAuB,MAE9CtC,IAAOC,EAAAA,EAAAA,KACPg9C,IAAuB36C,EAAAA,EAAAA,KAAO,IAC7B46C,GAAqBC,GAAmBC,KAAsB16C,EAAAA,EAAAA,MAC9D26C,GAA6BC,KAAkC50C,EAAAA,EAAAA,OAC/D60C,GAAeC,KAAoB90C,EAAAA,EAAAA,OACnC+0C,GAAyBC,KAA8Bh1C,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,MACfo1C,GAAiBr1C,KAAas1C,EAAAA,IAAUC,EAAAA,KDtHjC,SACb9B,EACA54B,EACAqN,EACAusB,EACAC,EACAc,EACArC,EACAK,EACAh9C,GAEA,MAAMuyB,GAAcC,EAAAA,EAAAA,GAAwBnO,GAAW24B,GACjDiC,GAAcC,EAAAA,EAAAA,GAAe3sB,GAAa,GAC1C4sB,GAAc37C,EAAAA,EAAAA,IAAuC,IAAIw3B,KAEzDokB,GAAeh5C,EAAAA,EAAAA,IAAiBi5C,IACpCA,EAAIzwC,SAAStO,IACX,MAAMg/C,EAASH,EAAYn7C,QAAQ27B,IAAIr/B,GACnCg/C,IACFA,EAAOrD,UACPkD,EAAYn7C,QAAQi8B,OAAO3/B,GAC7B,GACA,IAGEi/C,GAAsBn5C,EAAAA,EAAAA,IAAgB,KAC1C,KAAK42C,GAAY34B,EAASrgB,SAAY0tB,EAAgB1tB,SAAYi6C,EAAkBj6C,SAAS,OAE7F,MAAMvE,GAASiC,EAAAA,EAAAA,MACT89C,EAAmB,IAAI55C,IAAIu5C,EAAYn7C,QAAQy7C,QAChC3zC,MAAM2uC,KAAKp2B,EAASrgB,QAAQ07C,iBAA8B,kBAElE9wC,SAASsf,IACpB,IAAKA,EAAQyxB,QAAQC,SACnB,OAEF,MAAMC,EAAY,GAAEb,IAAW9wB,EAAQyxB,QAAQC,WAAWrtB,GAAe,KACnE3C,EAAa1B,EAAQyxB,QAAQ/vB,WAEnC4vB,EAAiBvf,OAAO4f,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgCnwB,GACjD,IAAKkwB,EACH,OAGF,MAAME,EAAetuB,EAAgB1tB,QAAS2M,wBACxCsvC,EAAgB/xB,EAAQvd,wBACxB1B,GAAI5L,EAAAA,EAAAA,KAAO48C,EAAcvvC,KAAOsvC,EAAatvC,MAAQsvC,EAAazxC,MAAO,GACzEW,GAAI7L,EAAAA,EAAAA,KAAO48C,EAAcl9B,IAAMi9B,EAAaj9B,KAAOi9B,EAAaxxC,OAAQ,GAE9E,GAAI2wC,EAAYn7C,QAAQ+B,IAAI85C,GAG1B,YAFeV,EAAYn7C,QAAQ27B,IAAIkgB,GAChC3D,eAAejtC,EAAGC,GAI3B,MAAMgxC,EAAczgD,EAAO0gD,aAAav+C,KAAKguB,GAC7C,IAAKswB,EACH,OAEF,MAAME,EAAOF,GAAattB,iBAAkBytB,EAAAA,EAAAA,IAAgC5gD,EAAQygD,EAAYttB,gBAC1F0tB,EAAW,CACftB,EAAUpvB,EAAY2C,GACtBnwB,OAAO7B,SAASsS,KAAK,MAsF7BqnC,eAA2B/3C,GAwBI,IAxBH,YAC1B+9C,EAAW,gBACXxuB,EAAe,kBACfusB,EAAiB,qBACjBC,EAAoB,SACpBoC,EAAQ,OACRC,EAAM,SACNT,EAAQ,SACR3Z,EAAQ,KACRia,EAAI,UACJI,EAAS,YACTvB,GAaD98C,EACC,GAAI+9C,EAAYO,SAAU,CACxB,MAAM7tC,EAAQstC,EAAY5tB,oBAAsBkuB,GAAYE,EAAAA,EAAAA,IAASF,QAAangD,EAE5EsgD,SADgBC,EAAAA,EAAAA,MACCC,KACrBf,EACAM,EAAOnC,EAAkBj6C,QAAW0tB,EAAgB1tB,QACpDs8C,EACA,CACEh6C,KAAM61C,EACN2E,OAAQ3a,EACR4a,eAAgBX,GAElBG,EACA3tC,EAAQ,CAACA,EAAMouC,EAAGpuC,EAAMquC,EAAGruC,EAAMyU,QAAKhnB,GAGxC,MAAO,CACLw7C,KAAMA,IAAM8E,EAAO9E,OACnBG,MAAOA,IAAM2E,EAAO3E,QACpBC,QAASA,IAAM0E,EAAOO,WAAWX,GACjCrE,eAAgBA,CAACjtC,EAAWC,IACnByxC,EAAOQ,sBAAsBZ,EAAQ,CAAEtxC,IAAGC,MAGvD,CAEA,GAAIgxC,EAAY/1B,QAAS,CACvB,MAAM5jB,EAAQ25C,EAAY5tB,oBAAsB2sB,EAAe,WAAUA,UAAiB5+C,EACpF+gD,EAAgB,IAAIjG,EACxB2E,EACA5B,EAAqBl6C,QACrB,CAAEsC,KAAM61C,EAAMhW,WAAU5/B,UAE1B,MAAO,CACLs1C,KAAMA,IAAMuF,EAAcvF,OAC1BG,MAAOA,IAAMoF,EAAcpF,QAC3BC,QAASA,IAAMmF,EAAcnF,UAC7BC,eAAgBA,CAACjtC,EAAWC,IAAckyC,EAAclF,eAAe,CAAEjtC,IAAGC,MAEhF,CAEA,MAAM,IAAImyC,MAAM,gCAClB,EAvJMC,CAAa,CACXpB,cACAxuB,kBACAusB,oBACAC,uBACAoC,WACAC,OAAQV,EACRC,WACAM,OACAja,SAAU,CAAEl3B,IAAGC,KACfsxC,UAAWjuB,EACX0sB,gBACCsC,MAAMC,IACH7E,GACF6E,EAAU3F,OAGZsD,EAAYn7C,QAAQ+7B,IAAI8f,EAAU2B,EAAU,GAC5C,IAGJpC,EAAatzC,MAAM2uC,KAAK+E,GAAkB,KAG5Cn9C,EAAAA,EAAAA,KAAU,KACDo/C,EAAAA,EAAAA,IAAkClC,IACxC,CAACA,KAEJl9C,EAAAA,EAAAA,KAAU,KACH46C,KAAc54B,EAASrgB,SAAY0tB,EAAgB1tB,SAAYhE,GAAag9C,GAMjF9F,EAAAA,EAAAA,KAAe,KACbqI,GAAqB,IANrBH,EAAatzC,MAAM2uC,KAAK0E,EAAYn7C,QAAQy7C,QAO5C,GACD,CAACxC,EAASsC,EAAqBl7B,EAAU+6B,EAAc1tB,EAAiB1xB,EAAUg9C,KAErF9uC,EAAAA,EAAAA,KAAgB,KACdgO,SAASurB,gBAAgBlhC,MAAMuhC,YAAY,8BAA+BmX,GAAe,OAAO,GAC/F,CAACA,KAEJyC,EAAAA,EAAAA,IAAsB9gD,IAAuB,IAArB+gD,GAAgB/gD,OACdP,IAApBshD,GAAiCpvB,IAAgBovB,GACnDpC,GACF,GACC,CAAChtB,EAAagtB,IAEjB,MAAMqC,GAA+BC,EAAAA,EAAAA,GACnCtC,EACA,CAACA,GA/He,KAiIhB,IAEFuC,EAAAA,EAAAA,GAAkBpwB,EAAiBkwB,GAEnC,MAAMG,GAAkB37C,EAAAA,EAAAA,IAAgB,KACtC+4C,EAAYn7C,QAAQ4K,SAAS0wC,IAC3BA,EAAOtD,OAAO,GACd,IAGEgG,GAAoB57C,EAAAA,EAAAA,IAAgB,KACnCu2C,GAILwC,EAAYn7C,SAAS4K,SAAS0wC,IAC5BA,EAAOzD,MAAM,GACb,IAGEoG,GAAyB77C,EAAAA,EAAAA,IAAgB,MAC7C8wC,EAAAA,EAAAA,IAAe8K,EAAkB,KAMnCE,EAAAA,EAAAA,GAAkBH,EAAiBE,EACrC,CC5BEE,CACElF,EACA54B,GACAqN,GACAusB,GACAC,GACApB,EAAyB,aAAe,WACxCH,GACAK,EACAh9C,GAGF,MAAMoiD,GAAiBtF,EAhGiB,IAgG6CtzC,GAAW,IAAM,IAChG64C,IAAoBj8C,EAAAA,EAAAA,IAAgB,WAAsB,IAArBk8C,EAAQ/2C,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,IACjDg3C,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAWn+B,GAASrgB,QAAS0vB,QAAyB,IAAG0oB,KACzDqG,EAAgBrc,OAAOoc,EAASj8C,MAAMiI,OAAOgoB,QAAQ,KAAM,KAC3DksB,EAAQ1E,GAAiBh6C,SACzB,aAAE2+C,GAAiBD,EACnBE,EAAY72C,KAAKC,IAAI22C,EAAcP,IAEzC,GAAIQ,IAAcH,EAChB,OAGF,MAAMI,EAAcF,EAAeP,GAEnC,SAASU,IACP,MAAMC,EAAqBh3C,KAAK1I,MApJL,GAqJI0I,KAAKi3C,IAAIj3C,KAAKyjC,IAAIoT,EAAYH,KAE7DD,EAASj8C,MAAMiI,OAAU,GAAEo0C,MAC3BJ,EAASj8C,MAAMw8C,mBAAsB,GAAEA,MACvCP,EAASxR,UAAUiS,OAAO,YAAaJ,EACzC,CAEA,OAAIP,OAEFx9B,EAAAA,EAAAA,IAAgBg+B,GAGTA,CACT,GAEJ,KAEA50C,EAAAA,EAAAA,KAAgB,KACT4uC,GACLuF,IAAkB,EAAM,GACvB,CAACvF,EAAwBuF,KAE5B,MAAMa,IAAU1/C,EAAAA,EAAAA,IAAOy5C,MACvB/uC,EAAAA,EAAAA,KAAgB,KACd,MAAMi1C,EAAOnjD,EAAWi9C,IAAY,GAEhCkG,IAAS9+B,GAASrgB,QAASo/C,YAC7B/+B,GAASrgB,QAASo/C,UAAYD,GAG5BA,IAASpF,GAAS/5C,QAASo/C,YAC7BrF,GAAS/5C,QAASo/C,UAAYD,GAG5BA,IAASD,GAAQl/C,UACnBk/C,GAAQl/C,QAAUm/C,EAElBd,IAAmBc,GACrB,GACC,CAAClG,EAASj9C,EAAUqiD,MAEL7+C,EAAAA,EAAAA,IAAO7D,GACfqE,QAAUrE,EACpB,MAAM0jD,IAAaj9C,EAAAA,EAAAA,IAAgB,KAC5Bie,GAASrgB,WAIVs/C,EAAAA,EAAAA,MACF38B,WAAW08B,GAvMM,MA2MnBE,EAAAA,EAAAA,GAAqBl/B,GAASrgB,SAAS,IAGnCw/C,IAA2Bp9C,EAAAA,EAAAA,IAAgB,KAC/Ck4C,KA/JJ,WACE,MAAMmF,EAAY18C,OAAO28C,eACpBD,IAIDA,EAAUE,gBACZF,EAAUE,kBACDF,EAAUG,OACnBH,EAAUG,QAEd,CAqJIC,EAAgB,IAGlB,SAASC,KAEP,GAAIhF,EAAAA,GACF,OAAO,EAGT,MAAM2E,EAAY18C,OAAO28C,eACzB,IAAKD,IAAcA,EAAUM,YAAc5F,GAAqBn6C,QAK9D,OAJAs6C,KACIS,EAAAA,IACFH,IAA2B,IAEtB,EAGT,MAAMoF,EAAiBP,EAAUQ,WAAW,GACtCC,EAAeF,EAAeG,WAAW1tB,OAC/C,QACE8mB,KACI6G,EAAAA,EAAAA,GAAuBJ,EAAgBjH,GAAmBsH,EAAAA,OAC1DH,IACDI,EAAAA,EAAAA,GAAqBJ,KACpBF,EAAeO,gBAEnBjG,MACO,EAIX,CAEA,SAASkG,KACP,IAAKV,KACH,OAGF,GAAInF,GACF,OAGF,MAAMqF,EAAiBj9C,OAAO28C,eAAgBO,WAAW,GACnDQ,EAAgBT,EAAerzC,wBAC/B+zC,EAAergC,GAASrgB,QAAS0vB,QAAyB,IAAG0oB,KAAmBzrC,wBAEtF,IAAI1B,EAAKw1C,EAAc/zC,KAAO+zC,EAAcl2C,MAAQ,EAAKm2C,EAAah0C,KAElEzB,EAAIotC,EACNptC,EAAIotC,EACKptC,EAAIy1C,EAAan2C,MAAQ8tC,IAClCptC,EAAIy1C,EAAan2C,MAAQ8tC,GAG3BmC,GAA+B,CAC7BvvC,IACAC,EAAGu1C,EAAc1hC,IAAM2hC,EAAa3hC,MAGtC27B,GAAiBsF,GACjB3F,IACF,CAEA,SAASsG,KACH7G,GAAoB95C,SACtB+C,OAAOwgC,aAAauW,GAAoB95C,SAG1C85C,GAAoB95C,QAAU+C,OAAO4f,WAAW69B,GA7Ob,IA8OrC,EAkHAniD,EAAAA,EAAAA,KAAU,KACJuiB,EAAAA,IAIAw4B,GACFiG,IACF,GACC,CAAC1jD,EAAQ0jD,GAAY7G,EAAcY,KAEtC/6C,EAAAA,EAAAA,KAAU,KACR,IACG1C,GACEo9C,IAAoBsH,EAAAA,KACpBhH,GACAwB,IACAnC,GAEH,OAGF,MAAMkI,EAAyBn0C,IAC7B,IAAIo0C,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAE1hD,GAAQsN,EACV8U,EAAS9U,EAAE8U,OAEjB,IAAKA,GAAU+2B,EAAYt1B,SAAS7jB,GAClC,OAGF,MAAM2hD,EAAQzgC,GAASrgB,QACjB+gD,EAAuB7oC,SAASwnC,gBAAgBsB,YAEtD,MACI7hD,EAAI2iC,WAAW,UAAar1B,EAAE6mC,UAAoB,UAARn0C,KAAsB4hD,GACnD,SAAXt0C,EAAEo1B,OAAoBp1B,EAAEm1B,SAAWn1B,EAAEk1B,UAA+B,UAAnBpgB,EAAO0/B,UAM5DH,GACGv/B,IAAWu/B,GACQ,UAAnBv/B,EAAO0/B,SACY,aAAnB1/B,EAAO0/B,UACN1/B,EAAO2/B,kBACX,EACA3B,EAAAA,EAAAA,GAAqBuB,GAAO,GAAM,GAElC,MAAMK,EAAW,IAAIC,cAAc30C,EAAE2U,KAAM3U,GAC3Cq0C,EAAMO,cAAcF,EACtB,GAKF,OAFAjpC,SAASqpB,iBAAiB,UAAWqf,GAAuB,GAErD,KACL1oC,SAASupB,oBAAoB,UAAWmf,GAAuB,EAAK,CACrE,GACA,CAACjlD,EAAQo9C,EAAiB8B,GAAgBnC,GAAoBW,KAEjEh7C,EAAAA,EAAAA,KAAU,KACR,MAAMijD,GAAkBlxC,EAAAA,EAAAA,KAAU3D,IAClB,QAAVA,EAAEtN,MAAkB0hD,EAAAA,EAAAA,QACtBp0C,EAAEyU,kBACFJ,EAAAA,EAAAA,IAAgBu+B,IAClB,GAva6B,KAwaA,GAAM,GAErC,OAAOkC,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACjC,MAEJhhD,EAAAA,EAAAA,KAAU,KACR,MAAMyiD,EAAQzgC,GAASrgB,QAEvB,SAASyhD,IACPX,EAAMY,MACR,CAMA,OAJIpI,GACFwH,EAAMvf,iBAAiB,QAASkgB,GAG3B,KACLX,EAAMrf,oBAAoB,QAASggB,EAAc,CAClD,GACA,CAACnI,IAEJ,MAAMqI,IAAYxrB,EAAAA,EAAAA,IAAgB,IAAM55B,QAAQP,GAAYi9C,MAAY,CAACj9C,EAAUi9C,IAE7Ep8C,IAAYkC,EAAAA,EAAAA,GAChB,+BACA4iD,IAAa,UACbrI,GAAuB,kBAGzB,OACEz6C,EAAAA,GAAAC,cAAA,OAAKxC,GAAIA,EAAI0C,QAASs6C,EAAsBG,QAAoBp9C,EAAWkE,IAAKrD,GAAKsD,MAAQ,WAAQnE,GACnGwC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBq5C,GAC3C/U,SAAUA,GACVrkC,QAAU85C,GAA2BK,OAAiC98C,EA7G5E,WACMy8C,GAA0BK,GAC9BU,GAAoC,CAAEl+C,UACxC,GA4GMkD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OACEwE,IAAK+c,GACL/jB,GAAIy8C,GAAmBsH,EAAAA,IACvBxjD,UAAWA,GACX+kD,gBAAiB9I,GAA0BK,EAC3Cz3B,KAAK,UACLnhB,IAAI,OACJ8gB,SAAU,EACVriB,QAASqgD,GACT/9B,SAhKV,SAAsB7U,GACpB,MAAM,UAAE2yC,EAAS,YAAEyC,GAAgBp1C,EAAEoS,cAKrC,GAHA26B,GApTc,SAoTL4F,EAA0B,GAAKA,IAIrCx+B,EAAAA,MACIihC,IAAgBA,EAAYzhD,UAE3B0hD,EAAAA,KAAsB1C,EAAUp8B,SAAS,kBAC1Co8B,EAAUp8B,SAAS,gBACxB,CACA,MAAMy8B,EAAY18C,OAAO28C,eACrBD,IACFp/B,GAASrgB,QAAS0hD,OAClBjC,EAAUE,mBACVJ,EAAAA,EAAAA,GAAqBl/B,GAASrgB,SAAU,GAE5C,CACF,EA6IU+hD,UAtMV,SAAuBt1C,GAErB,MAAM,YAAEu1C,GAAgBv1C,EAElB0yC,EAAOlG,IAEb,IAAK+I,IAAgB7C,IAAS1yC,EAAEk1B,SAAWl1B,EAAEm1B,SAAU,CACrD,MAAMP,EAA6B,cAAV50B,EAAEtN,IAAsB,EAAc,YAAVsN,EAAEtN,KAAqB,OAAI9C,EAChF,GAAIglC,EAIF,OAHA50B,EAAEyU,sBAEF04B,GAAmB,CAAEvY,oBAGzB,CAEK2gB,GAAyB,UAAVv1C,EAAEtN,KAAoBsN,EAAE6mC,SAahC0O,GAAyB,YAAVv1C,EAAEtN,KAAsBggD,GAAS1yC,EAAEk1B,SAAYl1B,EAAEm1B,SAAYn1B,EAAEw1C,OAIxFx1C,EAAE8U,OAAOggB,iBAAiB,QAASof,GAA6B,CAAEuB,MAAM,KAHxEz1C,EAAEyU,iBACFy4B,OAbGkB,KAE0B,UAAxBtC,KAAoC9rC,EAAE6mC,UACX,eAAxBiF,KAAyC9rC,EAAEm1B,SAAWn1B,EAAEk1B,YAG9Dl1B,EAAEyU,iBAEFo5B,KACAZ,KAQN,EAoKUpoB,YAtOV,SAAyB7kB,GAcvB,SAAS01C,EAAuBC,GAC1BA,aAAchB,eAA4B,QAAXgB,EAAGjjD,KAA4B,WAAXijD,EAAGjjD,MAI1DwjB,YAAW,KACTw3B,GAAqBn6C,SAAU,CAAK,GA9SR,KAiT9B+C,OAAO0+B,oBAAoB,UAAW0gB,GACtCp/C,OAAO0+B,oBAAoB,YAAa0gB,GAC1C,CAxBiB,IAAb11C,EAAEQ,OAOFktC,GAAqBn6C,UAIzBm6C,GAAqBn6C,SAAU,EAe/BkY,SAASqpB,iBAAiB,YAAa4gB,GACvCjqC,SAASqpB,iBAAiB,UAAW4gB,KA1BhB11C,EAAEoS,cAAc6Q,QAAS,2BAA6BjjB,EAAE8U,QAEhEggB,iBAAiB,UAAWof,GAA6B,CAAEuB,MAAM,GAyBhF,EA0MU3jC,cAAew8B,EAAAA,GA7IzB,SAAkCtuC,GAC3BqzC,OAILlF,IAA4BD,IAEvBA,GAMHL,MALA7tC,EAAEyU,iBACFzU,EAAEM,kBAEFyzC,MAIJ,OA8HiEnkD,EACvDgmD,cAAetH,EAAAA,GAAa4F,QAA8BtkD,EAC1D,aAAYsjB,KAEZu5B,GACAr6C,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GACT,oBACC+5C,IAA2BK,GAAoB,aAElD54C,IAAI,SAEFu4C,IAA2BK,GACxBt6C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CACjB8iB,GAGL9gB,EAAAA,GAAAC,cAAA,UAAQwE,IAAKoqB,GAAiB7wB,UAAU,kBACxCgC,EAAAA,GAAAC,cAAA,UAAQwE,IAAK22C,GAAmBp9C,UAAU,kBAC1CgC,EAAAA,GAAAC,cAAA,OAAKwE,IAAK42C,GAAsBr9C,UAAU,+BAG9CgC,EAAAA,GAAAC,cAAA,OAAKwE,IAAK02C,GAAkBn9C,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBq5C,EAAgB,UACrFv5C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OAAKwE,IAAKy2C,GAAUl9C,WAAWkC,EAAAA,EAAAA,GAAelC,GAAW,SAAU0D,IAAI,gBAGzDlE,IAAjBw8C,GACCh6C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBAAuB0D,IAAI,QACvCs4C,GAGLh6C,EAAAA,GAAAC,cAACwjD,EAAAA,EAAa,CACZnsC,OAAQikC,GACRmI,eAAgBhI,GAChBE,cAAeA,GACfC,iBAAkBA,GAClBtkC,QAASopC,KAEVtG,GAAqBr6C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,uBAAsBwR,EAAAA,EAAAA,GAAW6qC,IACnE,I,yKCrkBV,MAQA,EARuCz4C,IACrC,MAAM,OAAE0V,GAAW1V,EACb+hD,GAAavtB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,cAAehf,GAGjE,OAAOqsC,EAAa3jD,EAAAA,GAAAC,cAAC0jD,EAAe/hD,QAAYpE,CAAS,EC6L3D,GAAed,EAAAA,EAAAA,KAvJwBqB,IAqBjC,IArBkC,OACtCjB,EAAM,SACNuV,EAAQ,SACR1L,EAAQ,YACRi9C,EAAW,gBACXC,EAAe,QACf1J,EAAO,iBACP2J,EAAgB,eAChBC,EAAc,gBACdC,EAAe,oBACfC,EAAmB,gBACnBC,EAAe,YACfC,EAAW,kBACXC,EAAiB,iBACjB9J,EAAgB,eAChB+J,EAAc,cACdC,EAAa,oBACbC,EAAmB,gBACnBC,EAAe,mBACfC,EAAkB,UAClBzmD,GACDD,EACC,MAAM,sBACJ2mD,EAAqB,kBACrBC,EAAiB,eACjBC,EAAc,qBACdC,IACEzmD,EAAAA,EAAAA,MAGE0mD,GAAankD,EAAAA,EAAAA,IAAuB,OAEnCokD,EAAoBC,IAA+BjkD,EAAAA,EAAAA,MACnDqvB,EAAqB60B,IAA0Bl+C,EAAAA,EAAAA,SAAsCvJ,GAEtF0nD,GAA4BhlD,EAAAA,EAAAA,GAChC,6BACCi6C,GAAW,YACZ4K,EACKjB,GAAoB,cACpBA,GAAoB,cAGrBqB,GAA2B5hD,EAAAA,EAAAA,IAAgB,KAC/CghD,MACAC,MACAT,IACA,MAAMqB,EAAYN,EAAW3jD,QAC7B,IAAKikD,EAAW,OAChB,MAAM,EAAEh5C,EAAC,EAAEC,GAAM+4C,EAAUt3C,wBAC3Bm3C,EAAuB,CAAE74C,IAAGC,KAAI,IAG5Bg5C,GAAmB9hD,EAAAA,EAAAA,IAAiBgf,IAC3B,aAATA,GACFmiC,EAAsB,CAAEY,MAAO,KAC/BX,EAAkB,CAAEW,WAAO9nD,MAE3BmnD,EAAkB,CAAEW,MAAO,KAC3BZ,EAAsB,CAAEY,WAAO9nD,IACjC,IAGI+nD,GAAuBhiD,EAAAA,EAAAA,IAAgB,KAC3C,MAAMiiD,EAAensC,SAASiS,cAC5B84B,EAAoBqB,EAAAA,IAAoCC,EAAAA,KAGrD/+C,GAAY6+C,IAAiBnsC,SAASssC,eAK3CH,GAAc3C,OACd/+B,YAAW,KACTygC,MACAR,GAAgB,GA3GgB,MAoGhCA,GAQ+B,IAG7BpzB,GAAoBptB,EAAAA,EAAAA,IAAgB,IAAMuhD,EAAW3jD,UACrDyvB,GAAiBrtB,EAAAA,EAAAA,IAAgB,IAAMuhD,EAAW3jD,SAAS0vB,QAAQ,mCACnEC,GAAiBvtB,EAAAA,EAAAA,IAAgB,IAAM8V,SAASiS,cAAc,kCAC9D+F,GAAY9tB,EAAAA,EAAAA,IAAgB,KAAM,CAAG+tB,YAAY,OAEjD,UACJP,EAAS,UAAEC,EAAS,iBAAEC,EAAgB,iBAAEC,EAAkBxtB,MAAOytB,IAC/DC,EAAAA,EAAAA,GACFhB,EACAO,EACAC,EACAE,EACAO,GAGF,OACErxB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAyQ,SAAA,KACG9J,EACC3G,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLvC,UAAWknD,EACX1kD,OAAK,EACLuP,MAAM,cACN5P,QAAS2jD,EAAmBE,EAAkBuB,EAC9Ct1C,UAAU,gCAEVjQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACZ8lD,IAAqBiB,GAAsB/kD,EAAAA,GAAAC,cAAC8oB,EAAAA,EAAO,CAAChZ,MAAM,UAG7D/P,EAAAA,GAAAC,cAAC2lD,EAAAA,EAAqB,CACpB5nD,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB4jD,GAAoB,aACpEtjD,OAAK,EACLuP,MAAM,cACN81C,WAAYV,EACZl1C,UAAU,gCAEVjQ,EAAAA,GAAAC,cAAA,OAAKwE,IAAKqgD,EAAY9mD,UAAU,wBAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAAC0jD,EAAU,CACT7mD,OAAQA,EACRuV,SAAUA,EACViF,OAAQwsC,GAAoBpmD,QAAQ+mD,GACpCb,YAAaA,EACbC,gBAAiBA,EACjB//C,OAAQkhD,EACRztC,QAASysC,EACTM,cAAeA,EACfJ,gBAAiBA,EACjBD,oBAAqBA,EACrBE,YAAaA,EACbE,eAAgBA,EAChByB,aAAcT,EACdT,eAAgBA,EAChBC,qBAAsBA,EACtBT,kBAAmBA,EACnB9J,iBAAkBA,EAClBt8C,UAAWA,EACX+yB,UAAWqzB,EAAoBrzB,OAAYvzB,EAC3CwzB,UAAWozB,EAAoBpzB,OAAYxzB,EAC3CyzB,iBAAkBmzB,EAAoBnzB,OAAmBzzB,EACzD0zB,iBAAkBkzB,EAAoBlzB,OAAmB1zB,EACzDkG,MAAO0gD,EAAoBjzB,OAAY3zB,IAExC,G,6LC1JP,MAAMuoD,EAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,EAAantC,SAASpZ,cAAc,OA4c1C,GAAevD,EAAAA,EAAAA,KA1cqBqB,IAM9B,IAN+B,OACnCuZ,EAAM,eACNosC,EAAc,cACd9H,EAAa,iBACbC,EAAgB,QAChBtkC,GACDxZ,EAEC,MAAM80B,GAAelyB,EAAAA,EAAAA,IAAuB,MAEtC8lD,GAAkB9lD,EAAAA,EAAAA,IAAyB,OAC3C,aAAEjB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB0X,IAC1DovC,EAAmBC,EAAiBC,IAAoB7lD,EAAAA,EAAAA,MACxD8lD,EAASC,IAAc//C,EAAAA,EAAAA,IAAS,KAChCggD,EAAeC,IAAoBjgD,EAAAA,EAAAA,KAAS,IAC5CkgD,EAAgBC,IAAqBngD,EAAAA,EAAAA,OACrCogD,EAAqBC,IAA0BrgD,EAAAA,EAAAA,IAA+B,CAAC,IAEtFvH,EAAAA,EAAAA,KAAU,IAAO8X,GAASmyB,EAAAA,EAAAA,GAAsBlyB,QAAW/Z,GAAY,CAAC8Z,EAAQC,KAChF8vC,EAAAA,EAAAA,GACE/vC,EACAub,EACAtb,GACA,IAGF/X,EAAAA,EAAAA,KAAU,KACJknD,EACFD,EAAgBtlD,QAAS6gB,SAEzB8kC,EAAW,IACXE,GAAiB,GACnB,GACC,CAACN,KAEJlnD,EAAAA,EAAAA,KAAU,KACHE,IACHknD,IACAQ,EAAuB,CAAC,GACxBF,OAAkB1pD,GACpB,GACC,CAACopD,EAAkBlnD,KAEtBF,EAAAA,EAAAA,KAAU,KACR,IAAK8X,IAAWskC,EACd,OAGF,MAAM0L,EAAwC,CAAC,EAC/C,IAAI,cAAEC,GAAkB3L,EAAc4L,wBACtC,KAAOD,GAAiBA,EAAc9pD,KAAO+jD,EAAAA,KAAmB,CAC9D,MAAMiG,EAAa1B,EAAwBwB,EAAcnF,SACrDqF,IACFH,EAAgBG,IAAc,GAGhCF,EAAgBA,EAAcA,aAChC,CAEAH,EAAuBE,EAAgB,GACtC,CAAChwC,EAAQskC,EAAe+K,IAE3B,MAAMe,GAAmBnkD,EAAAA,EAAAA,IAAgB,KACvC,IAAKq4C,EACH,OAGF,MAAMgF,EAAY18C,OAAO28C,eACrBD,IACFA,EAAUE,kBACVF,EAAU+G,SAAS/L,GACrB,IAGIgM,GAAsBrkD,EAAAA,EAAAA,IAAgB,KAC1C,MAAMq9C,EAAY18C,OAAO28C,eACrBD,GACF/E,EAAiB+E,EAAUQ,WAAW,GACxC,IAGIyG,GAAkBtkD,EAAAA,EAAAA,IAAiBukD,IACvC,GAAKlM,EASL,OANA4K,EAAWuB,gBAAgBnM,EAAcoM,iBACrCF,GACFtB,EAAW3J,iBAAiBoL,EAAAA,IAA6Bl8C,SAASm8C,IAChEA,EAAGC,YAAYD,EAAGE,aAAa,OAAQ,IAGpC5B,EAAWjG,SAAS,IAGvB8H,GAAqB9kD,EAAAA,EAAAA,IAAgB,KACzC,GAAKq4C,EAIL,OAAOA,EAAc4L,wBAAwBD,aAAa,IAG5D,SAASe,IACP,MAAMrG,EAAQwE,EAAgBtlD,QAC9B,IAAK8gD,EACH,OAGF,MAAM,YAAExV,EAAW,YAAE8b,EAAW,WAAEC,GAAevG,EACjD,GAAIsG,GAAe9b,EAEjB,YADAya,OAAkB1pD,GAIpB,IAAIQ,EAAY,GACZwqD,EAAaD,EAAc9b,IAC7BzuC,EAAY,cAEVwqD,EAAa,IACfxqD,GAAa,cAGfkpD,EAAkBlpD,EACpB,CAOA,SAASyqD,EAAyBnoD,GAChC,GAAI6mD,EAAoB7mD,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAIpB,OAAO09C,KAAKuK,GAAqBzxB,MAClCgzB,GAASA,IAASpoD,GAAO5C,QAAQypD,EAAoBuB,MAEtD,MAAO,gBAEJ,GAAIvB,EAAoBwB,WAAaxB,EAAoByB,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoBtlD,EAAAA,EAAAA,IAAgB,KACxC,GAAI4jD,EAAoB2B,QAAS,CAC/B,MAAMz9B,EAAUg9B,IAChB,IACGzM,IACGvwB,GACDA,EAAQyxB,QAAQiM,aAAepzB,EAAAA,GAAsBC,UACpDvK,EAAQ23B,YAEZ,OASF,OANA33B,EAAQ88B,YAAY98B,EAAQ23B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHwB,SAAS,KAIb,CAEA,MAAMroD,EAAOonD,IACbxuC,SAAS2vC,YACP,cAAc,EAAQ,2CAA0CrzB,EAAAA,GAAsBC,YAAYn1B,YAEpG8W,GAAS,IAGL0xC,GAAiB1lD,EAAAA,EAAAA,IAAgB,KACrC6jD,GAAwBE,IAEtBjuC,SAAS2vC,YAAY1B,EAAgB4B,KAAO,eAAiB,QAC7DhqD,OAAO09C,KAAK0K,GAAiBv7C,SAASzL,IACvB,WAARA,GAA4B,cAARA,IAAwB5C,QAAQ4pD,EAAgBhnD,KACvE+Y,SAAS2vC,YAAY1oD,EACvB,IAGFsnD,IACO,IACFN,EACH4B,MAAO5B,EAAgB4B,QAEzB,IAGEC,GAAmB5lD,EAAAA,EAAAA,IAAgB,KACvC8V,SAAS2vC,YAAY,UACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACH8B,QAAS9B,EAAgB8B,UACxB,IAGCC,GAAsB9lD,EAAAA,EAAAA,IAAgB,KAC1C8V,SAAS2vC,YAAY,aACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACHgC,WAAYhC,EAAgBgC,aAC3B,IAGCC,GAA0BhmD,EAAAA,EAAAA,IAAgB,KAC9C,GAAI4jD,EAAoByB,cAAe,CACrC,MAAMv9B,EAAUg9B,IAChB,IACGzM,IACGvwB,GACmB,QAApBA,EAAQ+2B,UACP/2B,EAAQ23B,YAEZ,OASF,OANA33B,EAAQ88B,YAAY98B,EAAQ23B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHsB,eAAe,KAInB,CAEA,MAAMnoD,EAAOonD,IACbxuC,SAAS2vC,YAAY,cAAc,EAAQ,QAAOvoD,WAClD8W,GAAS,IAGLiyC,GAAsBjmD,EAAAA,EAAAA,IAAgB,KAC1C,GAAI4jD,EAAoBwB,UAAW,CACjC,MAAMt9B,EAAUg9B,IAChB,IACGzM,IACGvwB,GACmB,SAApBA,EAAQ+2B,UACP/2B,EAAQ23B,YAEZ,OASF,OANA33B,EAAQ88B,YAAY98B,EAAQ23B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHqB,WAAW,KAIf,CAEA,MAAMloD,EAAOonD,GAAgB,GAC7BxuC,SAAS2vC,YAAY,cAAc,EAAQ,6CAA4CvoD,YACvF8W,GAAS,IAGLkyC,GAAuBlmD,EAAAA,EAAAA,IAAgB,KAC3C,MAAMmmD,IAAoBC,EAAAA,EAAAA,GAAe9C,IAAY,IAAIvxC,MAAM,KAAKjW,IAAIuqD,WAAW55C,KAAK,KAExF,GAAI+2C,EAAe,CACjB,MAAM17B,EAAUg9B,IAChB,IAAKh9B,GAA+B,MAApBA,EAAQ+2B,QACtB,OAOF,OAJC/2B,EAA8B1V,KAAO+zC,OAEtCnyC,GAGF,CAEA,MAAM9W,EAAOonD,GAAgB,GAC7BH,IACAruC,SAAS2vC,YACP,cACA,EACC,WAAUU,yCAAwDjpD,SAErE8W,GAAS,IAGLorB,GAAgBp/B,EAAAA,EAAAA,IAAiBqK,IACrC,MAUM0yB,EAVqD,CACzDupB,EACArlC,EAAGykC,EACH/0C,EAAGm1C,EACH/nD,EAAG6nD,EACHW,EAAGN,EACHj0C,EAAGg0C,EACHQ,EAAGlB,GCjWM,SAAyBj7C,GACtC,MAAMtN,EAAMsN,EAAEtN,KAAOsN,EAAEo1B,KAEvB,OAAO1iC,EAAI2iC,WAAW,OAAS3iC,EAAIlB,MAAM,GAAG4qD,cAAgB1pD,CAC9D,CDgWoC2pD,CAAgBr8C,KAG9CA,EAAEw1C,SACGx1C,EAAEm1B,SAAWn1B,EAAEk1B,UAChBxC,IAKN1yB,EAAEyU,iBACFzU,EAAEM,kBACFoyB,IAAS,KAGX9gC,EAAAA,EAAAA,KAAU,KACJ8X,GACF+B,SAASqpB,iBAAiB,UAAWC,GAGhC,IAAMtpB,SAASupB,oBAAoB,UAAWD,KACpD,CAACrrB,EAAQqrB,IAEZ,MAAMtkC,GAAOC,EAAAA,EAAAA,KASb,IAAKoB,EACH,OAGF,MAAM1B,GAAYkC,EAAAA,EAAAA,GAChB,gBACAP,EACA+mD,GAAqB,sBAGjBwD,GAA0BhqD,EAAAA,EAAAA,GAC9B,iCACAxC,QAAQmpD,EAAQtlD,SAAW,SAGvBmC,GAAQggD,EACT,SAAQA,EAAet3C,aAAas3C,EAAer3C,8BAA8Bq3C,EAAet3C,OACjG,GAEJ,OACEpM,EAAAA,GAAAC,cAAA,OACEwE,IAAKouB,EACL70B,UAAWA,EACX0F,MAAOA,GACPw/C,UA/BJ,SAAgCt1C,GAChB,UAAVA,EAAEtN,KAAmBomD,IACvB+C,IACA77C,EAAEyU,iBAEN,EA4BIoQ,YAAa7c,EAAAA,GAEb5V,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,eACVjS,UAAWyqD,EAAyB,WACpCtoD,QAAS0oD,GAET7oD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,YACVjS,UAAWyqD,EAAyB,QACpCtoD,QAAS8oD,GAETjpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,cACVjS,UAAWyqD,EAAyB,UACpCtoD,QAASgpD,GAETnpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,kBACVjS,UAAWyqD,EAAyB,aACpCtoD,QAASkpD,GAETrpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,qBACVjS,UAAWyqD,EAAyB,iBACpCtoD,QAASopD,GAETvpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,6BAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAU,iBACVjS,UAAWyqD,EAAyB,aACpCtoD,QAASqpD,GAETxpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,yBAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,cAAcE,UAAW5R,EAAK,2BAA4B8B,QAASwmD,GAC/E3mD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACwP,MAAM,cAAcE,UAAW5R,EAAK,UAAW8B,QAASymD,GAC9D5mD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwC+mD,IAElEjnD,EAAAA,GAAAC,cAAA,SACEwE,IAAKgiD,EACLzoD,UAAU,+BACVukB,KAAK,OACLxX,MAAO87C,EACP/lC,YAAY,eACZwB,aAAa,MACb6nC,UAAU,MACVzoD,IAAI,OACJ+gB,SAvTZ,SAA6B7U,GAC3Bk5C,EAAWl5C,EAAE8U,OAAO3X,OACpBu9C,GACF,EAqTY9jB,SAAU8jB,KAIdtoD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWksD,GACdlqD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLwP,MAAM,cACNE,UAAW5R,EAAK,QAChBL,UAAU,gBACVmC,QAASspD,GAETzpD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAKjB,G,kDE3fKq5C,eAAeK,EAA8B0S,GAC1D,MAAM5S,EAAgB,GAEtB,SAAS6S,EAAwBC,EAA+Bt+C,GAC9D,OAAO,IAAIu+C,SAASC,IAClB,GAAIF,aAAiB1vC,KACnB48B,EAAMh2C,KAAK8oD,GACXE,EAAQF,QACH,GAAIA,EAAMG,OAAQ,CACvB,MAAMC,EAAW1+C,EAAK2+C,YACrBL,EAA8BM,MAAMA,IACnCpT,EAAMh2C,KAAKopD,GACXJ,EAAQI,EAAK,IACZ,KAGGF,GACFlT,EAAMh2C,KAAKkpD,GAEbF,EAAQE,EAAS,GAErB,MAAWJ,EAAMO,aACIP,EAAmCQ,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAI3pD,EAAI,EAAGA,EAAI0pD,EAAQzpD,OAAQD,IAClC2pD,EAAgBzpD,KAAK6oD,EAAwBW,EAAQ1pD,GAAI0K,IAE3Dw+C,EAAQD,QAAQW,IAAID,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAI3pD,EAAI,EAAGA,EAAI8oD,EAAkB7oD,OAAQD,IAAK,CACjD,MAAM0K,EAAOo+C,EAAkB9oD,GAC/B,GAAkB,SAAd0K,EAAKm/C,KAAiB,CACxB,MAAMb,EAAQt+C,EAAKo/C,oBAAsBp/C,EAAK2+C,YAC1CL,GACFW,EAAgBzpD,KAAK6oD,EAAwBC,EAAOt+C,GAExD,CACF,CAIA,aAFMu+C,QAAQW,IAAID,IAEXI,EAAAA,EAAAA,IAAc7T,EACvB,C,mCClDA,MAAM8T,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASC,EAAiBpL,GAC/B,OAAOA,EACJ3sB,QAAQ43B,EAAU,KAClB53B,QAAQ23B,EAAO,MACf33B,QAAQ63B,EAAe,IACvB73B,QAAQ83B,EAAmB,GAChC,C,mCCXA,MAAME,EAAsB,EAErB,SAASpK,EAAuBJ,EAAuByK,GAC5D,MAAM,wBAAEpE,GAA4BrG,EACpC,IAAI0K,EAAiCrE,EACjCsE,EAAa,EACjB,KAAOD,GAAcA,EAAWpuD,KAAOmuD,GAAWE,EAAaH,GAC7DE,EAAaA,EAAWtE,cACxBuE,IAGF,OAAOpuD,QAAQmuD,GAAcA,EAAWpuD,KAAOmuD,EACjD,C,+LCSA,MAAMG,EAAW,IACXC,EAAmB,IAAIC,OAAQ,IAAGC,EAAAA,EAAaC,WAAY,KAC3DC,EAAuB,IAAIH,OAAQ,GAAEI,EAAAA,IAAgBF,UAAW,KAEvD,SAASG,EACtBjX,EACA+E,EACAmS,EACAC,EACAhrC,EACA87B,GAEA,MAAM,wBAAEmP,EAAuB,yBAAEC,IAA6BtuD,EAAAA,EAAAA,OAEvDuuD,EAAkBC,EAAoBC,IAAwB9rD,EAAAA,EAAAA,IAAQ,GAEvE+rD,GAA4BC,EAAAA,EAAAA,KAAqB,KACrD,MAAMzM,EAAOlG,IACb,IAAK/E,IAAciL,IAASkM,KAAqBQ,UAAW,OAG5D,IADiB1M,EAAKnd,MAAM8f,EAAAA,GAAqBiJ,EAAAA,EAAeG,EAAAA,KACjD,OAEf,MAAMY,GAAsBC,EAAAA,EAAAA,IAAuB1rC,EAASrgB,SAE5D,OAAO8rD,EAAoB9pB,MAAM8f,EAAAA,GAAqB+I,EAAmBI,KAAwB,EAAE,GAClG,CAAChS,EAASoS,EAAmBhrC,EAAU6zB,GAAY0W,GAEhDoB,GAAeC,EAAAA,EAAAA,GACnBN,EAA2B,CAACA,EAA2B1S,EAASoS,IAAoB,GAGhFrvD,GAAWm6B,EAAAA,EAAAA,IAAgB,IAAM55B,QAAQyvD,MAAiB,CAACA,IAC3DE,EAAkB3vD,QAAQ4/C,GAAc/7C,SAE9C/B,EAAAA,EAAAA,KAAU,KACR,IAAK61C,EAAW,OAEhB,MAAMiY,EAAYH,IACdG,EACGD,GACHZ,EAAwB,CACtBj6B,MAAOywB,EAAAA,GAAqBqK,EAAYA,EAAUnqB,MAAM,kBAAkB,KAI9EupB,GACF,GACC,CAACrX,EAAW8X,EAAcE,EAAiBX,EAA0BD,IAExE,MAAMc,GAAoBhqD,EAAAA,EAAAA,IAAiBivB,IACzC,MAAM86B,EAAYH,IAClB,IAAK9X,IAAciY,EAAW,OAE9B,MAAME,EAAUhsC,EAASrgB,QACnB8rD,GAAsBC,EAAAA,EAAAA,IAAuBM,GAC7CC,EAAYxK,EAAAA,GACdqK,EAEAA,EAAU35B,QAAQ,wBAAyB,QACzC+5B,EAAQ,IAAIzB,OAAQ,IAAGwB,UAAmB,IAE1CE,EADUV,EAAoB9pB,MAAMuqB,GAAQ,GAC5BnsD,OAAS+rD,EAAU/rD,OACnCqsD,EAAUX,EAAoBt5B,QAAQ+5B,GAAOG,EAAAA,EAAAA,IAAqBr7B,GAAOs7B,OAAOH,IAChFI,EAAqBP,EAAQjN,UAAUyN,UAAUf,EAAoB1rD,QAE3EgrD,EAAS,GAAEqB,IAAUG,MAErBrkB,EAAAA,EAAAA,KAAoB,MAClBgX,EAAAA,EAAAA,GAAqB8M,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFAhuD,EAAAA,EAAAA,IAAUqtD,EAAsB,CAACA,EAAsBzS,IAEhD,CACL6T,yBAA0BvwD,QAAQP,GAAYkwD,IAAoBV,GAClEuB,wBAAyBtB,EACzBW,oBAEJ,C,kOCnEA,IAAIY,EACAC,EACAC,EAEAC,EACAC,EACJ,MAAMC,EAAe,GACfC,EAAoB,EAEpB1C,EAAW,IAEX2C,GAA0BC,EAAAA,EAAAA,IAiJhC,SAA6B5vD,EAA6B6vD,EAA0BC,GAClF,OAAK9vD,GAAS6vD,EAAertD,OAItBrC,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAW/vD,EAAM6vD,IAAiBxvD,MAAM,EAAGyvD,GAHvD5qC,EAAAA,CAIX,IAtJM8qC,GAAqBJ,EAAAA,EAAAA,IAwJ3B,SACE5vD,EACAiwD,EACAC,GAEA,MAAMC,EAAShwD,OAAOC,OAAOJ,GAEvBowD,GAAWC,EAAAA,EAAAA,IAA4BF,EAAQ,UAC/CG,EAAsBL,GACxB9f,EAAAA,EAAAA,IAAU8f,GAAoBM,GACvBpwD,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EACCC,EAAkBN,GACpB/f,EAAAA,EAAAA,IAAU+f,GAAgBK,GACnBpwD,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCE,EAAY,GAAgB9X,OAAOz4C,OAAO09C,KAAKyS,GAAsBnwD,OAAO09C,KAAK2S,IAEjFG,EAASR,EAAOngB,QAAO,CAACrkC,EAAQ8nB,KACpCA,EAAMm9B,MAAM5jD,SAAS8O,IACdnQ,EAAOmQ,KACVnQ,EAAOmQ,GAAQ,IAGjBnQ,EAAOmQ,GAAMrZ,KAAKgxB,EAAM,IAGnB9nB,IACN,CAAC,GAEEilD,EAAQzwD,OAAO09C,KAAK8S,GACpBE,EAAeH,EAAS1gB,QAAO,CAAC5iC,EAAK0jD,IAAY3mD,KAAKiD,IAAIA,EAAK0jD,EAAQtuD,SAAS,GAEtF,MAAO,CACLiuD,YACAC,WACAC,SACAC,QACAC,eAEJ,IAnMME,GAAsBnB,EAAAA,EAAAA,IAqM5B,SAAyBoB,EAAkBxwD,EAAgBsvD,GACzD,MAAM,UACJW,EAAS,SAAEC,EAAQ,OAAEC,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIzwD,EAAOgC,OAASquD,EAClB,OAAO3rC,EAAAA,EAGT,MAAMgsC,EAAkBR,EAASlwD,QAAQswD,GAAYA,EAAQ5sB,WAAW1jC,KAAS+kB,OACjF0rC,EAAUA,EAAQrY,OAAOz4C,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAWU,EAAYS,IAAkBC,QAGhF,MAAMC,EAAeR,EAAMpwD,QAAQsb,GAASA,EAAKooB,WAAW1jC,KAK5D,OAJAywD,EAAUA,EAAQrY,OAAOz4C,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAWY,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQzuD,OAINyuD,EAAQ5wD,MAAM,EAAGyvD,GAHf5qC,EAAAA,CAIX,IA5NA,IACEqqC,EAAkB,wCAClBC,EAAoB,SACtB,CAAE,MAAO3gD,GAEP0gD,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAAS8B,EACtBhb,EACA+E,EACAmS,GAKA,IAJAX,EAAOljD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG84C,EAAAA,IACVoN,EAAwBlmD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EACxBwxD,EAA4CtmD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAC5CyxD,EAAwCvmD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAExC,MAAOmvD,EAAkBC,EAAoBC,IAAwB9rD,EAAAA,EAAAA,IAAQ,IAEtEhC,EAAMuxD,IAAWvpD,EAAAA,EAAAA,OACjBwpD,EAAgBC,IAAqBzpD,EAAAA,EAAAA,IAAkBkd,EAAAA,IACvDwsC,EAAsBC,IAA2B3pD,EAAAA,EAAAA,IAAuBkd,EAAAA,IAG/EzkB,EAAAA,EAAAA,KAAU,KAGR,SAASygD,IACPqQ,EAAQjC,EAAUa,OACpB,CAJK7Z,IAMDgZ,EACFpO,IAiGN5I,iBAQE,OAPK8W,IACHA,EAAmB,qCACnBC,SAAsBD,GAAkBwC,QAExCtC,GAAYuC,EAAAA,EAAAA,IAAgBxC,IAGvBD,CACT,CAxGM0C,GAAkBnS,KAAKuB,GACzB,GACC,CAAC5K,IAEJ,MAAMyb,GAA2B/D,EAAAA,EAAAA,KAAqB,KACpD,MAAMzM,EAAOlG,IACb,OAAO/E,GAAaiL,EAAKn8B,SAAS,MAAOunC,EAAAA,EAAAA,GAAiBpL,GAAMnd,MAAMmrB,KAAmB,GAAG16B,YAASp2B,CAAS,GAC7G,CAAC48C,EAAS/E,GAAY0W,GAEnBgF,GAAe3D,EAAAA,EAAAA,GACnB0D,EAA0B,CAACA,EAA0B1W,IAAU,GAG3D4W,GAAiBztD,EAAAA,EAAAA,IAAiB2rD,IAGtC,GAFAsB,EAAkBtB,GAEdA,IAAWjrC,EAAAA,EAEb,YADAysC,EAAwBzsC,EAAAA,GAI1B,MAAMgtC,EAAe/B,EAAO7vD,KAAKmzB,GAAUA,EAAM0+B,SAC3C5T,GAAe6T,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,KAA2BvyD,EAAAA,EAAAA,MAAaoyD,GACxC,MAEFP,EAAwBpT,EAAa,IAGjC+T,GAAc9tD,EAAAA,EAAAA,IAAgB,SAACivB,GAAgD,IAApB8+B,EAAO5oD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACtE,MAAM43C,EAAOlG,IACb,IAAKkG,EAAM,OAEX,MAAMiR,EAAUjR,EAAKkR,YAAY,IAAKF,EAAUhR,EAAKkR,YAAY,KAAO,OAAIh0D,GAE5E,IAAiB,IAAb+zD,EAAgB,CAClB,MAAME,EAA6B,iBAAVj/B,GAAqBhjB,EAAAA,EAAAA,GAAWgjB,EAAO,CAAC,gBAAiBq7B,EAAAA,EAAAA,IAAqBr7B,GACvG+5B,EAAS,GAAEjM,EAAK0N,UAAU,EAAGuD,KAAWE,KAExC,MAAMjM,EAAeoG,IAAYpK,EAAAA,IAC7BnoC,SAASiS,cAA8Bo6B,EAAAA,KACvCrsC,SAASmsB,eAAeomB,IAE5BliB,EAAAA,EAAAA,KAAoB,MAClBgX,EAAAA,EAAAA,GAAqB8E,GAAc,GAAM,EAAK,GAElD,CAEAwL,EAAe/sC,EAAAA,EACjB,IAqCA,OAnCAzkB,EAAAA,EAAAA,KAAU,KACR,MAAMkyD,EAAYX,IAClB,IAAKW,IAAc3yD,EAEjB,YADAiyD,EAAe/sC,EAAAA,GAIjB,MAAM0tC,EAAsBD,EAAUnwD,OAAS,GAAKmwD,EAAUE,SAAS,KAEjEryD,EAASmyD,EAAU1D,UAAU,EAAG2D,EAAsB,EAAID,EAAUnwD,OAAS,OAAI/D,GACvF,IAAIwyD,EAAmB/rC,EAAAA,EAEvB,GAAK1kB,GAEE,GAAuB,IAAlBA,EAAOgC,QAAgBgtD,EAAkBsD,KAAKtyD,IAAYA,EAAOgC,QAAUktD,EAAmB,CACxG,MAAMsB,EAAUhB,EAAmBhwD,EAAMiwD,EAAmBC,GAC5De,EAAUF,EAAoBC,EAASxwD,EAAOyqD,cAAewE,EAC/D,OAJEwB,EAAUtB,EAAwB3vD,EAAM6vD,EAAgBJ,GAMrDwB,EAAQzuD,OAKTowD,EACFN,EAAYrB,EAAQ,GAAGkB,QAAQ,GAE/BF,EAAehB,GAPfgB,EAAe/sC,EAAAA,EAQjB,GACC,CACD+qC,EAAmBjwD,EAAMgyD,EAAc9B,EAAeoC,EAAazC,EAAgBoC,KAGrFxxD,EAAAA,EAAAA,IAAUqtD,EAAsB,CAACA,EAAsBzS,IAEhD,CACL0X,mBAAoBp0D,QAAQ6yD,EAAehvD,QAAUkvD,EAAqBlvD,UAAYorD,EACtFoF,kBAAmBnF,EACnB2D,iBACAE,uBACAY,cAEJ,C,qLC7JA,MAAMtF,EAAW,IAEjB,IAAIiG,EACJ,IACEA,EAAqB,iCACvB,CAAE,MAAOpkD,GAEPokD,EAAqB,6BACvB,CAEe,SAASC,EACtB5c,EACA+E,EACAmS,EACAC,EACAhrC,EACA0wC,EACAC,EACA96C,GAEA,MAAO+6C,EAAeC,IAAoBtrD,EAAAA,EAAAA,OACnC4lD,EAAkBC,EAAoBC,IAAwB9rD,EAAAA,EAAAA,IAAQ,GAEvEuxD,GAA8BvF,EAAAA,EAAAA,KAAqB,KACvD,MAAMzM,EAAOlG,IACb,IAAK/E,IAAcmX,KAAqBQ,YAAc1M,EAAKn8B,SAAS,KAAM,OAE1E,MAAM8oC,GAAsBC,EAAAA,EAAAA,IAAuB1rC,EAASrgB,SAE5D,OAAOuqD,EAAAA,EAAAA,GAAiBuB,GAAqB9pB,MAAM6uB,KAAsB,GAAGp+B,MAAM,GACjF,CAACyhB,EAAW+E,EAASoS,EAAmBhrC,GAAWuqC,GAEhDwG,GAAiBnF,EAAAA,EAAAA,GACrBkF,EAA6B,CAACA,EAA6BlY,EAASoS,IAAoB,GAGpFgG,GAAoBpF,EAAAA,EAAAA,IAAiB,IAClC/X,GAAa+E,IAAUnX,WAAW,MACxC,CAACmX,EAAS/E,KAEb71C,EAAAA,EAAAA,KAAU,KACR,MAAMizD,EAAcF,IAEpB,IAAKE,IAAiBP,IAAoBC,EAExC,YADAE,OAAiB70D,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADAyzD,OAAiB70D,GAInB,MAAMk1D,EAAYR,GAAkBnjB,QAAO,CAAC9X,EAAe07B,KACrDA,EAAOn/C,SAAW6D,GACpB4f,EAAIz1B,KAAKmxD,EAAOn/C,QAGXyjB,IACN,IAEG13B,EAASkzD,EAAYzE,UAAU,GAC/B4E,GAAcC,EAAAA,EAAAA,KAAkBzC,EAAAA,EAAAA,IAAO,IACtCoC,KAAuBL,GAAoB,MAC5CO,GAAa,KACf9zD,EAAWW,GAEf8yD,EAAiBnzD,OAAOC,QAAO2vD,EAAAA,EAAAA,IAAWlwD,EAAWg0D,IAAc,GAClE,CAACv7C,EAAe66C,EAAkBC,EAAiBI,EAAgBC,IAEtE,MAAMM,GAAgBvvD,EAAAA,EAAAA,IAAgB,SAACsO,GAAsC,IAAvBkhD,EAAUrqD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAC9D,IAAKmJ,EAAK4B,aAAcsD,EAAAA,EAAAA,IAAuBlF,GAC7C,OAGF,MAAMsD,GAAe+I,EAAAA,EAAAA,IAAgBrM,GAC/BmhD,GAAsBj8C,EAAAA,EAAAA,IAAuBlF,IAAS,GACtDohD,EAAe99C,EAChB,IAAGA,IACH,uEAEqBwgB,EAAAA,GAAsBu9B,yCAC1BrhD,EAAKpU,0EAGpBu1D,QAEDxF,EAAUhsC,EAASrgB,QAEnBgyD,EAA2BC,GADLlG,EAAAA,EAAAA,IAAuBM,IAE7C+D,EAAU4B,EAAyB3B,YAAY,KAC/C6B,GAAsBl+C,EAAeA,EAAa5T,OAAS,EAAIyxD,EAAoBzxD,SACpF4xD,EAAyB5xD,OAASgwD,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAM3D,EAAW,GAAEuF,EAAyBG,OAAO,EAAG/B,KAAW0B,UAC3DlF,EAAqBqF,EAAoB5F,EAAQjN,WAAWyN,UAAUmF,EAAyB5xD,QAC/FgyD,GAAgBC,EAAAA,EAAAA,IAAiBhG,GACvCjB,EAAS,GAAEqB,IAAUG,MAErBrkB,EAAAA,EAAAA,KAAoB,KAClB,MAAM+pB,EAAmBF,EAAgBF,EAAqB,GAC9D3S,EAAAA,EAAAA,GAAqB8M,EAASuF,GAC1BU,GAAoB,IACtBC,EAAAA,EAAAA,IAAiBlG,EAASiG,EAC5B,GAEJ,CAEApB,OAAiB70D,EACnB,IAIA,OAFAgC,EAAAA,EAAAA,IAAUqtD,EAAsB,CAACA,EAAsBzS,IAEhD,CACLuZ,qBAAsBj2D,QAAQ00D,GAAe7wD,SAAWorD,GACxDiH,oBAAqBhH,EACrBkG,gBACAe,qBAAsBzB,EAE1B,CAIA,SAASgB,EAAoB9S,GAC3B,OAAOA,EAAK3sB,QAAQ,kCAAmC,OACzD,C,wEC/Ie,SAASmgC,EAAmCC,EAAiBC,GAC1E,MAAMC,OAAuBz2D,IAAVw2D,EACb5qB,GAAkBzoC,EAAAA,EAAAA,IAAOszD,GACzBC,GAAavzD,EAAAA,EAAAA,MACb8tC,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCAylB,EAAAA,EAAAA,IAAc,KACRF,IAIJ7qB,EAAgBjoC,SAAU,EAEtB+yD,EAAW/yD,UACbujC,aAAawvB,EAAW/yD,SACxB+yD,EAAW/yD,aAAU3D,GACvB,GAECu2D,IAEHv0D,EAAAA,EAAAA,KAAU,KACR,GAAIy0D,GAAc7qB,EAAgBjoC,QAChC,OAGF,MAAM8+C,EAAOA,KACX7W,EAAgBjoC,SAAU,EAC1BstC,GAAa,EAGXulB,EAAS,EACXE,EAAW/yD,QAAU+C,OAAO4f,WAAWm8B,EAAM+T,GAE7C/T,GACF,GAEC8T,GAEI3qB,EAAgBjoC,OACzB,C,yFC7BO,MAAMizD,EAAwC,CACnD,CAAEt+C,KAAM,OAAQpH,MAAO,iBAAkBpO,IAAK,YAC9C,CAAEwV,KAAM,eAAgBpH,MAAO,oBAAqBpO,IAAK,eACzD,CAAEwV,KAAM,QAASpH,MAAO,eAAgBpO,IAAK,UAC7C,CAAEwV,KAAM,UAAWpH,MAAO,iBAAkBpO,IAAK,YACjD,CAAEwV,KAAM,OAAQpH,MAAO,aAAcpO,IAAK,SAG/B+zD,EAAwC,CACnD,CAAEv+C,KAAM,OAAQpH,MAAO,cAAepO,IAAK,gBAC3C,CAAEwV,KAAM,UAAWpH,MAAO,iBAAkBpO,IAAK,mBACjD,CAAEwV,KAAM,YAAapH,MAAO,aAAcpO,IAAK,gBAG3Cg0D,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkB33B,EAAqB43B,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACA73B,EAAMi4B,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAl4B,EAAMm4B,OACNV,GAGJK,EAAkBE,GAAmB,GACrCD,EAAqB11D,OAAO09C,KAAKkY,GAC9Bv1D,QAAQe,GAAQ5C,QAAQo3D,EAAex0D,KAC5C,KAAO,CACL,MAAM,gBACJ20D,KACGC,GACDR,EACA73B,EAAMq4B,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAl4B,EAAMm4B,OACNT,GAGJI,EAAkBM,GAAmB,GACrCL,EAAqB11D,OAAO09C,KAAKsY,GAC9B31D,QAAQe,GAAQ5C,QAAQw3D,EAAe50D,KAC5C,CAEA,MAAO,CACLq0D,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACE51D,OAAOC,OAAOi2D,GAAS71D,OAAO7B,SAAS6D,OAAS,GAC5CszD,GAAiBtzD,OAErB,MAAO,GAGT,GAAI6zD,EAAQC,KACV,MAAO,OACF,GAAID,EAAQE,OACjB,MAAO,SACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,SACjB,MAAO,WACF,GAAIJ,EAAQK,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClCjB,KAAM,SACNkB,WAAY,GACZX,OAAQ,CACNtmD,MAAO,GACPmmD,gBAAiB,GACjBI,gBAAiB,KAIfW,EAA6DA,CACjE/4B,EACA1a,KAEA,OAAQA,EAAOI,MACb,IAAK,WACH,MAAO,IACFsa,EACHm4B,OAAQ,IACHn4B,EAAMm4B,OACTtmD,MAAOyT,EAAOgd,SAEhB2jB,WAAW,GAEf,IAAK,cACH,MAAO,IACFjmB,EACHrC,SAAUrY,EAAOgd,QACjBs1B,KAAM,QAEV,IAAK,qBACH,MAAO,IACF53B,EACHi4B,gBAAgBC,EAAAA,EAAAA,IACdl4B,EAAMm4B,OACNV,IAGN,IAAK,qBACH,MAAO,IACFz3B,EACHq4B,gBAAgBH,EAAAA,EAAAA,IACdl4B,EAAMm4B,OACNT,IAGN,IAAK,oBACH,MAAO,IACF13B,EACHi4B,eAAgB3yC,EAAOgd,QACvBw2B,WAAY,IAEhB,IAAK,oBACH,MAAO,IACF94B,EACHq4B,eAAgB/yC,EAAOgd,QACvBw2B,WAAY,IAEhB,IAAK,cACH,OAAI94B,EAAMi4B,eACD,IACFj4B,EACHm4B,OAAQ,KACHa,EAAAA,EAAAA,IAAKh5B,EAAMm4B,OAAQV,GACtB5lD,MAAOmuB,EAAMm4B,OAAOtmD,MAAQmuB,EAAMm4B,OAAOtmD,MAAQymD,EAAuBt4B,EAAMi4B,mBAC3Ej4B,EAAMi4B,gBAEXA,oBAAgBt3D,EAChBm4D,WAAY,GACZ7S,WAAW,GAEJjmB,EAAMq4B,eACR,IACFr4B,EACHm4B,OAAQ,KACHa,EAAAA,EAAAA,IAAKh5B,EAAMm4B,OAAQT,MACnB13B,EAAMq4B,gBAEXA,oBAAgB13D,EAChBm4D,WAAY,GACZ7S,WAAW,GAGNjmB,EAEX,IAAK,aAAc,CACjB,MAAQp/B,GAAI+8B,EAAQ,YAAE7nB,KAAgBqiD,GAAW7yC,EAAOgd,QAExD,MAAO,CACLs1B,KAAM,OACNj6B,WACAw6B,SACAW,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACF94B,EACH84B,WAAYxzC,EAAOgd,SAGvB,IAAK,eACH,MAAO,IACFtC,EACHimB,UAAW3gC,EAAOgd,SAGtB,IAAK,eACH,MAAO,IACFtC,EACHnc,UAAWyB,EAAOgd,SAGtB,IAAK,WACH,MAAO,IACFtC,EACHnc,WAAW,EACXE,MAAOuB,EAAOgd,SAGlB,IAAK,gBACH,MAAO,IACFtC,EACHm4B,OAAQ,IACHn4B,EAAMm4B,OACTc,WAAY3zC,EAAOgd,UAGzB,IAAK,QACH,OAAOu2B,EACT,QACE,OAAO74B,EACX,EAOF,EAJ0Bk5B,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,mGClQ7B,SAAS3I,EACdkJ,EACAC,EACAC,GAEA,IADAC,EAAO1tD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAEP,OAAOs2C,EAAAA,EAAAA,IAAsBqX,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAASE,EACdC,EACAC,GAGA,MAAMC,EAAoB1J,GAAqB,IAAMwJ,KAAY,CAACA,GAAWC,EAFtE9tD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,IAIP,OAAO0kD,EAAAA,EAAAA,GACLqJ,EAAmB,CAACA,EAAmBF,IAAW,EAEtD,CAEO,SAASG,EACdT,EACAC,EACAM,GAGA,IAFAJ,EAAO1tD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACPiuD,EAAMjuD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAEN,OAAOu7B,EAAAA,EAAAA,IAAsBoyB,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMM,EAAIJ,EAASO,EACxB,CAEO,SAASC,EACdL,EACAC,GAIA,MAAMK,EAAoBH,GAAqB,IAAMH,KAAY,CAACA,GAAWC,EAHtE9tD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACDA,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,IAIN,OAAO0kD,EAAAA,EAAAA,GACLyJ,EAAmB,CAACA,EAAmBN,IAAW,EAEtD,C,mJCsMA,QAxOuB,SACrBO,EACAC,EACAC,EACApzD,EACAqzD,EACAC,EACAC,GAMG,IALHlnC,EAAUvnB,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACV0uD,EAAgC1uD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAChC65D,EAAkC3uD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAClC85D,EAAU5uD,UAAAnH,OAAA,SAAA/D,IAAAkL,UAAA,KAAAA,UAAA,IACV6uD,EAAiB7uD,UAAAnH,OAAA,SAAA/D,IAAAkL,UAAA,KAAAA,UAAA,IAGjB,MAAM8uD,GAAgB72D,EAAAA,EAAAA,IAAoC,OAEnDoH,EAAW0vD,IAAgB1wD,EAAAA,EAAAA,KAAS,GAC3C,IAAI2wD,EAAgB3vD,EAEpB,MAAOzD,EAAcqzD,IAAmB5wD,EAAAA,EAAAA,IAAiB,GAEnDW,GAAoBnE,EAAAA,EAAAA,IAAgB,KACxCk0D,GAAa,GACTJ,GAAeA,GAAe,KAGpClD,EAAAA,EAAAA,IAAc,KACZqD,EAAcr2D,SAAUy2D,EAAAA,EAAAA,IAASd,EAASE,GAAW,CAACa,EAAWjqD,KAC/D,OAAQiqD,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCT,EAAcr2D,QAClBs2D,GAAa,IAEbS,EAAAA,EAAAA,GAAqBhB,EAqJ/B,SAA2BM,GACzB,IAAIW,EAAsC,CAAC,EAC3C,GAAIX,GAAiBA,EAAcr2D,QAAS,CAC1C,MAAM,KACJ63C,EAAI,MAAEG,EAAK,eAAElxC,EAAc,MAAEgwD,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAE7tC,EAAO,OAAEC,GACnF+sC,EAAcr2D,QAClBg3D,EAAgB,CACdnf,KAAMA,KACJA,EAAKif,EAAMr0D,IAAI,EAEjBu1C,MAAOA,KACLA,GAAO,EAETmf,KAAMA,KACJnf,IACAlxC,EAAe,IACf7J,EAAAA,EAAAA,MAAam6D,kBAAkB,EAEjCC,aAAep2C,IACb,MAAMq2C,EAAWr2C,EAAMs2C,YA9ML,GA+MlBzwD,EAAeiB,KAAKiD,IAAI8rD,EAAM7vC,YAAcqwC,EAAU,GAAG,EAE3DE,YAAcv2C,IACZ,MAAMq2C,EAAWr2C,EAAMs2C,YAlNL,GAmNlBzwD,EAAeiB,KAAKC,IAAI8uD,EAAM7vC,YAAcqwC,EAAUR,EAAM/vD,UAAU,EAExE0wD,OAASx2C,IACHA,EAAMy2C,UACR5wD,EAAema,EAAMy2C,SACvB,GAICpuC,MACH0tC,EAAcW,UAAY,KACxBV,GAAkB,GAGjB5tC,MACH2tC,EAAcY,cAAgB,KAC5BV,GAAsB,EAG5B,CACA,OAAOF,CACT,CAlMyCa,CAAkBxB,KACjDyB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgB97D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OACvCi5D,EAAUoB,EAAYC,QACtBnB,EAAYt6D,QAAQw7D,EAAYjnD,UAChC,MAAM/J,EAAW+vD,EAAM/vD,UAAYq7B,OAAO61B,SAASnB,EAAM/vD,UAAY+vD,EAAM/vD,SAAW6uD,GACpE,UAAdC,GAAyB9uD,EAAWmxD,EAAAA,MACtCtB,EAAgBmB,EAAYI,eAG9BC,EAAAA,EAAAA,IAAiB,CACfrxD,SAAU+vD,EAAM/vD,UAAY,EAC5BoxD,aAAcrB,EAAMqB,aACpBh2B,SAAU20B,EAAM7vC,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAE6vC,GAAUT,EAAcr2D,SAChCo4D,EAAAA,EAAAA,IAAiB,CACfrxD,SAAU+vD,EAAM/vD,UAAY,EAC5BoxD,aAAcrB,EAAMqB,aACpBh2B,SAAU20B,EAAM7vC,cAElB,KACF,CACA,IAAK,UACHqvC,GAAa,IACbwB,EAAAA,EAAAA,IAAiB,UACjB,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEhB,GAAUT,EAAcr2D,QAC1B+G,EAAW+vD,EAAM/vD,UAAYq7B,OAAO61B,SAASnB,EAAM/vD,UAAY+vD,EAAM/vD,SAAW6uD,EACjFQ,GAAmBI,EAAgBM,EAAM7vC,YAAclgB,GAC5D,KACF,CACA,IAAK,WACH+wD,EAAAA,EAAAA,IAAiB,UAKrBhC,IAAWY,KAAajqD,EAAE,GACzBwpD,EAAa1vD,GAEhB,MAAM,MAAEuwD,GAAUT,EAAcr2D,QAE3B4G,GAAckwD,EAAMhf,SACvBwe,GAAa,GAGbC,GAAgB,GAGdP,GACFA,EAAOc,EACT,GACC,CAACnB,KAEJt3D,EAAAA,EAAAA,KAAU,KACJuI,GAAamvD,IAAUsC,EAAAA,EAAAA,IAAetC,EAAS,GAClD,CAACA,EAAUnvD,IAEd,MAAM,KACJixC,EAAI,MACJG,EAAK,eACLlxC,EAAc,MACdgwD,EAAK,QACL7e,EAAO,UACP0e,EAAS,KACTQ,EAAI,QACJ9tC,EAAO,OACPC,EAAM,iBACN2tC,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACER,EAAcr2D,QACZ+G,EAAW+vD,EAAM/vD,UAAYq7B,OAAO61B,SAASnB,EAAM/vD,UAAY+vD,EAAM/vD,SAAW6uD,GAGtFv3D,EAAAA,EAAAA,KAAU,MACJ0I,IAAauxD,EAAAA,EAAAA,GAAwBxB,IAAWV,GAClDI,EAAgBM,EAAM7vC,YAAclgB,EACtC,GACC,CAACA,EAAU5D,EAAc2zD,EAAOV,KAGnC/3D,EAAAA,EAAAA,KAAU,IAAM,KACd45C,EAAQke,EAAW,GAClB,CAACle,EAASke,KAGbzY,EAAAA,EAAAA,IAAsB9gD,IAA+B,IAA7B27D,EAAgBC,GAAQ57D,EAC1C27D,IAAmBzpC,GAAcrsB,IAAQ+1D,GAKzC1B,EAAMr0D,KAAOq0D,EAAMhf,QAInBhpB,GAAcrsB,IAAQmE,GACxBixC,EAAKp1C,EACP,GACC,CAACqsB,EAAYrsB,EAAKmE,EAAWixC,EAAMif,EAAMr0D,IAAKq0D,EAAMhf,SAEvD,MAAM2gB,GAAgBr2D,EAAAA,EAAAA,IAAgB,KAChCK,GACFo1C,EAAKp1C,EACP,IAGIoE,GAAYzE,EAAAA,EAAAA,IAAgB,KAC5BwE,EACFoxC,IAEAygB,GACF,IAGIC,GAAUt2D,EAAAA,EAAAA,IAAiBu2D,IAC/B7xD,EAAe6xD,GACX5xD,GACFyvD,EAAgBM,EAAM7vC,YAAclgB,EACtC,IAGF,MAAO,CACLH,UAAW2vD,EACXpzD,eACA0D,YACAmxC,QACAH,KAAM4gB,EACNtB,OACArwD,eAAgB4xD,EAChB/B,YACAiC,WAAY9B,EACZ/vD,WACAkwD,mBACAC,uBACA7tC,UACAC,SACAstC,kBACAC,cAEJ,C,4FCrMA,MAAMgC,EAAS,EACTC,EAAa,EAEJ,SAAS5+C,EACtBlZ,GAMA,IALA8xD,EAAUvrD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACVwxD,EAAiBxxD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EACjB8O,EAAM5D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAGsxD,EACTG,EAAuBzxD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EACvB48D,EAAwB1xD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAGxB,MAAMoL,GAAYjI,EAAAA,EAAAA,IAA0B,MACtC05D,GAAY15D,EAAAA,EAAAA,MAmDlB,OAjDAwzD,EAAAA,EAAAA,IAAc,KACPF,IACHoG,EAAUl5D,SAAU,EACtB,GACC,CAACgB,EAAS8xD,KAEbz0D,EAAAA,EAAAA,KAAU,KACR,MAAM8L,EAAS1C,EAAUzH,QAEzB,IAAKgB,IAAYmJ,GAAU2oD,GAAcoG,EAAUl5D,QACjD,OAGFk5D,EAAUl5D,SAAU,EAEpB,MAAMm5D,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAM9uD,EAAQyuD,GAAkBG,EAAI5uD,MAC9BC,EAASyuD,GAAmBE,EAAI3uD,OAChCC,EAAMN,EAAOO,WAAW,KAAM,CAAE4uD,OAAO,KAE7Cx4C,EAAAA,EAAAA,KAAgB,KACd3W,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZ2P,EAAAA,KACF1P,EAAIrM,OAAU,QAAO+M,QAGvBV,EAAI8uD,UAAUJ,EAAe,GAAThuD,EAAsB,GAATA,EAAYZ,EAAiB,EAATY,EAAYX,EAAkB,EAATW,GAErEgP,EAAAA,KACHq/C,EAAAA,EAAAA,GAAS/uD,EAAK,EAAG,EAAGF,EAAOC,EAAQW,EAAQ2tD,EAC7C,GACA,EAGJK,EAAIM,OAAS,KACPV,GACF7lB,EAAAA,EAAAA,IAAemmB,GAEfA,GACF,EAGFF,EAAI12D,IAAMzB,CAAO,GAChB,CAACA,EAAS8xD,EAAYmG,EAAiBD,EAAgB7tD,EAAQ4tD,IAE3DtxD,CACT,C,yGC1DA,MA6HA,EA7H8B,SAAA7K,GAsBJ,IAtBK,KAC7BhB,EAAI,KACJ8U,EAAI,SACJ2oB,EAAQ,SACRhE,EAAQ,QACRvkB,EAAO,gBACPioB,EAAe,aACfwD,EAAY,WACZC,EAAU,uBACVC,EAAsB,aACtBjQ,GAYD5vB,EAAE88D,EAAUnyD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACX,MAAMrK,GAAOC,EAAAA,EAAAA,MAEP,OAAEqV,GAAW9B,GAAQ,CAAC,EACtBipD,EAAyBjpD,GAAMpU,KAAOs9D,EAAAA,IAE5C,OAAOp8D,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,EACH,OAGF,MAAM,iBACJi+D,EAAgB,qBAChB1nD,EAAoB,mBACpB2nD,EAAkB,iBAClBC,EAAgB,iBAChBn0B,IACE3oC,EAAAA,EAAAA,MAUE+8D,EAAoBjhC,EAAkB,CAC1CxrB,MAAOrQ,EAAK,+BACZyX,KAAM,SACNwqB,QAAS1C,QACPpgC,EAEE4pC,EAAY5Q,EACd,CACA9nB,MAAOrQ,EAAK,gBACZyX,KAAM,QACNwqB,QAASA,IAAM06B,EAAiB,CAAEv9D,GAAIV,EAAKU,GAAI+8B,SAAUA,KAEzD,CAAE9rB,MAAOrQ,EAAK,YAAayX,KAAM,MAAOwqB,QAASA,IAAM06B,EAAiB,CAAEv9D,GAAIV,EAAKU,GAAI+8B,SAAUA,KAE/F6M,EAAap1B,EACf,CACAvD,MAAOrQ,EAAK,mBACZyX,KAAM,SACNwqB,QAASA,IAAMhtB,EAAqB,CAAExW,OAAQC,EAAKU,GAAIwU,SAAS,KAEhE,CACAvD,MAAQ,GAAErQ,EAAK,sBACfyX,KAAM,OACNwqB,QAAS3C,GAGb,GAAIk9B,EACF,OAAOr6B,EAAAA,EAAAA,IAAQ,CAAC4G,EAAW+zB,EAAmB9zB,IAGhD,MAAM+zB,EAAoBr+D,EAAKi6B,aAAej6B,EAAKq6B,cAC/C,CAAE1oB,MAAOrQ,EAAK,cAAeyX,KAAM,YAAawqB,QAASA,IAAM46B,EAAiB,CAAEz9D,GAAIV,EAAKU,WAC3FD,EACE69D,EAAuBt+D,EAAKi6B,aAAej6B,EAAKq6B,eAAmBr6B,EAAKiV,aAE1ExU,EADA,CAAEkR,MAAOrQ,EAAK,gBAAiByX,KAAM,SAAUwqB,QAASA,IAAM46B,EAAiB,CAAEz9D,GAAIV,EAAKU,MAGxF69D,GAAgBC,EAAAA,EAAAA,IAAex+D,GACjC,CAAE2R,MAAOrQ,EAAK,aAAcyX,KAAM,YAAawqB,QAASA,IAAM26B,EAAmB,CAAEx9D,GAAIV,EAAKU,MAC5F,CAAEiR,MAAOrQ,EAAK,WAAYyX,KAAM,UAAWwqB,QAASA,IAAM26B,EAAmB,CAAEx9D,GAAIV,EAAKU,MAGtF+9D,EADY7tC,KAAiB3a,EAAAA,EAAAA,IAAcjW,KAASuyC,EAAAA,EAAAA,IAAYvyC,IAAU8U,IAASA,EAAK8B,QAE1F,CAAEjF,MAAOrQ,EAAK,qBAAsByX,KAAM,OAAQwqB,QAAS3S,QAC3DnwB,EAEE+pC,EAAe,CACnB74B,OAAOoD,EAAAA,EAAAA,IAAS/U,EAAKU,IACjBY,EAAK,UACLA,GAAKo9D,EAAAA,EAAAA,IAAiB1+D,GACpB,cACCiW,EAAAA,EAAAA,IAAcjW,GAAQ,eAAiB,oBAC9C+Y,KAAM,SACN0xB,aAAa,EACblH,QAAS5C,GAGLg+B,OAA0Bl+D,IAAbg9B,EAEnB,OAAOgG,EAAAA,EAAAA,IAAQ,CAEb26B,EACAC,EACAC,EACAj0B,GACCzzB,GAAU0zB,GACV1zB,IAAWmnD,IAA2BY,GAAcJ,EACrDE,EACAj0B,GACA,GACD,CACDxqC,EAAM8U,EAAMqoB,EAAiB77B,EAAMu/B,EAAwBpH,EAAUqkC,EAAY5oD,EACjFyrB,EAAcC,EAAYhQ,EAAc6M,EAAU7mB,EAAQmnD,GAE9D,C,mFC/FA,QAzBA,SAA6Ba,EAAuC5H,GAAgD,IAAA6H,EAAA,IAAjBC,EAAOnzD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACxG,MAAMutD,EAAWlC,EAAe4H,EAAsC,IAAOA,EACjE,QAAZC,EAAA7H,SAAY,IAAA6H,IAAZ7H,EAAiB,CAAC4H,IAElB,MAAOpF,EAAUF,IAAYyF,EAAAA,EAAAA,KACvBC,GAAcC,EAAAA,EAAAA,GAAY/F,GAEhC,SAASgG,IACP,MAAMC,EAAkBH,EAAY56D,QAChC06D,EACDK,EAAqC7F,GAEtCA,EAAU6F,IAEd,CAQA,OALA/H,EAAAA,EAAAA,GAAc8H,EAAoBlI,IAGlCoI,EAAAA,EAAAA,GAAgBF,EAAoBlI,GAE7BwC,CACT,C,8FCmBA,QAxCA,SAA4B6F,EAAmCrI,GAAgD,IAAA6H,EAAA,IAAjBC,EAAOnzD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACnG,MAAMutD,EAAWlC,EAAeqI,EAAkC,IAAQA,IAC9D,QAAZR,EAAA7H,SAAY,IAAA6H,IAAZ7H,EAAiB,CAACqI,IAElB,MAAMC,GAAW17D,EAAAA,EAAAA,MACX8tC,GAAcC,EAAAA,EAAAA,KACdqtB,GAAcC,EAAAA,EAAAA,GAAY/F,GAEhC,SAASgG,IAAmC,IAAhBK,EAAM5zD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAChC,MAAMwzD,EAAkBH,EAAY56D,QACpC,GAAI06D,EACDK,GAAsCK,IACjCF,EAASl7D,UAAYo7D,IACvBF,EAASl7D,QAAUo7D,EACnB9tB,IACF,QAEG,CACL,MAAM8tB,EAAYL,IACdG,EAASl7D,UAAYo7D,IACvBF,EAASl7D,QAAUo7D,EAEdD,GACH7tB,IAGN,CACF,CAUA,OARA0lB,EAAAA,EAAAA,IAAc,KACZ8H,GAAmB,EAAK,GAEvBlI,IAGHoI,EAAAA,EAAAA,GAAgBF,EAAoBlI,GAE7BsI,EAASl7D,OAClB,C,6DCpDe,SAAS4rC,EACtBjwC,EACA0R,EACA3J,EACA23D,GAEA,MAAM,YAAEC,IAAgBr+D,EAAAA,EAAAA,OAExBoB,EAAAA,EAAAA,KAAU,KACJgP,IAAc3J,GAChB43D,EAAY,CAAE3/D,SAAQ0R,UAAWA,EAAYguD,iBAAkBA,GACjE,GACC,CAAC1/D,EAAQ+H,EAAS2J,EAAWguD,GAClC,C,2FCNO,SAAS58B,EAA8BpF,GAC5C,MAAMiU,GAAcC,EAAAA,EAAAA,KAIpB,OAFAlvC,EAAAA,EAAAA,KAAU,KAAMk9D,EAAAA,EAAAA,IAAsBliC,EAAUiU,IAAc,CAACjU,EAAUiU,KAElEkuB,EAAAA,EAAAA,IAAcniC,EACvB,CAEO,SAASuF,IACd,MAAM0O,GAAcC,EAAAA,EAAAA,KAIpB,OAFAlvC,EAAAA,EAAAA,KAAU,KAAMo9D,EAAAA,EAAAA,IAA0BnuB,IAAc,CAACA,KAElDouB,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMruB,GAAcC,EAAAA,EAAAA,KAIpB,OAFAlvC,EAAAA,EAAAA,KAAU,KAAMu9D,EAAAA,EAAAA,IAAsBtuB,IAAc,CAACA,KAE9CuuB,EAAAA,EAAAA,KACT,C,mFC5Be,SAASC,IAA8C,IAA1BljC,EAAgBrxB,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAC1D,MAAMw0D,GAA4Bv8D,EAAAA,EAAAA,IAAOo5B,GACnCojC,GAAwBx8D,EAAAA,EAAAA,KAAO,GAC/B8tC,GAAcC,EAAAA,EAAAA,MAEpBylB,EAAAA,EAAAA,IAAc,KACRp6B,IACFmjC,EAA0B/7D,SAAU,EACtC,GACC,CAAC44B,IAEJ,MAAMqjC,GAA+B75D,EAAAA,EAAAA,IAAgB,KACnD25D,EAA0B/7D,SAAU,EACpCg8D,EAAsBh8D,SAAU,EAChCstC,GAAa,IAGT4uB,GAAiC95D,EAAAA,EAAAA,IAAgB,KACrD45D,EAAsBh8D,SAAU,EAChCstC,GAAa,IAGf,MAAO,CACL6uB,uBAAwBJ,EAA0B/7D,QAClDo8D,mBAAoBJ,EAAsBh8D,QAC1Ci8D,+BACAC,iCAEJ,C,gFCtBA,MAAMG,EAAOC,IAEE,SAASC,EAAcC,EAAgBC,GACpD,MAAOC,EAAcC,IAAmB/2D,EAAAA,EAAAA,IAASrJ,QAAQ8/D,GAAQnkD,SAASmkD,KAqD1E,OAnCAnyD,EAAAA,EAAAA,KAAgB,KACd,MAAM9E,EAAQo3D,EAAMx8D,QACd48D,EAAWA,KACf,MAAM1oB,EAAY33C,QAAQ8/D,GAAQnkD,SAASmkD,IAC3CM,EAAgBzoB,GAEhB9uC,EAAOy3D,SAAW3oB,CAAS,EAEvB4oB,EAAgBA,KAAQH,GAAgB,EAAK,EAC7CI,EAAeA,KACnBJ,GAAgB,GAChBF,GAAY,EAAM,EAYpB,OATAvkD,SAASqpB,iBAAiB,mBAAoBq7B,GAAU,GACxD1kD,SAASqpB,iBAAiB,yBAA0Bq7B,GAAU,GAC9D1kD,SAASqpB,iBAAiB,sBAAuBq7B,GAAU,GAEvDx3D,IACFA,EAAMm8B,iBAAiB,wBAAyBu7B,GAAe,GAC/D13D,EAAMm8B,iBAAiB,sBAAuBw7B,GAAc,IAGvD,KACL7kD,SAASupB,oBAAoB,mBAAoBm7B,GAAU,GAC3D1kD,SAASupB,oBAAoB,yBAA0Bm7B,GAAU,GACjE1kD,SAASupB,oBAAoB,sBAAuBm7B,GAAU,GAC1Dx3D,IACFA,EAAMq8B,oBAAoB,wBAAyBq7B,GAAe,GAClE13D,EAAMq8B,oBAAoB,sBAAuBs7B,GAAc,GACjE,CACD,GAEA,IAEEV,GAASvhB,EAAAA,GAIP,CAAC4hB,EAvDcM,KAqGjB,IAA+B53D,EApG7Bo3D,EAAMx8D,UAAaq8D,GAAQvhB,EAAAA,OAoGE11C,EAjGZo3D,EAAMx8D,SAkGpBi9D,kBACR73D,EAAM63D,oBACG73D,EAAM83D,wBACf93D,EAAM83D,0BACG93D,EAAM+3D,sBACf/3D,EAAM+3D,wBACG/3D,EAAMg4D,sBACfh4D,EAAMg4D,uBAxGNT,GAAgB,GAAK,EAGAU,KAChBb,EAAMx8D,UAyGTkY,SAASmlD,eACXnlD,SAASmlD,iBACAnlD,SAASolD,oBAClBplD,SAASolD,sBACAplD,SAASqlD,uBAClBrlD,SAASqlD,yBACArlD,SAASslD,sBAClBtlD,SAASslD,uBA5GTb,GAAgB,GAAM,GAuCf,EAAC,EAIZ,CAEO,MAAMc,EAAsBA,KACjC,MAAOf,EAAcC,IAAmB/2D,EAAAA,EAAAA,KAAS,GAuBjD,OArBAvH,EAAAA,EAAAA,KAAU,KACR,MAAMu+D,EAAWA,KACfD,EAiCC,WACL,MAAMe,EAAiBpB,IACvB,OAAO//D,QAAQmhE,GAAkBxlD,SAASwlD,GAC5C,CApCsBC,GAAoB,EAGhCC,EAAyB76D,OAAO86D,UAAUC,GAAGC,EAAAA,EAAcC,kBAAmBrB,GAOpF,OANA55D,OAAO86D,UAAUnB,eAAenf,KAAKof,GAErCzkD,SAASqpB,iBAAiB,mBAAoBq7B,GAAU,GACxD1kD,SAASqpB,iBAAiB,yBAA0Bq7B,GAAU,GAC9D1kD,SAASqpB,iBAAiB,sBAAuBq7B,GAAU,GAEpD,KACLgB,MAEA1lD,SAASupB,oBAAoB,mBAAoBm7B,GAAU,GAC3D1kD,SAASupB,oBAAoB,yBAA0Bm7B,GAAU,GACjE1kD,SAASupB,oBAAoB,sBAAuBm7B,GAAU,EAAM,CACrE,GACA,IAEIF,CAAY,EAGrB,SAASJ,IACP,YAA0C,IAA/BpkD,SAAS+lD,kBACX,yBAC2C,IAAlC/lD,SAASgmD,qBAClB,4BAC8C,IAArChmD,SAASimD,wBAClB,0BAEF,EACT,C,6DC3Ge,SAASC,EAAqBC,GAC3C,MAAOC,EAAUC,IAAY5D,EAAAA,EAAAA,KA+B7B,OA7BAt8D,EAAAA,EAAAA,KAAU,KACR,SAASmgE,IACP,MAAM/e,EAAY18C,OAAO28C,eACzB,IAAKD,GAAWM,WAAY,OAE5B,MAAM0e,EAAQhf,EAAUQ,WAAW,GACnC,IAAKwe,EACH,OAIF,IADgBvmD,SAASiS,cAAck0C,GAErC,OAGF,MAAM,wBAAEhY,GAA4BoY,GACpBpY,aAAmCqY,QAC/CrY,EACAA,EAAwBD,eAChB12B,QAAQ2uC,IAClBE,EAASE,EAEb,CAIA,OAFAvmD,SAASqpB,iBAAiB,kBAAmBi9B,GAEtC,IAAMtmD,SAASupB,oBAAoB,kBAAmB+8B,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCnCA,MA4BA,EA5B4B,SAC1B5sC,EACAohC,GAEG,IADH6L,EAAoBp3D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,IAEpBlJ,EAAAA,EAAAA,KAAU,KACR,GAAIy0D,EACF,OAGF,MAAMxb,EAAY5lB,EAAa1xB,QAE/B,SAAS4+D,EAAanyD,GAEfA,EAAEoyD,SACLvnB,EAAW+P,YAAc56C,EAAEqyD,OAAS,EAChCH,GAAsBlyD,EAAEyU,iBAEhC,CAIA,OAFAo2B,EAAU/V,iBAAiB,QAASq9B,EAAc,CAAEG,SAAUJ,IAEvD,KACLrnB,EAAU7V,oBAAoB,QAASm9B,EAAa,CACrD,GACA,CAACltC,EAAcohC,EAAY6L,GAChC,C,iECxBA,MAAMK,EAAc,IAAIp9D,IAAI,CAAC,QAAS,WAAY,WAE5Ck0D,GAAWmJ,EAAAA,EAAAA,KAGV,SAAS79B,EAAW89B,IACzB7gE,EAAAA,EAAAA,KAAU,KACR,IAAK6gE,EACH,OAGF,MAAMrV,EAAU9rD,OAAO8rD,QAAQqV,GAc/B,OAAOpJ,EAAS7+B,aAZhB,SAAuBxqB,IAgB3B,SAAyBA,GACvB,QAAIA,EAAE8U,kBAAkB49C,eACdH,EAAYj9D,IAAI0K,EAAE8U,OAAO0/B,QAIrC,EArBWme,CAAgB3yD,IAIrBo9C,EAAQj/C,SAAQhO,IAAuB,IAArByiE,EAAQlgC,GAAQviC,GCoDjC,SAA0ByiE,GAC/B,OAAQp+C,GAlCV,SAAuBo+C,EAAgBp+C,GACrC,MAAM,IACJvG,EAAG,KAAE4kD,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAEt9B,EAAK,IAAE/iC,GAC3BkgE,GACE,OACJpd,EAAM,QAAErgB,EAAO,QAAED,EAAO,SAAE2R,EAAUn0C,IAAKsgE,GACvCx+C,EAEJ,GAAIvG,IAAQunC,EACV,OAAO,EAGT,GAAIud,GACF,IAAK59B,IAAYD,EACf,OAAO,MAEJ,CACL,GAAI29B,IAAS19B,EACX,OAAO,EAET,GAAI29B,IAAS59B,EACX,OAAO,CAEX,CACA,OAAIO,IAAUoR,GAIP/2C,QAAQ4C,IACTsgE,EAAW5W,gBAAkB1pD,EAAI0pD,eAChC5nC,EAAM4gB,KAAKrP,QAAQ,MAAO,IAAIq2B,gBAAkB1pD,EAAI0pD,eAC7D,CAGoB6W,CA1Db,SAAqBL,GAC1B,MAAM5jB,EAAO4jB,EACVxW,cACA10C,MAAM,KACNjW,KAAKyhE,GAASA,EAAKltC,SAEhBmtC,EAA+B,CACnCllD,IAAK+gC,EAAKz4B,SAAS,OACnBs8C,KAAM7jB,EAAKz4B,SAAS,QACpBu8C,KAAM9jB,EAAKz4B,SAAS,QACpBw8C,IAAK/jB,EAAKz4B,SAAS,OACnBkf,MAAOuZ,EAAKz4B,SAAS,UAGjB68C,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHzgE,IAJcs8C,EAAKnwB,MAAMnsB,IAAS0gE,EAAa78C,SAAS7jB,KAM5D,CAoCkC2gE,CAAYT,GAASp+C,EACvD,EDrDY8+C,CAAiBV,EAAjBU,CAAyBtzD,IAC3B0yB,EAAQ1yB,EACV,GAEJ,GAE0C,GACzC,CAACyyD,GACN,CAxBAhnD,SAASurB,gBAAgBlC,iBAAiB,UAAWu0B,EAASkK,a,wEEA9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtB9/C,EACAlK,EACAC,GAEA,MAAM,SAAE5Q,IAAaC,EAAAA,EAAAA,OAErBpH,EAAAA,EAAAA,KAAU,KACJ8X,EACG3Q,GACHmd,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACVT,EAASrgB,SAASogE,aACpB//C,EAASrgB,QAAQ6gB,OACnB,GACA,GACDo/C,IAGD5/C,EAASrgB,SAASogE,aACpB//C,EAASrgB,QAAQ0hD,OAGftrC,GACFuM,WAAWvM,EAAS8pD,GAExB,GACC,CAAC7/C,EAAU7a,EAAU2Q,EAAQC,GAClC,C,gHC3BA,MAAMiqD,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAASl6D,EACtBm6D,GAKA,IAJA7/D,EAAM4G,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACNk5D,EAAWl5D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAGlG,EAAAA,GAAeC,QAC7BuxD,EAAsBtrD,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EACtBqkE,EAAan5D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAEb,MAAMtB,EAAYu6D,EAAYh3C,EAAAA,GAA0Bg3C,QAAankE,EAC/DskE,EAAcF,IAAgBp/D,EAAAA,GAAeu/D,QACjDC,EAAAA,IAA4BJ,IAAgBp/D,EAAAA,GAAey/D,YAEvDxzB,GAAcC,EAAAA,EAAAA,KACdjxC,GAAKykE,EAAAA,EAAAA,MACJ56D,EAAc66D,IAAmBp7D,EAAAA,EAAAA,IAASK,IAAc06D,EAAc,EAAI,GAC3EM,GAAezhE,EAAAA,EAAAA,MAEf0hE,GAAiB1jE,EAAAA,EAAAA,KAAQ,KACtB2jE,EAAAA,EAAAA,KAAU/2D,IACX62D,EAAajhE,WAAa6yD,GAAU9hC,KAAKC,MAAQiwC,EAAajhE,QAAU6yD,IAC1EmO,EAAgB52D,EAClB,GACCm2D,GAAmB,IACrB,CAAC1N,IAiDJ,OA/CAx0D,EAAAA,EAAAA,KAAU,MACHsC,GAAU6/D,IACRv6D,EAmBM06D,GACTh+C,YAAW,KACTq+C,EAAgBX,EAAmB,GAClCC,IArBHU,EAAgB,GAEZC,EAAajhE,SACfwpB,EAAAA,GAA2B03C,GAG7BD,EAAajhE,QAAU+wB,KAAKC,MAE5BxH,EAAAA,GAAkBg3C,EAAWC,EAAaC,EAAeQ,EAAgB5kE,GAAIihD,MAAK,KAChF,MAAM6jB,EAAYrwC,KAAKC,MAAQiwC,EAAajhE,QAC5CihE,EAAajhE,aAAU3D,GAElBw2D,GAASuO,GAAavO,EACzBvlB,IAEA3qB,WAAW2qB,EAAaulB,EAAQuO,EAClC,KAON,GACC,CACDzgE,EAAQ6/D,EAAWv6D,EAAWw6D,EAAanzB,EAAaqzB,EAAa9N,EAAOqO,EAAgBR,EAAepkE,KAG7G+B,EAAAA,EAAAA,KAAU,KACJsC,GAAUsgE,EAAajhE,UACzBwpB,EAAAA,GAA2B03C,GAC3BF,EAAgB,GAChBC,EAAajhE,aAAU3D,EACzB,GACC,CAAC6kE,EAAgBvgE,KAEpBtC,EAAAA,EAAAA,KAAU,IACD,KACDmiE,GACFh3C,EAAAA,GAA2Bg3C,EAAWlkE,EACxC,GAED,CAACA,EAAIkkE,IAED,CAAEv6D,YAAWE,eACtB,C,sECjFA,MAAMk7D,EAAqB,IAC3B,IAAIC,EAEW,SAASC,EACtBprD,EAAiBC,GACjB,IAD8CorD,EAAgBj6D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG85D,EAAoBvO,EAAUvrD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAE/F,MAAMk6D,GAAgBjiE,EAAAA,EAAAA,KAAO,GAEvBkiE,GAAkBt/D,EAAAA,EAAAA,IAAgB,KACtCq/D,EAAczhE,SAAU,CAAI,IAqC9B,OAlCA3B,EAAAA,EAAAA,KAAU,KACJijE,IACF/9B,aAAa+9B,GACbA,OAAejlE,IAGb8Z,GAAWyK,EAAAA,IAAiBkyC,IAC9BwO,EAAev+D,OAAO4f,YAAW,KAC1B8+C,EAAczhE,SACjBoW,GACF,GACoB,EAAnBorD,GACL,GACC,CAAC1O,EAAY38C,EAAQqrD,EAAkBprD,IAqBnC,EAnBkBhU,EAAAA,EAAAA,IAAgB,KACvCq/D,EAAczhE,SAAU,CAAI,KAGLoC,EAAAA,EAAAA,IAAgB,KACvCq/D,EAAczhE,SAAU,EAEpBshE,IACF/9B,aAAa+9B,GACbA,OAAejlE,GAGjBilE,EAAev+D,OAAO4f,YAAW,KAC1B8+C,EAAczhE,SACjBoW,GACF,GACCorD,EAAiB,IAGsBE,EAC9C,C,mFC/Ce,SAASC,EAA0B3hE,EAAY+G,GAC5D,MAAM66D,GAAO94C,EAAAA,EAAAA,GAAY9oB,GAAS,GAC5B+yD,GAAavzD,EAAAA,EAAAA,MACb8tC,GAAcC,EAAAA,EAAAA,KAEds0B,EAAmB7hE,QAEnB8hE,EAAgBF,QAiBtB,OAfIC,GAAoB9O,EAAW/yD,UACjCujC,aAAawvB,EAAW/yD,SACxB+yD,EAAW/yD,aAAU3D,IAGvB22D,EAAAA,EAAAA,IAAc,KAERjsD,IAAa86D,GAAoBC,IAAkB/O,EAAW/yD,UAChE+yD,EAAW/yD,QAAU+C,OAAO4f,YAAW,KACrCowC,EAAW/yD,aAAU3D,EACrBixC,GAAa,GACZvmC,GACL,GACC,CAACA,EAAUumC,EAAau0B,EAAkBC,IAErC/O,EAAW/yD,SAAY+G,IAAY86D,EAA6BD,EAAV5hE,CAChE,C,6DCvBe,SAAS60D,EACtBkN,EACAC,GAEA,MAAM10B,GAAcC,EAAAA,EAAAA,KACd00B,GAAaziE,EAAAA,EAAAA,IAAOuiE,GACpBrmC,GAAQl8B,EAAAA,EAAAA,IAAOwiE,GAEf/pD,GAAW5a,EAAAA,EAAAA,KAAa2jB,IAC5B0a,EAAM17B,QAAUiiE,EAAWjiE,QAAQ07B,EAAM17B,QAASghB,GAClDssB,IACO5R,EAAM17B,UACZ,IAEH,MAAO,CACL07B,EAAM17B,QACNiY,EAEJ,C,kDCxBe,SAASiqD,EAAgB7M,EAAYJ,EAAmBO,GAAkC,IAAhBT,EAASxtD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,GACnG,OAAOu7B,EAAAA,EAAAA,IAAsBzyB,IAC3BA,GAAI,GAEH0kD,EAAMM,EAAIJ,EAASO,EACxB,C,6HCAA,MAQA,EAR0C/0D,IACxC,MAAM,OAAE0V,GAAW1V,EACb0hE,GAAgBltC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBhf,GAGvE,OAAOgsD,EAAgBtjE,EAAAA,GAAAC,cAACqjE,EAAkB1hE,QAAYpE,CAAS,ECsDjE,EArDoB+lE,CAClBC,EACAC,EACAC,KAEA,MAAMrlE,GAAOC,EAAAA,EAAAA,MACNqlE,EAAaC,IAAkB78D,EAAAA,EAAAA,MAEhC88D,GAAwBtgE,EAAAA,EAAAA,IAAgB,SAAC0B,GAAqC,IAAzB6+D,EAAYp7D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAErE,MAAMq7D,EAAc76D,KAAK1I,MAAM0I,KAAKiD,IAAIlH,EAAK++D,UAAW9xC,KAAKC,MAAQ,KAAa,MAC7E2xC,EAAe,GAAI1xC,EAAAA,EAAAA,OACxBuxC,IAAcI,GACdH,OAAepmE,EACjB,IAEMymE,GAAmC1gE,EAAAA,EAAAA,IAAgB,KACvDsgE,EAAsB,IAAI3xC,KAA6B,IAAxBgyC,EAAAA,MAA+B,EAAK,IAG/DC,GAAsB5gE,EAAAA,EAAAA,IAAgB,KAC1CqgE,OAAepmE,GACfimE,KAAY,IAGRW,GAAkB7gE,EAAAA,EAAAA,IAAiB8gE,IACvCT,GAAe,IAAMS,GAAc,IAG/BC,EAAuBZ,EAAS,IAAIxxC,KAAc,IAATwxC,GAAiB,IAAIxxC,KACpEoyC,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIvyC,KAiB7B,OAhBAuyC,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACP,EAbNpkE,EAAAA,GAAAC,cAACqjE,EAAa,CACZhsD,OAAQ5Z,QAAQimE,GAChBiB,gBAAc,EACdC,WAAYP,EAAqBN,UACjCc,OAAOC,EAAAA,EAAAA,IAAcN,GACrBO,cAAY,EACZC,kBAAmBzB,EAAyBnlE,EAAK,gCAA6Bb,EAC9E+Z,QAAS4sD,EACT5iD,SAAUsiD,EACVqB,oBAAqB1B,EAAyBS,OAAmCzmE,IAInD,C,mFCvDpC,MASA,EAT6B2nE,CAACroE,EAAiBuV,KACtC1T,EAAAA,EAAAA,KAAQ,KACN2jE,EAAAA,EAAAA,KAAUngD,IACVrlB,GAAWuV,IAChBjU,EAAAA,EAAAA,MAAagnE,kBAAkB,CAAEtoE,SAAQuV,WAAU8P,UAAS,GAC3DkjD,EAAAA,MACF,CAACvoE,EAAQuV,G,6DCXC,SAASypD,EAAawJ,GAAa,IAAAC,EAChD,MAAMC,GAAY7kE,EAAAA,EAAAA,MAElB,OADiB,QAAjB4kE,EAAAC,EAAUrkE,eAAO,IAAAokE,IAAjBC,EAAUrkE,SAAY67B,EAAAA,EAAAA,IAAgBsoC,IAC/BE,EAAUrkE,OACnB,C,uECHO,SAASg7D,EAAgBsJ,EAA4B1R,GAE1D,MAAM2R,GAAa/kE,EAAAA,EAAAA,KAAO,GACtB+kE,EAAWvkE,UACbukE,EAAWvkE,SAAU,EAErB4yD,GAAchoD,SAAS45D,KACjBpuC,EAAAA,EAAAA,IAASouC,IACXA,EAAWC,UAAUH,EACvB,MAIJtoC,EAAAA,EAAAA,IAAc,IACL,MACL0oC,EAAAA,EAAAA,IAAcJ,EAAO,GAG3B,C,kDCJA,QAhBA,SAAoBK,EAAsB9R,GACxC,MAAM+R,GAAgBplE,EAAAA,EAAAA,IAAOmlE,IAE7Bz6D,EAAAA,EAAAA,KAAgB,KACd06D,EAAc5kE,QAAU2kE,CAAQ,GAC/B,CAACA,KAEJtmE,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAVw0D,EACT,OAEF,MAAMv2D,EAAKqmB,YAAW,IAAMiiD,EAAc5kE,WAAW6yD,GACrD,MAAO,IAAMtvB,aAAajnC,EAAG,GAC5B,CAACu2D,GACN,C,mCChBO,IAAKkL,EAAa,SAAbA,GAAa,OAAbA,EAAa,sCAAbA,EAAa,4BAAbA,EAAa,sCAAbA,CAAa,K,wdCoFzB,MAAM8G,EAKJztB,WAAAA,CACS71B,EACCi4B,EACAsrB,GACR,KAHOvjD,OAAAA,EAAc,KACbi4B,SAAAA,EAAsC,KACtCsrB,QAAAA,EAAgBvtB,EAAA,qBAPF,IAAIvgB,KAA4BugB,EAAA,+BAEtB,IAAIvgB,IAOtC,CAGOihB,OAAAA,GACP,CAEA4E,IAAAA,GAAqB,QAAAkoB,EAAAx9D,UAAAnH,OAAb4kE,EAAI,IAAAl9D,MAAAi9D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA19D,UAAA09D,GACVztB,KAAK0tB,YAAY,CACf9jD,KAAM,OACN4jD,QAEJ,CAEAG,OAAAA,CAAQC,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4B9tB,KAE7CnqC,GAAYk4D,EAAAA,EAAAA,KACZvnC,EAA0B,CAC9B5c,KAAM,aACN/T,eACG+3D,GAGCI,EAAe,CAAEn4D,aAGjBo4D,EAAwB,IAAIrc,SAAQ,CAACC,EAASqc,KAClD3nE,OAAO4nE,OAAOH,EAAc,CAAEnc,UAASqc,UAAS,IAGlD,GAAqD,mBAA1C1nC,EAAQgnC,KAAKhnC,EAAQgnC,KAAK5kE,OAAS,GAAmB,CAC/D49B,EAAQ4nC,cAAe,EAEvB,MAAMjB,EAAW3mC,EAAQgnC,KAAKa,MAC9BL,EAAab,SAAWA,EACxBW,EAAwBvpC,IAAI4oC,EAAUa,EACxC,CAeA,OAbAH,EAActpC,IAAI1uB,EAAWm4D,GAC7BC,EACGK,OAAM,KAAe,IACrBC,SAAQ,KACPV,EAAcppC,OAAO5uB,GAEjBm4D,EAAab,UACfW,EAAwBrpC,OAAOupC,EAAab,SAC9C,IAGJntB,KAAK0tB,YAAYlnC,GAEVynC,CACT,CAEAO,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAE74D,GAAcmqC,KAAK8tB,wBAAwB3pC,IAAIsqC,IAAqB,CAAC,EACxE54D,GAILmqC,KAAK0tB,YAAY,CACf9jD,KAAM,iBACN/T,aAEJ,CAEA84D,SAAAA,CAAUz+D,GACR,MAAM,cAAE29D,EAAa,QAAEP,GAAYttB,KACnC,GAAI9vC,EAAKo9D,UAAYA,EAOrB,GAHkB,WAAdp9D,EAAK0Z,MAAqBo2B,KAAKgC,UACjChC,KAAKgC,SAAS9xC,EAAK0+D,QAEH,mBAAd1+D,EAAK0Z,KAA2B,CAClC,MAAMokD,EAAeH,EAAc1pC,IAAIj0B,EAAK2F,WACxCm4D,IACE99D,EAAK+X,MACP+lD,EAAaE,OAAOh+D,EAAK+X,OAEzB+lD,EAAanc,QAAQ3hD,EAAK2+D,UAGhC,MAAO,GAAkB,mBAAd3+D,EAAK0Z,KAA2B,CACzC,MAAMokD,EAAeH,EAAc1pC,IAAIj0B,EAAK2F,WAC5Cm4D,GAAcb,cAAcj9D,EAAK4+D,aACnC,MAAO,GAAkB,mBAAd5+D,EAAK0Z,KACd,MAAM,IAAIi8B,MAAM31C,EAAK+X,OAAO/b,QAEhC,CAEQwhE,WAAAA,CAAYx9D,GAClBA,EAAKo9D,QAAUttB,KAAKstB,QAEpBttB,KAAKj2B,OAAO2jD,YAAYx9D,EAC1B,EAGK,SAAS6+D,EACdC,EACAhtB,EACAsrB,GAEA,MAAM2B,EAAY,IAAI5B,EAAkB2B,EAAQhtB,EAAUsrB,GAE1D,SAAS4B,EAAa9pE,GAA+B,IAA9B,KAAE8K,GAA0B9K,EACjD6pE,EAAUN,UAAUz+D,EACtB,CAQA,OANA8+D,EAAOjlC,iBAAiB,UAAWmlC,GAEnCD,EAAUxuB,QAAU,KAClBuuB,EAAO/kC,oBAAoB,UAAWilC,EAAc,EAG/CD,CACT,C,iFC/MA,MAAME,EAAmB,IAEnBC,EAAsC,IAAI5vC,IAEjC,SAAS6vC,EAAwBvvB,EAAwB5qC,GAA2C,IAA7B3F,EAAQQ,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAGo/D,GAC1F7mE,EAAAA,EAAAA,KAA0BpC,EAAAA,EAAAA,SAC7BqJ,EAAW,GAGb,MAAMvG,EAA0C,QAAlC82C,EAAU2P,aAAa,QAC/B,WACJI,EAAY/b,YAAaw7B,EAAc,YAAE1f,EAAazL,SAAS,SAAEorB,IAC/DzvB,EAEJ,IAAI0vB,EAAOt6D,EAAO26C,EAElB,GAAI2f,EAAO,EAAG,CACZ,MAAMC,GAAiB5f,GAAc7mD,GAAS,EAAI,GAClDwmE,EAAOj/D,KAAKiD,IAAIg8D,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgB7f,GAAeC,EAAayf,GAClDE,EAAOj/D,KAAKC,IAAIg/D,EAAMC,EACxB,CAEA,GAAa,IAATD,EACF,OAAO5d,QAAQC,UAGb0d,GAAYH,EAAS7kE,IAAIglE,IAC3BH,EAASjrC,IAAIorC,EAAbH,GAGF,MAAMrlD,EAAS8lC,EAAa2f,EAE5B,OAAO,IAAI5d,SAAeC,KACxBvoC,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAb/Z,EAGF,OAFAuwC,EAAU+P,WAAa9lC,OACvB8nC,IAIF,IAAI6d,GAAY,EAChB,MAAM5qE,EAAKyL,KAAKo/D,SAAShnB,WACzB7I,EAAUqE,QAAQorB,SAAWzqE,EAC7BsqE,EAAS7qC,IAAIz/B,GAAI,KACf4qE,GAAY,CAAI,IAGlB5vB,EAAU/0C,MAAM6kE,eAAiB,OAEjC,MAAMC,EAAUt2C,KAAKC,OAErBs2C,EAAAA,EAAAA,KAAQ,KACN,GAAIJ,EAAW,OAAO,EAEtB,MAAMK,EAAIx/D,KAAKC,KAAK+oB,KAAKC,MAAQq2C,GAAWtgE,EAAU,GAEhDygE,EAAcR,GAAQ,EAgBpC,SAAoBO,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAlBwCE,CAAWF,IAU3C,OATAjwB,EAAU+P,WAAat/C,KAAK1I,MAAMkiB,EAASimD,GAEvCD,GAAK,IACPjwB,EAAU/0C,MAAM6kE,eAAiB,UAC1B9vB,EAAUqE,QAAQorB,SACzBH,EAAS3qC,OAAO3/B,GAChB+sD,KAGKke,EAAI,CAAC,GACXzmD,EAAAA,GAAgB,GACnB,GAEN,C,+IC5DA,IACI4mD,EADAjoE,GAAc,EAGH,SAASkoE,IAAsD,QAAA5C,EAAAx9D,UAAAnH,OAArC4kE,EAAI,IAAAl9D,MAAAi9D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA19D,UAAA09D,GAC3CyC,EAAc1C,EAAK/mE,MAAM,EAAG,GAE5B,MAAM2pE,EAASC,KAAwBH,GAGvC,GAD+B1C,EAAK,GAElC,OAAO4C,GAGT9mD,EAAAA,EAAAA,IAAgB8mD,EAElB,CAEO,SAASE,IACTroE,KAILsoE,EAAAA,EAAAA,OAEA70B,EAAAA,EAAAA,KAAe,MACbpyB,EAAAA,EAAAA,IAAgB+mD,KAAwBH,GAAc,IAE1D,CAEA,SAASG,EACPvwB,EACAptB,EACAiY,GAMA,IALA6lC,EAAMzgE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,EACT0gE,EAAW1gE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG2gE,EAAAA,IACdC,EAA+B5gE,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAC/B+rE,EAAsB7gE,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EACtBgsE,EAAoC9gE,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAGlC8rE,IAAmBG,EAAAA,GAAeC,SAC9BzoE,EAAAA,EAAAA,KAA0BpC,EAAAA,EAAAA,SAE9B0qE,EAAgB,GAGlB,MAAQ5uC,UAAWgvC,EAAYC,aAAcC,GAAkBx+C,GACvDwZ,UAAWilC,EAAkBF,aAAcG,EAAe,aAAEjqB,GAAiBrH,EAC/EuxB,EAAwBR,GAA8B/wB,EAAUqE,QAAQmtB,aAC1E1mC,OAAOkV,EAAUqE,QAAQmtB,cACzBF,EAEJ,IAAIznC,EACJ,OAAQgB,GACN,IAAK,QACHhB,EAAYqnC,EAAaR,GAAWjtB,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH5Z,EAAYqnC,EAAaE,EAAgBV,EAAUa,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACH1nC,EAAWunC,EAAgBG,EACtBL,EAAaE,EAAgB,EAAIG,EAAwB,EACzDL,EAAaR,EAItB,MAAMe,EA8DR,SACEzxB,EACAnW,GAGA,IAFA8mC,EAAW1gE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG2gE,EAAAA,IACdC,EAA+B5gE,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAE/B,MAAM,UAAEqnC,GAAc4T,EAEtB,QAAuBj7C,IAAnB8rE,EAA8B,CAChC,MAAMa,EAAS7nC,EAAWuC,EAE1B,GAAIslC,GAAUf,EACZ,OAAOvkC,GAAaslC,EAASf,GACxB,GAAIe,EAASf,EAClB,OAAOvkC,GAAaslC,EAASf,EAEjC,KAAO,IAAIE,IAAmBG,EAAAA,GAAeW,GAC3C,OAAO9nC,EAAW8mC,EACb,GAAIE,IAAmBG,EAAAA,GAAeY,KAC3C,OAAOnhE,KAAKiD,IAAI,EAAGm2B,EAAW8mC,EAChC,CAEA,OAAOvkC,CACT,CArFqBylC,CAAoB7xB,EAAWnW,EAAU8mC,EAAaE,GAEzE,IAAInB,EAAO7lC,EAAW4nC,EACtB,GAAI/B,EAAO,EAAG,CACZ,MAAMC,GAAiB8B,EACvB/B,EAAOj/D,KAAKiD,IAAIg8D,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgBtoB,GAAgBoqB,EAAaF,GACnD7B,EAAOj/D,KAAKC,IAAIg/D,EAAMC,EACxB,CAEA,MAAMmC,EAAUrhE,KAAKyjC,IAAIw7B,GAEzB,MAAO,KACL,GAAIoC,EAAU,EAKZ,YAJIT,IAAqBI,IACvBzxB,EAAU5T,UAAYqlC,IAM1B,MAAMxnD,EAASwnD,EAAa/B,EAE5B,GAAsB,IAAlBoB,EAEF,YADA9wB,EAAU5T,UAAYniB,GAIxB9hB,GAAc,EAEd,MAAMgoE,EAAa2B,GAAWC,EAAAA,IAA4CC,EAAkBC,EACtFxiE,EAAWqhE,GACfoB,EAAAA,IACGJ,EAAUlB,EAAAA,KAA6BuB,EAAAA,IAA2BD,EAAAA,KAEjEnC,EAAUt2C,KAAKC,MACf04C,GAAuBjhC,EAAAA,EAAAA,OAE7BkhC,EAAAA,EAAAA,KAAc,KACZ,MAAMpC,EAAIx/D,KAAKC,KAAK+oB,KAAKC,MAAQq2C,GAAWtgE,EAAU,GAChDygE,EAAcR,GAAQ,EAAIS,EAAWF,IACrCqC,EAAe7hE,KAAK1I,MAAMkiB,EAASimD,GAWzC,OATAlwB,EAAU5T,UAAYkmC,EAEtBnqE,EAAc8nE,EAAI,GAAKqC,IAAiBroD,EAEnC9hB,IACHioE,OAAcrrE,EACdqtE,KAGKjqE,CAAW,GACjBqhB,EAAAA,GAAgB,CAEvB,CAEO,SAAS+oD,IACd,OAAOpqE,CACT,CA2BA,SAAS6pE,EAAgB/B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAASgC,EAAehC,GACtB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,gJC5JA,MAAMuC,EAAS,IAAI9yC,IACnB,IAGI+yC,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAASvU,EAAkBwU,GAClC,MAAMC,EAAeL,GAAkBD,EAAOnuC,IAAIouC,GAC9CK,IACFA,EAAallE,MAAM8yC,QACnBoyB,EAAallE,MAAM+hB,YAAc,EAC7BmjD,EAAalU,eAAekU,EAAalU,iBAG/C,MAEMmU,EAAcC,EAAgB3U,GAFrB15D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAaq6D,YAAYl0D,QAAUiK,EAAAA,GAAYC,OAExBo8D,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAO/nE,IAAIsoE,GAId,YAFAptE,EAAAA,EAAAA,MAAastE,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAaK,aAKzE,MAAMC,EAAYb,EAAOnuC,IAAI0uC,GAEzBM,EAAU1U,aACZ0U,EAAU1U,cAGZ8T,EAAiBM,EAEbM,EAAUzlE,MAAMzC,MAClBs1C,EAAAA,EAAAA,GAAS4yB,EAAUzlE,MAEvB,CAEO,SAAS0lE,IACd,MAAMR,EAAeL,GAAkBD,EAAOnuC,IAAIouC,GAC9CK,GACFA,EAAallE,MAAM8yC,OAEvB,CAEO,SAASye,EACdd,EACAE,EACA12B,EACA82B,EACAC,GAEA,IAAK4T,EAAO/nE,IAAI4zD,GAAU,CACxB,MAAMkV,EAxGV,SACElV,EACAv0C,EACA60C,EACAC,GAEA,MAAMhxD,EAAQ,IAAI4lE,MAElB,SAASC,EAAYrU,GACnB,OAAQjqD,IACDq9D,EAAO/nE,IAAI4zD,MAIZ2C,EAAAA,EAAAA,GAAwBpzD,IAI5B4kE,EAAOnuC,IAAIg6B,GAAUG,SAASlrD,SAASu0B,IACrCA,EAAQu3B,EAAWjqD,EAAE,IACrB,CAEN,CAoBA,OAlBAvH,EAAMq8B,iBAAiB,aAAcwpC,EAAY,iBACjD7lE,EAAMq8B,iBAAiB,OAAQwpC,EAAY,WAC3C7lE,EAAMq8B,iBAAiB,QAASwpC,EAAY,YAC5C7lE,EAAMq8B,iBAAiB,YAAawpC,EAAY,gBAChD7lE,EAAMq8B,iBAAiB,aAAcwpC,EAAY,iBACjD7lE,EAAMq8B,iBAAiB,UAAWwpC,EAAY,cAC9C7lE,EAAMq8B,iBAAiB,SAAS,KACzBuoC,EAAO/nE,IAAI4zD,MAIZ2C,EAAAA,EAAAA,GAAwBpzD,IAI5BglE,EAASvU,GAAQ,IAGZ,CACLzwD,QACAkc,OACA01C,MAAO,IAAIkU,MAAM9lE,EAAO,CACtBy2B,IAAKA,CAACpa,EAAQpiB,IAAgCoiB,EAAOpiB,KAEvD22D,SAAU,GACVG,cACAC,gBAEJ,CAoDkB+U,CAAYtV,EAASE,EAAWI,EAAaC,GAC3D4T,EAAO/tC,IAAI45B,EAASkV,GAwIxB,SAAyBA,EAAclV,GAClB,UAAfkV,EAAMzpD,MAAqB6oD,EAAWjnD,SAAS2yC,KACjDsU,EAAW5pE,KAAKs1D,GAChBsU,EAAW9mD,KAAK+nD,IAGC,UAAfL,EAAMzpD,MAAqB4oD,EAAWhnD,SAAS2yC,KACjDqU,EAAW3pE,KAAKs1D,GAChBqU,EAAW7mD,KAAK+nD,GAEpB,CAjJIC,CAAgBN,EAAOlV,EACzB,CACA,MAAM,MAAEzwD,EAAK,MAAE4xD,EAAK,SAAEhB,GAAagU,EAAOnuC,IAAIg6B,GAI9C,OAFAG,EAASz1D,KAAK8+B,GAEP,CACL0Y,IAAAA,CAAKp1C,GACH,IAAKyC,EAAM4yC,OAAQ,OACnB,MAAMsyB,EAAeL,GAAkBD,EAAOnuC,IAAIouC,GAC9CK,GAAgBL,IAAmBpU,IACrCyU,EAAallE,MAAM8yC,QACnBoyB,EAAallE,MAAM+hB,YAAc,GAC7BqxC,EAAAA,EAAAA,GAAwB8R,EAAallE,SACvCklE,EAAallE,MAAMy2C,QAAQyvB,sBAAwB,QAEjDhB,EAAalU,eAAekU,EAAalU,iBAG/C6T,EAAiBpU,EAEZzwD,EAAMzC,MACTyC,EAAMzC,IAAMA,EACZyC,EAAMmmE,QAAU,OAEZ5oE,EAAIugB,SAAS,kBAAoBsoD,EAAAA,YAC5BpmE,EAAMy2C,QAAQyvB,uBACrBG,EAAAA,EAAAA,GAA4BrmE,MAIhC6yC,EAAAA,EAAAA,GAAS7yC,GA+Hf,SAAsBkc,EAAqBu0C,GACzC,IAAI15D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAa8tE,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAEhwE,IAAW6uE,EAAAA,EAAAA,IAAgBC,EAAa9U,GAAS+U,YACnDkB,GAAez6D,EAAAA,EAAAA,KAAyBzT,EAAAA,EAAAA,QAAc/B,OACtDkwE,EAAevvE,GACnBA,EAAGwlC,WAAY,MAAKnmC,MAAciwE,GAAgBtvE,EAAGwlC,WAAY,MAAK8pC,KAG3D,UAATxqD,IACF6oD,EAAaA,EAAW7rE,OAAOytE,IAGpB,UAATzqD,IACF4oD,EAAaA,EAAW5rE,OAAOytE,GAEnC,CA7IMC,CAAajW,EAAWF,EAC1B,EAEA3d,KAAAA,GACM+xB,IAAmBpU,GACrBzwD,EAAM8yC,OAEV,EAEAmf,IAAAA,GACE,GAAI4S,IAAmBpU,EAAS,CAE9B,MAAM6C,EAAUtzD,EAAMzC,IACtByC,EAAM8yC,SAENzP,EAAAA,EAAAA,KAAoB,KAClBrjC,EAAMzC,IAAM,GACZyC,EAAMzC,IAAM+1D,CAAO,GAEvB,CACF,EAEA1xD,cAAAA,CAAe6xD,GACToR,IAAmBpU,IACjBzwD,EAAM6mE,SACR7mE,EAAM6mE,SAASpT,GAEfzzD,EAAM+hB,YAAc0xC,EAG1B,EAEAhC,SAAAA,CAAUqB,GACJ+R,IAAmBpU,IACrBzwD,EAAM8yD,OAASA,EACf9yD,EAAMkiB,OAAQ,EAElB,EAEAwvC,eAAAA,CAAgBoV,GACVjC,IAAmBpU,IACrBzwD,EAAMizD,aAAe6T,EAEzB,EAEAnV,WAAAA,CAAYzvC,GAERliB,EAAMkiB,WADM/qB,IAAV+qB,GACaliB,EAAMkiB,MAEPA,CAElB,EAEA0vC,QAEAG,gBAAAA,GACEiT,EAASvU,EACX,EAEArsC,OAAMA,KACIghD,EAAgB3U,GAAS15D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAaq6D,YAAYl0D,QAG3EwlB,QAAOA,KACGihD,EAAgB3U,GAAS15D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAaq6D,YAAYl0D,QAAQ,GAGnFqzD,oBAAAA,GACEgT,EAASvU,GAAS,EACpB,EAEA1d,OAAAA,GAAuC,IAA/Bg0B,EAAqB1kE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAC3B,MAAMsjE,EAAQf,EAAOnuC,IAAIg6B,GACpBkV,IAILA,EAAM/U,SAAW+U,EAAM/U,SAAS13D,QAAQ8tE,GAAMA,IAAM/sC,IAE/C0rC,EAAM/U,SAAS11D,SAClByqE,EAAM3lE,MAAM8yC,QACZ8xB,EAAO7tC,OAAO05B,GAEVsW,GAgCZ,SAAyBpB,EAAclV,GACrC,MAAMwW,EAAiBplB,GAAgBA,IAAO4O,EAC3B,UAAfkV,EAAMzpD,OACR6oD,EAAaA,EAAW7rE,OAAO+tE,IAGd,UAAftB,EAAMzpD,OACR4oD,EAAaA,EAAW5rE,OAAO+tE,GAEnC,CAxCUC,CAAgBvB,EAAOlV,GAGrBA,IAAYoU,IACdA,OAAiB1tE,IAGvB,EAEJ,CAkDA,SAASiuE,EAAgB+B,GAA2E,IAAvDxoE,EAAM0D,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAGuG,EAAAA,GAAYC,OAAQo8D,EAAwB5iE,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAChG,MACMiwE,EAlDR,SAAuBzB,GACrB,OAAQA,EAAMzpD,MACZ,IAAK,QAAS,OAAO6oD,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgBuC,CADAzC,EAAOnuC,IAAI0wC,IAEzB,IAAKC,EAAO,OAEZ,GAAIzoE,IAAWiK,EAAAA,GAAYE,OAAQ,CACjC,MAAMw+D,EAAQF,EAAM3oD,QAAQ0oD,GAC5B,GAAIG,EAAQ,EAAG,OAEf,OAAOF,EAAME,GADKrC,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAExuE,IAAW6uE,EAAAA,EAAAA,IAAgBC,EAAa4B,GAAW3B,YACrD+B,EAAYH,EAAMluE,QAAQ9B,GAAOA,EAAGwlC,WAAY,MAAKnmC,OACrD6wE,EAAQC,EAAU9oD,QAAQ0oD,GAChC,GAAIG,EAAQ,EAAG,OACf,IAAIliD,EAAYzmB,IAAWiK,EAAAA,GAAYC,QAAU,EAAI,EAErD,OADIo8D,IAAgB7/C,IAAc,GAC3BmiD,EAAUD,EAAQliD,EAC3B,CAEO,SAASrjB,EAAYvD,GAC1B,MAAQ,IAAEgpE,EAAAA,EAAAA,IAAchpE,MAAYA,EAAQI,MAC9C,CAEA,SAAS2mE,EAAa9U,GAGpB,MAAO,CACL+U,WAHiB/U,EAAQ3zB,MAAM,qBAAsB,GAIrDl+B,KAHWs+B,OAAOuzB,EAAQxhD,MAAM,KAAK0xD,OAKzC,CAGA,SAASqF,EAAkByB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQ9oE,KAAM+oE,EAASnC,WAAYoC,GAAWrC,EAAakC,IACnD7oE,KAAMipE,EAASrC,WAAYsC,GAAWvC,EAAamC,GACrD/iC,EAAOkjC,EAAUF,EACvB,OAAgB,IAAThjC,EAAamjC,EAAOC,cAAcH,GAAUjjC,CACrD,C,8gBC3VO,IAAKtf,EAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,WAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,iBAAdA,CAAc,MA+DnB,MAAM2iD,EAA4B,GACnCC,EAAkB,GAClBC,EAAkB,GAClBC,EAA2B,IAC3BC,EAA2B,IAEjC,SAASC,EAAYnqD,EAAUC,GAC7B,OAAKA,EACEtb,KAAKylE,MAAOnqD,EAAEoqD,MAAQrqD,EAAEqqD,MAASpqD,EAAEqqD,MAAQtqD,EAAEsqD,OADrC,CAEjB,CAEA,SAASC,EAAevqD,EAAUC,GAChC,MAAO,CACLpY,GAAImY,EAAEqqD,MAAQpqD,EAAEoqD,OAAS,EACzBviE,GAAIkY,EAAEsqD,MAAQrqD,EAAEqqD,OAAS,EAE7B,CAEA,IAAIE,EAAgB,EACpB,MAAMC,EAAW,IC7DV,MAeLz2B,WAAAA,GAKwB,IALZ,UACV02B,EAAY,EAAC,YACbC,EAAc,IAAG,UACjBC,EAAY,IAAG,MACfnb,EAAQ,KACOtrD,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACgwC,EAAA,yBAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,qBAAAA,EAAA,4BAAAA,EAAA,8BAAAA,EAAA,+BACpBC,KAAKs2B,UAAYA,EACjBt2B,KAAKu2B,YAAcA,EACnBv2B,KAAKw2B,UAAYA,EACjBx2B,KAAKqb,MAAQA,EACbrb,KAAKy2B,aAAe,IAAInmE,MAAuB,EAAjB0vC,KAAKs2B,WAAe7lE,KAAK,GACvDuvC,KAAK02B,eAAiB,IAAIpmE,MAAuB,EAAjB0vC,KAAKs2B,WAAe7lE,KAAK,GACzDuvC,KAAK22B,gBAAkB,IAAIrmE,MAAuB,EAAjB0vC,KAAKs2B,WAAe7lE,KAAK,EAC5D,CAEAmmE,KAAAA,CAAM3hE,GACJ,IAAI4hE,EAWJ,YATqBhyE,KADrBoQ,EAAIA,EAAE6hE,eAAiB7hE,GACjB8hE,WACJF,EAAY5hE,EAAE8hE,gBACQlyE,IAAboQ,EAAEqyD,OACXuP,GAAwB,GAAZ5hE,EAAEqyD,YACQziE,IAAboQ,EAAE+hE,QAAqC,IAAb/hE,EAAE+hE,SACrCH,GAAwB,GAAZ5hE,EAAE+hE,QAEhBh3B,KAAK22B,gBAAgB9tE,KAAK0wB,KAAKC,OAC/BwmB,KAAK22B,gBAAgBjsC,QACjBmsC,EAAY,GACd72B,KAAKy2B,aAAa5tE,KAAKguE,GACvB72B,KAAKy2B,aAAa/rC,QACXsV,KAAKi3B,UAAU,KAEtBj3B,KAAK02B,eAAe7tE,KAAKguE,GACzB72B,KAAK02B,eAAehsC,QACbsV,KAAKi3B,WAAW,GAE3B,CAEAA,SAAAA,CAAUnkD,GACR,MAAMokD,GAA4B,IAAfpkD,EAAmBktB,KAAK02B,eAAiB12B,KAAKy2B,aACjE,QAAsB5xE,IAAlBqyE,EAAW,GAAkB,OAAOpkD,EACxC,GACEktB,KAAK22B,gBAAiC,EAAjB32B,KAAKs2B,UAAgB,GAAKt2B,KAAKqb,MAAQ9hC,KAAKC,OAC9D09C,EAAW,KAAOA,EAA4B,EAAjBl3B,KAAKs2B,UAAgB,GAErD,OAAO,EAET,MAAMa,EAAgBD,EAAWzwE,MAAM,EAAGu5C,KAAKs2B,WACzCc,EAAgBF,EAAWzwE,MAAMu5C,KAAKs2B,UAA4B,EAAjBt2B,KAAKs2B,WACtDe,EAASF,EAAc/gC,QAAO,CAAC25B,EAAGnzD,IAAMmzD,EAAInzD,IAC5C06D,EAASF,EAAchhC,QAAO,CAAC25B,EAAGnzD,IAAMmzD,EAAInzD,IAC5C26D,EAAaF,EAASF,EAAcvuE,OACpC4uE,EAAaF,EAASF,EAAcxuE,OAC1C,OAAO2H,KAAKyjC,IAAIujC,GAAchnE,KAAKyjC,IAAIwjC,EAAax3B,KAAKw2B,YACpDx2B,KAAKu2B,YAAchmE,KAAKyjC,IAAIwjC,EACnC,GDT4B,CAC5BlB,UAAW,EACXC,YAAa,GACbC,UAAW,GACXnb,MAAO,MAGF,SAASplD,EAAcyc,EAAsB6C,GAAyB,IAAAkiD,EAAAC,EAAAC,EAC3E,IAAIC,EACAC,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,EAA+B,QAAtBR,EAAGliD,EAAQ2iD,mBAAW,IAAAT,EAAAA,EAAI,EACnCU,EAAoB,CACtB1kE,EAAG,EACHC,EAAG,GAED0kE,EAAiB,CACnB3kE,GAAG,EACHC,GAAG,GAEL,MAAM2kE,EAAoBC,EAAAA,EAAWn0C,MACrC,IAIIo0C,EAJAC,EAAqB,CACvB/kE,EAAG4kE,EAAkBtlE,MAAQ,EAC7BW,EAAG2kE,EAAkBrlE,OAAS,GAGhC,MAAMylE,EAAyB,QAAlBf,EAAGniD,EAAQkjD,eAAO,IAAAf,EAAAA,EAAI,EAC7BgB,EAAyB,QAAlBf,EAAGpiD,EAAQmjD,eAAO,IAAAf,EAAAA,EAAI,EAEnC,SAASzhE,EAAUjB,GACjB,IAAIsgB,EAAQojD,0BACT1jE,EAAE8U,OAAuBnZ,QAAQ2kB,EAAQojD,2BACtC1jE,EAAE8U,OAAuBmO,QAAQ3C,EAAQojD,yBAF/C,CASA,GAFAf,EAAe3iE,EAEA,cAAXA,EAAE2U,MACC2L,EAAQqjD,gBAAkBrjD,EAAQnf,QACrCnB,EAAEyU,iBAGJhJ,SAASqpB,iBAAiB,YAAa8uC,GACvCn4D,SAASqpB,iBAAiB,UAAW5zB,QAChC,GAAe,eAAXlB,EAAE2U,KAAuB,CAGlC,MAAMG,EAAS9U,EAAE8U,OACjBA,EAAOggB,iBAAiB,YAAa8uC,EAAQ,CAAEtR,SAAS,IACxDx9C,EAAOggB,iBAAiB,WAAY5zB,GACpC4T,EAAOggB,iBAAiB,cAAe5zB,GAEnC,YAAalB,SACCpQ,IAAZoQ,EAAEghE,QACJhhE,EAAEghE,MAAQhhE,EAAE6jE,QAAQ,GAAG7C,YAGTpxE,IAAZoQ,EAAEihE,QACJjhE,EAAEihE,MAAQjhE,EAAE6jE,QAAQ,GAAG5C,OAGA,IAArBjhE,EAAE6jE,QAAQlwE,SACZovE,EAAkBjC,EAAY9gE,EAAE6jE,QAAQ,GAAI7jE,EAAE6jE,QAAQ,IACtDN,EAAqBrC,EAAelhE,EAAE6jE,QAAQ,GAAI7jE,EAAE6jE,QAAQ,KAGlE,CAEIvjD,EAAQwjD,YACVr4D,SAASs4D,KAAKxjC,UAAU3qC,IAAI,mBAG1B0qB,EAAQrf,WACVqf,EAAQrf,UAAUjB,EAxCpB,CA0CF,CAEA,SAASkB,EAAUlB,GACb2iE,IACEriD,EAAQwjD,YACVr4D,SAASs4D,KAAKxjC,UAAUC,OAAO,mBAGjC/0B,SAASupB,oBAAoB,UAAW9zB,GACxCuK,SAASupB,oBAAoB,YAAa4uC,GACzCjB,EAAa7tD,OAAuBkgB,oBAAoB,cAAe9zB,GACvEyhE,EAAa7tD,OAAuBkgB,oBAAoB,WAAY9zB,GACpEyhE,EAAa7tD,OAAuBkgB,oBAAoB,YAAa4uC,GAElEv1B,EAAAA,IAAU/tB,EAAQ3C,yBACpBtiB,MAAM2uC,KAAKv+B,SAASwjC,iBAA8B3uB,EAAQ3C,0BACvDxf,SAAS6lE,IACRA,EAAWluE,MAAMmuE,SAAW,EAAE,IAIhCjkE,IACE4iE,EACEtiD,EAAQpf,WACVof,EAAQpf,UAAUlB,GAEA,YAAXA,EAAE2U,OACP2L,EAAQ4jD,eAAiB5/C,KAAKC,MAAQ48C,EAAgB,IACxD7gD,EAAQ4jD,cAAclkE,EAAG,CACvBmkE,QAASxB,EAAc3B,MACvBoD,QAASzB,EAAc1B,SAEhB3gD,EAAQ/tB,SAAc,WAAYyN,GAAmB,IAAbA,EAAEQ,QACnD8f,EAAQ/tB,QAAQyN,GAElBmhE,EAAgB78C,KAAKC,SAK3Bq+C,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,GAAYqB,EAAAA,EAAAA,IAAMrB,EAAWQ,EAASC,GACtCH,OAAmB1zE,EACnBszE,EAAoB,CAClB1kE,EAAG,EACHC,EAAG,GAEL0kE,EAAiB,CACf3kE,GAAG,EACHC,GAAG,GAEL,MAAM6lE,EAAgBjB,EAAAA,EAAWn0C,MACjCq0C,EAAqB,CACnB/kE,EAAG8lE,EAAcxmE,MAAQ,EACzBW,EAAG6lE,EAAcvmE,OAAS,GAE5B4kE,OAAe/yE,CACjB,CAEA,SAASg0E,EAAO5jE,GACd,GAAI2iE,EAAc,CAChB,GAAe,cAAX3iE,EAAE2U,MAAyB,YAAa3U,SAC1BpQ,IAAZoQ,EAAEghE,QACJhhE,EAAEghE,MAAQhhE,EAAE6jE,QAAQ,GAAG7C,YAGTpxE,IAAZoQ,EAAEihE,QACJjhE,EAAEihE,MAAQjhE,EAAE6jE,QAAQ,GAAG5C,OAGrB3gD,EAAQikD,QAAUxB,EAAkB,GAA0B,IAArB/iE,EAAE6jE,QAAQlwE,QAAc,CACnE,MAAM6wE,EAAc1D,EAAY9gE,EAAE6jE,QAAQ,GAAI7jE,EAAE6jE,QAAQ,IAClDY,EAAcvD,EAAelhE,EAAE6jE,QAAQ,GAAI7jE,EAAE6jE,QAAQ,IACrDa,EAAcD,EAAYjmE,EAAI+kE,EAAmB/kE,EACjDmmE,EAAcF,EAAYhmE,EAAI8kE,EAAmB9kE,EACjDmmE,EAAaJ,EAAczB,EACjCziD,EAAQikD,OAAOvkE,EAAG,CAChB4kE,aACAC,eAAgBtB,EAAmB/kE,EACnCsmE,eAAgBvB,EAAmB9kE,EACnCimE,cACAC,cACAI,eAAgBN,EAAYjmE,EAC5BwmE,eAAgBP,EAAYhmE,IAEX,IAAfmmE,IAAkBhC,GAAW,EACnC,CAGF,MAAM8B,EAAc1kE,EAAEghE,MAAS2B,EAAa3B,MACtC2D,EAAc3kE,EAAEihE,MAAS0B,EAAa1B,OAExC3lE,KAAKyjC,IAAI2lC,IAAgBhE,GAAmBplE,KAAKyjC,IAAI4lC,IAAgBjE,KACvEkC,GAAW,GAGb,IAAIqC,GAAsB,EAEtB3kD,EAAQnf,SACVmf,EAAQnf,OAAOnB,EAAG2iE,EAAc,CAC9B+B,cACAC,gBAEFM,GAAsB,GAGpB3kD,EAAQ1C,UAAYilD,IACtBA,EAaN,SAAiB7iE,EAAgC0kE,EAAqBC,GAEpE,GAAIt2B,EAAAA,GAAQ,CACV,MAAM7vC,EAAKwB,EAAqB6jE,QAAQ,GAAG7C,MAC3C,GAAIxiE,GAAKiiE,GAA6BjiE,GAAK6kE,EAAAA,EAAWn0C,MAAMpxB,MAAQ2iE,EAClE,OAAO,CAEX,CAEA,MAAMyE,EAAO5pE,KAAKyjC,IAAI2lC,GAChBS,EAAO7pE,KAAKyjC,IAAI4lC,GAEtB,GAAID,GAAeC,GACHrpE,KAAKiD,IAAI2mE,EAAMC,GAAQ7pE,KAAKC,IAAI2pE,EAAMC,GAExC,EACV,OAAO,EAIX,IAAIC,EAOJ,GANIF,GAAQvE,EACVyE,EAAO,IACED,GAAQxE,IACjByE,EAAO,MAGJA,EACH,OAAO,EAGT,GAAK9B,GAEE,GAAIA,IAAqB8B,EAE9B,OAAO,OAHP9B,EAAmB8B,EAMrB,OAiGJ,SACEplE,EACAqlE,EACAX,EACAC,EACA/mD,GAEA,MAAyB,MAArBynD,EAEOznD,EAAQ5d,EADb0kE,EAAc,EACE5mD,EAAeE,KAEfF,EAAeC,OAEL,MAArBsnD,GAEAznD,EAAQ5d,EADb2kE,EAAc,EACE7mD,EAAe0+C,GAEf1+C,EAAe2+C,KAKvC,CAvHW6I,CAAatlE,EAAGolE,EAAMV,EAAaC,EAAarkD,EAAQ1C,QACjE,CApDkBA,CAAQ5d,EAAG0kE,EAAaC,GACpCM,EAAsBpC,GAGpBx0B,EAAAA,IAAU42B,GAAuB3kD,EAAQ3C,yBAC3CtiB,MAAM2uC,KAAKv+B,SAASwjC,iBAA8B3uB,EAAQ3C,0BACvDxf,SAAS6lE,IACRA,EAAWluE,MAAMmuE,SAAW,QAAQ,GAG5C,CACF,CA2CA,MAAMsB,GAAmB5hE,EAAAA,EAAAA,IAASzC,EAAW2/D,GAA0B,GACjE2E,GAAmB7hE,EAAAA,EAAAA,IAASzC,EAAW0/D,GAA0B,GAEvE,SAAS6E,EAAezlE,GAClB4iE,IACJ3hE,EAAUjB,GACV4iE,GAAW,EACXW,EAAqB,CAAE/kE,EAAGwB,EAAExB,EAAGC,EAAGuB,EAAEvB,GACtC,CA2CA,SAASinE,EAAQ1lE,GACf,IAAKsgB,EAAQikD,SAAWjkD,EAAQnf,OAAQ,OACxC,GAAImf,EAAQojD,0BACT1jE,EAAE8U,OAAuBnZ,QAAQ2kB,EAAQojD,0BACtC1jE,EAAE8U,OAAuBmO,QAAQ3C,EAAQojD,0BAE7C,OAEF1jE,EAAEyU,iBACFzU,EAAEM,kBACF,MAAM,cAAEqlE,EAAgB,GAAMrlD,EAC9B,GAAIA,EAAQ4jD,eAAiB5yE,OAAOs0E,GAAG5lE,EAAEoyD,QAAS,IAAM9gE,OAAOs0E,GAAG5lE,EAAEqyD,QAAS,IAAMryD,EAAEm1B,QAKnF,OAJAswC,EAAezlE,GACfgjE,EAAYA,EAAY,EAAI,EAAI2C,EAChCrlD,EAAQ4jD,cAAclkE,EAAG,CAAEmkE,QAASnkE,EAAEghE,MAAOoD,QAASpkE,EAAEihE,aACxD2B,GAAW,GAGb,MAAMiD,EAAiB7lE,EAAEk1B,SAAWl1B,EAAEm1B,SAAWn1B,EAAE6mC,SAInD,GAHIg/B,GA5DN,SAAqB7lE,GACnB,IAAKsgB,EAAQikD,OAAQ,OACrBkB,EAAezlE,GACf,MAAM0kE,EAAc1kE,EAAExB,EAAI+kE,EAAmB/kE,EACvCmmE,EAAc3kE,EAAEvB,EAAI8kE,EAAmB9kE,EACvCqnE,GAAQzB,EAAAA,EAAAA,IAAMrkE,EAAEqyD,QAAS,GAAI,IACnC2Q,GAAqB,IAAR8C,EACb9C,GAAYqB,EAAAA,EAAAA,IAAMrB,EAAqB,GAAVQ,EAAyB,EAAVC,GAC5CX,GAAY,EACZxiD,EAAQikD,OAAOvkE,EAAG,CAChB+lE,MAAMnzE,EAAAA,EAAAA,IAAMowE,EAAW,GACvB6B,eAAgBtB,EAAmB/kE,EACnCsmE,eAAgBvB,EAAmB9kE,EACnCimE,cACAC,cACAI,eAAgB/kE,EAAExB,EAClBwmE,eAAgBhlE,EAAEvB,IAEpB+mE,EAAiBxlE,EACnB,CA0CIgmE,CAAYhmE,IAET6lE,IAAmB/C,EAAW,CAEjC,MAAMmD,EAAc7E,EAASO,MAAM3hE,IACjB,IAAdgjE,GAAmBiD,IA7C3B,SAAqBjmE,GACnB,IAAKsgB,EAAQnf,OAAQ,OACrBskE,EAAezlE,GAEVmjE,EAAe3kE,GAAKlD,KAAK4qE,KAAKhD,EAAkB1kE,KAAOlD,KAAK4qE,KAAKlmE,EAAEoyD,UACtE8Q,EAAkB1kE,GAAKwB,EAAEoyD,QAEtB+Q,EAAe1kE,GAAKnD,KAAK4qE,KAAKhD,EAAkBzkE,KAAOnD,KAAK4qE,KAAKlmE,EAAEqyD,UACtE6Q,EAAkBzkE,GAAKuB,EAAEqyD,QAE3B,MAAM,EAAE7zD,EAAC,EAAEC,GAAMykE,EACjB5iD,EAAQnf,OAAOnB,EAAG2iE,EAAe,CAC/B+B,YAAalmE,EACbmmE,YAAalmE,IACZ,CAAC0nE,EAAIC,KACNjD,EAAiB,CAAE3kE,EAAG2nE,EAAI1nE,EAAG2nE,EAAI,IAEnCb,EAAiBvlE,EACnB,CA4BMqmE,CAAYrmE,EAEhB,CACF,CAMA,OAJAyd,EAAQqX,iBAAiB,QAAS4wC,GAClCjoD,EAAQqX,iBAAiB,YAAa7zB,GACtCwc,EAAQqX,iBAAiB,aAAc7zB,EAAW,CAAEqxD,SAAUhyC,EAAQgmD,eAE/D,KACLplE,IACAuc,EAAQuX,oBAAoB,QAAS0wC,GACrCjoD,EAAQuX,oBAAoB,aAAc/zB,GAC1Cwc,EAAQuX,oBAAoB,YAAa/zB,EAAU,CAEvD,C,yGEzZO,SAASslE,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAMpmB,UAAU,EAAG,GAAI,IAChCqmB,SAASD,EAAMpmB,UAAU,EAAG,GAAI,IAChCqmB,SAASD,EAAMpmB,UAAU,EAAG,GAAI,IAEpC,CAOO,SAASsmB,EAAQF,GACtB,MAAMG,EAAKH,EAAM,GAAG9yB,SAAS,IACvBkzB,EAAKJ,EAAM,GAAG9yB,SAAS,IACvBmzB,EAAKL,EAAM,GAAG9yB,SAAS,IAC7B,OAAqB,GAAbizB,EAAGhzE,OAAc,IAAMgzE,EAAKA,IAAoB,GAAbC,EAAGjzE,OAAc,IAAMizE,EAAKA,IAAoB,GAAbC,EAAGlzE,OAAc,IAAMkzE,EAAKA,EAC5G,CAaO,SAASC,EAAO32E,GAAgE,IAA9DogD,EAAGC,EAAG55B,GAA4BzmB,EACzDogD,GAAK,IACLC,GAAK,IACL55B,GAAK,IAEL,IACI6oD,EAAY93D,EADZpJ,EAAMjD,KAAKiD,IAAIgyC,EAAGC,EAAG55B,GAAIrb,EAAMD,KAAKC,IAAIg1C,EAAGC,EAAG55B,GACvBmwD,EAAYxoE,EAEnCyoE,EAAIzoE,EAAMhD,EAGd,GAFAoM,EAAW,GAAPpJ,EAAW,EAAIyoE,EAAIzoE,EAEnBA,GAAOhD,EACTkkE,EAAI,MACC,CACL,OAAQlhE,GACN,KAAKgyC,EACHkvB,GAAKjvB,EAAI55B,GAAKowD,GAAKx2B,EAAI55B,EAAI,EAAI,GAC/B,MACF,KAAK45B,EACHivB,GAAK7oD,EAAI25B,GAAKy2B,EAAI,EAClB,MACF,KAAKpwD,EACH6oD,GAAKlvB,EAAIC,GAAKw2B,EAAI,EAItBvH,GAAK,CACP,CAEA,MAAO,CAACA,EAAG93D,EAAGo/D,EAChB,CAaO,SAASE,EAAOv1E,GAAgE,IACjF6+C,EAAYC,EAAY55B,GADL6oD,EAAG93D,EAAGo/D,GAA4Br1E,EAGrDgC,EAAI4H,KAAKkB,MAAU,EAAJijE,GACfyH,EAAQ,EAAJzH,EAAQ/rE,EACZyoD,EAAI4qB,GAAK,EAAIp/D,GACbw/D,EAAIJ,GAAK,EAAIG,EAAIv/D,GACjBmzD,EAAIiM,GAAK,GAAK,EAAIG,GAAKv/D,GAE3B,OAAQjU,EAAI,GACV,KAAK,EACH68C,EAAIw2B,EACJv2B,EAAIsqB,EACJlkD,EAAIulC,EACJ,MACF,KAAK,EACH5L,EAAI42B,EACJ32B,EAAIu2B,EACJnwD,EAAIulC,EACJ,MACF,KAAK,EACH5L,EAAI4L,EACJ3L,EAAIu2B,EACJnwD,EAAIkkD,EACJ,MACF,KAAK,EACHvqB,EAAI4L,EACJ3L,EAAI22B,EACJvwD,EAAImwD,EACJ,MACF,KAAK,EACHx2B,EAAIuqB,EACJtqB,EAAI2L,EACJvlC,EAAImwD,EACJ,MACF,KAAK,EACHx2B,EAAIw2B,EACJv2B,EAAI2L,EACJvlC,EAAIuwD,EAIR,MAAO,CACL7rE,KAAK1I,MAAU,IAAJ29C,GACXj1C,KAAK1I,MAAU,IAAJ49C,GACXl1C,KAAK1I,MAAU,IAAJgkB,GAEf,CAEO6yB,eAAe29B,EAAgB/gD,GAEpC,MACMghD,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIpsE,EACA6C,EACAC,EAEApK,EADAD,GAAK,EAEL4zE,EAAgC,CAAC,EAAG,EAAG,GACvCvnB,EAAQ,EAEZ,MAAMriD,EAAS+N,SAASpZ,cAAc,UAChCk1E,EAAU7pE,EAAOO,YAAcP,EAAOO,WAAW,MACvD,IAAKspE,EACH,OAAOF,EAGT,MAAMG,QAAcC,EAAAA,EAAAA,IAAaphD,GACjCtoB,EAASypE,EAAME,eAAiBF,EAAMxL,cAAgBwL,EAAMzpE,OAC5DD,EAAQ0pE,EAAMG,cAAgBH,EAAM3oC,aAAe2oC,EAAM1pE,MACzDJ,EAAOK,OAASA,EAChBL,EAAOI,MAAQA,EAEfypE,EAAQza,UAAU0a,EAAO,EAAG,GAE5B,IACEvsE,EAAOssE,EAAQK,aAAa,EAAG,EAAG9pE,EAAOC,EAC3C,CAAE,MAAOiC,GACP,OAAOqnE,CACT,CAKA,IAHA1zE,EAASsH,EAAKA,KAAKtH,QAGXD,GAAKm0E,IAAiBl0E,GACH,IAArBsH,EAAKA,KAAKvH,EAAI,OAChBqsD,EACFunB,EAAI,IAAMrsE,EAAKA,KAAKvH,GACpB4zE,EAAI,IAAMrsE,EAAKA,KAAKvH,EAAI,GACxB4zE,EAAI,IAAMrsE,EAAKA,KAAKvH,EAAI,IAO1B,OAJA4zE,EAAI,GAAKhsE,KAAKkB,MAAM8qE,EAAI,GAAKvnB,GAC7BunB,EAAI,GAAKhsE,KAAKkB,MAAM8qE,EAAI,GAAKvnB,GAC7BunB,EAAI,GAAKhsE,KAAKkB,MAAM8qE,EAAI,GAAKvnB,GAEtBunB,CACT,CAEO,SAASQ,EAAaC,GAC3B,MAAOx3B,EAAGC,EAAG55B,GAAKmxD,EAElB,MADa,MAASx3B,EAAI,MAASC,EAAI,MAAS55B,CAElD,CAGO,SAASoxD,EAAgBD,GAC9B,IAAKE,EAAKC,EAAY/qE,GAAS2pE,EAAQiB,GAOvC,OALAG,EAAa5sE,KAAKC,IAAI,EAAG2sE,EAAa,IAAO,IAAO,EAAIA,IACxD/qE,EAAQA,EAAQ,GACZ7B,KAAKiD,IAAI,EAAW,IAARpB,GACZ7B,KAAKiD,IAAI,EAAGjD,KAAKC,IAAI,EAAG,EAAY,IAAR4B,IAExB,QAAa,IAAN8qE,MAA2B,IAAbC,OAA8B,IAAR/qE,SACrD,C,iBC3Me,SAASgrE,EAAcx0E,EAAgBosE,GACpD,OAAOA,EAAQzkE,KAAKkB,MAAMujE,EAAQpsE,GAAUA,CAC9C,C,iECMA,MAAMy0E,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASniD,EAAaoiD,GAC5CH,EAAiB10E,KAAK,CAAEyyB,MAAKoiD,aACxBF,IACHA,GAAU,EACVryD,YAAWuzB,gBAOfA,iBACE,IAAIsW,EAAQ,EACZ,IAAK,MAAM2oB,KAAmBJ,EAC5BK,EAAYD,GACZ3oB,IACIA,IAAUqoB,UACN78B,EAAAA,EAAAA,IAAM88B,GACZtoB,EAAQ,GAGZuoB,EAAmB,EACrB,CAjBYM,GACNL,GAAU,CAAK,GACdF,GAEP,CAeA,SAASM,EAAWx4E,GAAqC,IAApC,IAAEk2B,EAAG,SAAEoiD,GAA2Bt4E,EACrD,MAAMqW,EAAOiF,SAASpZ,cAAc,KACpCmU,EAAKuB,KAAOse,EACZ7f,EAAKgiE,SAAWC,EAChB,IACEjiE,EAAKqiE,OACP,CAAE,MAAOC,GAEPC,QAAQ/1D,MAAM81D,EAChB,CACF,C,gDC9Ce,SAASh2B,EAAqBr1B,EAAsBurD,EAAiBC,GAClF,IAAKD,GAASvrD,IAAYhS,SAASssC,cACjC,OAGF,MAAM/E,EAAY18C,OAAO28C,eACnB+e,EAAQvmD,SAASy9D,cACjBC,EAAY1rD,EAAQ0rD,WAAa1rD,EAElCtJ,EAAAA,IAAiB80D,GAA0BE,GAAcA,EAAUC,WAKxEpX,EAAMqX,mBAAmBJ,EAAuBxrD,EAAU0rD,GAE1DnX,EAAMsX,UAAS,GACft2B,EAAUE,kBACVF,EAAU+G,SAASiY,IARjBv0C,EAAQrJ,OASZ,C,kDCnBA,MAAMm1D,EAAe,EAEN,SAASC,IACtB,MAAMx2B,EAAY18C,OAAO28C,eACzB,IAAIw2B,EAAoBz2B,GAAWM,WAAaN,EAAUQ,WAAW,GAAG4G,qBAAkBxqD,EAE1F,MAAM85E,EAA2B12B,GAAW22B,WAAa32B,EAAU42B,YAAc,GAC5EC,EAAuB72B,EAAU22B,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAMxqD,EAAalkB,MAAM2uC,KAAKy/B,EAAkBO,UAC7C7oC,QAAO,CAACrkC,EAAQmtE,IACXA,EAAKC,WAAaX,GAAgBU,EAAK1pC,UAAU4pC,SAAS,sBACrD9uE,MAAM2uC,KAAKigC,EAAKh7B,iBAAiB,aACrC9N,QAAO,CAAC9X,EAAK+gD,IAAc/gD,EAAI0gB,OAAOpU,OAAQy0C,EAA0Bl7B,QAAQtuC,aAAa9D,GACvFmtE,EAAKC,WAAaX,GAAgBU,EAAK1pC,UAAU4pC,SAAS,WAC5DrtE,EAAOitC,OAAOpU,OAAQs0C,EAAqB/6B,QAAQtuC,YAGrD9D,GACN,IAGL,KAAO2sE,EAAkBY,YACvBZ,EAAkBa,YAAYb,EAAkBY,YAQlD,OANAZ,OAAoB75E,EAEf85E,GACHnqD,EAAW65C,MAGN75C,CACT,CAEA,SAASsqD,EAAuBpsD,EAAertB,GAC7C,QAAIqtB,EAAQysD,WAAaX,IAAiB9rD,EAAwB8iB,UAAU4pC,SAAS/5E,OAI9EqtB,EAAQwgC,YAAa4rB,EAAuBpsD,EAAQwgC,WAAY7tD,EACzE,C,kDC3CO,SAASm6E,EAAoBjwB,GAClC,GAAyB,SAArBA,EAAGxkD,MAAM00E,QACX,OAAO,EAGT,MAAMr4D,EAAOmoC,EAAGp6C,yBACRnC,OAAQ0sE,GAAiBpH,EAAAA,EAAWn0C,MAE5C,OAAQ/c,EAAKG,KAAOm4D,GAAmBt4D,EAAKG,IAAMH,EAAKpU,QAAW,CACpE,C,gFCaA,MAAM2sE,EAAmB,CACvBt/B,UAAMx7C,EACN27C,WAAO37C,EACPg7D,kBAAch7D,EACdm7D,iBAAan7D,EACbu7D,mBAAev7D,EACfs7D,eAAWt7D,EACX86D,UAAM96D,EACNo7D,YAAQp7D,GAGH,SAAS06D,EAAqBhB,EAA0BD,GAC7D,MAAM,aAAEshB,GAAiBr0E,OAAOs0E,UAC5BD,GACErhB,GAAUsC,EAAetC,GACzBD,GAAUwhB,EAAwBxhB,IAGtC0f,QAAQ+B,KAAK,iDAEjB,CAEO,SAASlf,EAAetC,GAC7B,MAAM,aAAEqhB,GAAiBr0E,OAAOs0E,UAC5BD,IAEFA,EAAarhB,SAAWA,QAAAA,EAAY,KAExC,CAEO,SAASuhB,EAAwBxhB,GACtC,MAAM,aAAEshB,GAAiBr0E,OAAOs0E,UAC5BD,GACFr5E,OAAO8rD,QAAQ,IAAKstB,KAAqBrhB,IAAYlrD,SAAQhO,IAAoB,IAAlBuC,EAAKggC,GAAQviC,EAC1E,IAEEw6E,EAAaI,iBAAiBr4E,EAAKggC,EACrC,CAAE,MAAOo2C,GACP,IAIR,CAEO,SAASkC,IACd,MAAM,aAAEL,GAAiBr0E,OAAOs0E,UAC5BD,IAEFA,EAAarhB,SAAW,KACxBuhB,EAAwBH,GACpBC,EAAaM,gBAAeN,EAAaM,cAAgB,QAC7DN,EAAahf,qBAEjB,CAEO,SAASN,IAAgE,IAA/Cp8B,EAAoCn0B,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,OACtE,MAAM,aAAE6vE,GAAiBr0E,OAAOs0E,UAC5BD,GAAgBA,EAAaM,gBAC/BN,EAAaM,cAAgBh8C,EAEjC,CAEO,SAAS08B,EAAiB18B,GAC/B,IAAKA,QAA4Br/B,IAAnBq/B,EAAMyG,eAA6C9lC,IAAnBq/B,EAAM30B,SAAwB,OAC5E20B,EAAMyG,SAAWp6B,KAAKC,IAAI0zB,EAAMyG,SAAUzG,EAAM30B,UAEhD,MAAM,aAAEqwE,GAAiBr0E,OAAOs0E,UAChCD,GAAchf,mBAAmB18B,EACnC,CAEO,SAASi8C,EAAkBx5E,GAEN,IAFO,MACjCoP,EAAK,OAAEqqE,EAAM,MAAEC,EAAK,QAAEC,GACE35E,EACxB,GAAI,kBAAmB4E,OACrB,OAAO,IAAIA,OAAOg1E,cAAc,CAC9BxqE,QACAqqE,SACAC,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAASzqB,EAAgC0qB,GACtD,OAAO,WACL,MAAMC,EAASH,EAAMr8C,IAAIu8C,GAAI,QAAAnT,EAAAx9D,UAAAnH,OADpB4kE,EAAI,IAAAl9D,MAAAi9D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA19D,UAAA09D,GAEb,GAAIkT,IAAUC,EAAAA,EAAAA,IAAqBD,EAAOE,SAAUrT,GAClD,OAAOmT,EAAOG,WAGhB,MAAM/uE,EAAS2uE,KAAMlT,GAErB,OADAgT,EAAMj8C,IAAIm8C,EAAI,CAAEG,SAAUrT,EAAMsT,WAAY/uE,IACrCA,CACT,CACF,C,kDChBA,MAEMgvE,EAAgB,IAAIztB,OAAQ,OAAMC,EAAAA,EAAaC,YAAa,IAwClE,EAtC8B1rD,IAC5B,MAAMk5E,EAAQl5E,EAAK6U,MAAM,MACnBskE,EAAsBD,EAAM3pE,KAAK,IACvC,GAAI4pE,EAAoBr4E,OANPs4E,IAOf,OAAO,EAIT,IADoBn8E,QAAQk8E,EAAoBz2C,MAAMu2C,IAEpD,OAAO,EAET,MAAMI,EAAeH,EAAMt6E,KAAK06E,IAC9B,IAAIC,EAAa,EACjB,KAAO9tB,EAAAA,EAAajM,KAAK85B,IAGvB,GAFAC,IAEIA,EApBW,IAsBb,OADA9tB,EAAAA,EAAa+tB,UAAY,GACjB,EAIZ,OAAOD,CAAU,IAGnB,IAAI7tE,EAAMwtE,EAAMp4E,OAChB,IAAK,IAAID,EAAI,EAAGA,EAAIw4E,EAAav4E,OAAQD,IAAK,CAC5C,IAAyB,IAArBw4E,EAAax4E,GACf,OAAO,EAELw4E,EAAax4E,GAAK6K,IACpBA,EAAM2tE,EAAax4E,GAEvB,CAEA,OAAO6K,CAAG,C,wFCpCL,MAAM+tE,EAAmE,CAC9El0B,EAAGrwB,EAAAA,GAAsBwkD,KACzBl0B,OAAQtwB,EAAAA,GAAsBwkD,KAC9Bj0B,EAAGvwB,EAAAA,GAAsBykD,OACzBj0B,GAAIxwB,EAAAA,GAAsBykD,OAC1BC,IAAK1kD,EAAAA,GAAsB2kD,UAC3Bl0B,EAAGzwB,EAAAA,GAAsB2kD,UACzBC,EAAG5kD,EAAAA,GAAsB6kD,OACzBC,OAAQ9kD,EAAAA,GAAsB6kD,OAC9Bn0B,IAAK1wB,EAAAA,GAAsB6kD,OAC3Bl0B,KAAM3wB,EAAAA,GAAsB+kD,KAC5BC,IAAKhlD,EAAAA,GAAsBilD,IAC3BC,WAAYllD,EAAAA,GAAsBmlD,YAG9BC,EAAmB,EAEV,SAASC,EACtB16B,GACkB,IADJ26B,EAAiBvyE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAAUwyE,EAAYxyE,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GAErD,MAAMyyE,EAAW9hE,SAASpZ,cAAc,OACxCk7E,EAAS56B,UAAY26B,EAAe56B,EAmDtC,SAAuBA,GACrB,IAAI86B,EAAa96B,EAAKlhD,MAAM,GAsD5B,OAnDAg8E,EAAaA,EAAWznD,QAAQ,UAAW,KAG3CynD,EAAaA,EAAWznD,QAAQ,4BAA6B,MAE7DynD,EAAaA,EAAWznD,QAAQ,gBAAiB,MAGjDynD,EAAaA,EAAWznD,QAAQ,qBAAsB,MACtDynD,EAAaA,EAAWznD,QAAQ,SAAU,MAC1CynD,EAAaA,EAAWznD,QAAQ,WAAY,IAG5CynD,EAAaA,EAAWznD,QAAQ,sCAAuC,oCACvEynD,EAAaA,EAAWznD,QAAQ,kCAAmC,iBACnEynD,EAAaA,EAAWznD,QAAQ,uBAAwB,iBAGxDynD,EAAaA,EAAWznD,QACtB,wEACA,mBAIGsvB,EAAAA,KAEHm4B,EAAaA,EAAWznD,QAAQ,oCAAqC,SAEvEynD,EAAaA,EAAWznD,QACtB,0FACA,wCAIFynD,EAAaA,EAAWznD,QACtB,wEACA,aAEFynD,EAAaA,EAAWznD,QACtB,wEACA,aAEFynD,EAAaA,EAAWznD,QACtB,wEACA,aAEFynD,EAAaA,EAAWznD,QACtB,wEACC,2BAA0BgC,EAAAA,GAAsBC,sBAG5CwlD,CACT,CA1G0BC,CAApBJ,EA4GN,SAA4B36B,GAC1B,OAAOA,EAAK3sB,QAAQ,IAAIs4B,OAAQ,qBAAoBqvB,EAAAA,YAA0B,MAAM,CAACvvD,EAAGtrB,EAAM2T,IAEpF,YADIA,EAAK+P,SAAS,OAAS/P,EAAOA,EAAK+P,SAAS,KAAQ,UAAS/P,IAAU,UAASA,QACjE3T,SAE/B,CAjHwC86E,CAAmBj7B,GAAuBA,GAChFk7B,EAAgBL,GAChB,MAAM16E,EAAO06E,EAASM,UAAU7nD,OAAOD,QAAQ,WAAY,IAE3D,IAAI+nD,GADcP,EAASM,UAAU32D,QAAQrkB,EAAK,IAE9Ck7E,EAAoB,EACxB,MAAMvmD,EAA+B,GAErC,SAASwmD,EAAU/D,GACjB,GAAIA,EAAKC,WAAa+D,KAAKC,aAAc,OACzC,MAAM,MAAEnO,EAAK,OAAE/4D,GAyGnB,SACEijE,EACAkE,EACAL,GAEA,MAAMn5D,EAyER,SAA+Bs1D,GAC7B,GAAIA,aAAgBvX,aAAeuX,EAAK/6B,QAAQiM,WAC9C,OAAO8uB,EAAK/6B,QAAQiM,WAGtB,GAAImxB,EAA0BrC,EAAKmE,UACjC,OAAO9B,EAA0BrC,EAAKmE,UAGxC,GAAsB,MAAlBnE,EAAKmE,SAAkB,CACzB,MAAMnmC,EAASgiC,EACf,OAAIhiC,EAAOiH,QAAQiM,aAAepzB,EAAAA,GAAsBu9B,YAC/Cv9B,EAAAA,GAAsBu9B,YAE3Brd,EAAOiH,QAAQiM,aAAepzB,EAAAA,GAAsBsmD,IAC/CtmD,EAAAA,GAAsBsmD,IAE3BpmC,EAAOlgC,KAAKstB,WAAW,WAClBtN,EAAAA,GAAsBumD,MAE3BrmC,EAAOlgC,KAAKstB,WAAW,QAClBtN,EAAAA,GAAsBwmD,MAE3BtmC,EAAOlgC,OAASkgC,EAAOmN,YAClBrtB,EAAAA,GAAsBymD,QAGxBzmD,EAAAA,GAAsBsmD,GAC/B,CAEA,MAAsB,SAAlBpE,EAAKmE,SACCnE,EAAqB/6B,QAAQiM,WAGjB,QAAlB8uB,EAAKmE,UACFnE,EAA0B/6B,QAAQ/vB,WAC9B4I,EAAAA,GAAsB7I,iBAFjC,CAOF,CAlHeuvD,CAAsBxE,GAEnC,IAAKt1D,IAASs1D,EAAK70B,YACjB,MAAO,CACL2qB,MAAO+N,EACP9mE,YAAQpX,GAIZ,MAAM8+E,EAAWP,EAAQj3D,QAAQ+yD,EAAK70B,YAAa04B,GAG7C/N,EAAQ2O,GAAY,EAAIA,EAAWZ,EACnCvR,EAAS4R,EAAQ/tB,UAAU,EAAG2f,GAAOpsE,QACrC,OAAEA,GAAWw6E,EAAQ/tB,UAAU2f,EAAOA,EAAQkK,EAAK70B,YAAYzhD,QAErE,OAAIghB,IAASoT,EAAAA,GAAsBymD,QAC1B,CACLzO,QACA/4D,OAAQ,CACN2N,OACA4nD,SACA5oE,SACA0yB,IAAM4jD,EAA2BliE,OAInC4M,IAASoT,EAAAA,GAAsBu9B,YAC1B,CACLya,QACA/4D,OAAQ,CACN2N,OACA4nD,SACA5oE,SACAiS,OAASqkE,EAA2B/6B,QAAQtpC,SAK9C+O,IAASoT,EAAAA,GAAsBilD,IAC1B,CACLjN,QACA/4D,OAAQ,CACN2N,OACA4nD,SACA5oE,SACAiuC,SAAWqoC,EAAwB/6B,QAAQtN,WAK7CjtB,IAASoT,EAAAA,GAAsB7I,YAC1B,CACL6gD,QACA/4D,OAAQ,CACN2N,OACA4nD,SACA5oE,SACAwrB,WAAa8qD,EAA0B/6B,QAAQ/vB,aAK9C,CACL4gD,QACA/4D,OAAQ,CACN2N,OACA4nD,SACA5oE,UAGN,CArL8Bg7E,CAAsB1E,EAAMp3E,EAAMi7E,GAE5D,GAAI9mE,EACF8mE,EAAY/N,EACZv4C,EAAS5zB,KAAKoT,QACT,GAAIijE,EAAK70B,YAAa,CAE3B,GAAc,IAAV2qB,GAA2C,KAA5BkK,EAAK70B,YAAYpvB,OAClC,OAEF8nD,GAAa7D,EAAK70B,YAAYzhD,MAChC,CAEIs2E,EAAK2E,iBAAmBb,GAAqBZ,IAC/CY,GAAqB,EACrB1yE,MAAM2uC,KAAKigC,EAAK4E,YAAY1wE,QAAQ6vE,GAExC,CAOA,OALA3yE,MAAM2uC,KAAKujC,EAASsB,YAAY1wE,SAAS8rE,IACvC8D,EAAoB,EACpBC,EAAU/D,EAAK,IAGV,CACLp3E,OACA20B,SAAUA,EAAS7zB,OAAS6zB,OAAW53B,EAE3C,CAEO,SAASg+E,EAAgBL,GAC9BA,EAASt+B,iBAAiB,OAAO9wC,SAAS8rE,IACpCA,EAAK/6B,QAAQ/vB,WACf8qD,EAAK70B,YAAe60B,EAA0Bh8D,KAAO,GAErDg8D,EAAK1vB,YAAY0vB,EAAKh8D,KAAO,GAC/B,GAEJ,C,wEC3EA,MAAM6gE,EAAcrjE,SAASpZ,cAAc,OAEpC,SAAS08E,EAAsBr8B,GACpC,MAAMM,EAAY18C,OAAO28C,eAEzB,GAAID,GAAWQ,YAAcR,EAAUM,WAAY,CACjD,MAAM0e,EAAQhf,EAAUQ,WAAW,GACnCwe,EAAMgd,iBAEN,MAAMzB,EAAWvb,EAAMid,yBAAyBv8B,GAC1Cw8B,EAAmB3B,EAASpE,UAClCnX,EAAMmd,WAAW5B,GACb2B,GACFld,EAAMod,cAAcF,GACpBld,EAAMqd,YAAYH,IAElBld,EAAMsX,UAAS,GAEjBt2B,EAAUE,kBACVF,EAAU+G,SAASiY,EACrB,CACF,CAEO,SAAS1S,EAAuBzU,EAAyBykC,GAC9D,IAAKzkC,EACH,MAAO,GAGT,MAAM0kC,EAAMj5E,OAAO28C,eACnB,IAAKs8B,IAAQA,EAAIj8B,WACf,OAAOzI,EAAU8H,UAGnB,MAAMqf,EAAQud,EAAI/7B,WAAW,GAAGg8B,aAChC,OAAKxd,EAAMyd,eAAe5kC,GAIrBykC,GAAsBzkC,EAAUs/B,SAASnY,EAAMpY,0BAIpDoY,EAAMsX,UAAS,GACftX,EAAM0d,SAAS7kC,EAAW,GAE1BikC,EAAYn8B,UAAY,GACxBm8B,EAAY5jC,YAAY8mB,EAAM5X,iBAEvB00B,EAAYn8B,WATV,GAJA9H,EAAU8H,SAcrB,CAGO,SAASiT,EAAiBnoC,GAC/B,IAAIkoC,EAAgB,EACpB,MAAM3S,EAAY18C,OAAO28C,eACzB,IAAKD,GAAsC,IAAzBA,EAAUM,WAC1B,OAAOqS,EAGT,MAAMqM,EAAQhf,EAAUQ,WAAW,GAC7Bm8B,EAAa3d,EAAMwd,aAKzB,OAJAG,EAAWtG,mBAAmB5rD,GAC9BkyD,EAAWC,OAAO5d,EAAM6d,aAAc7d,EAAM8d,WAC5CnqB,EAAgBgqB,EAAWj8B,WAAW//C,OAE/BgyD,CACT,CAGO,SAASG,EAAiBroC,EAAeiY,GAC9C,IAAK,MAAMu0C,KAAQxsD,EAAQoxD,WACzB,GAAI5E,EAAKC,WAAa+D,KAAK8B,UAAW,CACpC,GAAK9F,EAAct2E,QAAU+hC,EAAU,CACrC,MAAMs8B,EAAQvmD,SAASy9D,cACjBl2B,EAAY18C,OAAO28C,eAMzB,OALA+e,EAAM0d,SAASzF,EAAMv0C,GACrBs8B,EAAMsX,UAAS,GACft2B,EAAUE,kBACVF,EAAU+G,SAASiY,IAEX,CACV,CACEt8B,GAAY,WAAYu0C,EAAOA,EAAKt2E,OAAmB,CAE3D,MAEE,IAAkB,KADlB+hC,EAAWowB,EAAiBmkB,EAAMv0C,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASs6C,IACd,MAAMh9B,EAAY18C,OAAO28C,eACzBD,GAAWE,iBACb,C,kBClGA,IAAI+8B,EAEG,SAASC,IAAsF,IAAhEC,EAAMr1E,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,GAAAA,UAAA,GAAG,IAAKo9D,EAA4Bp9D,UAAAnH,OAAA,EAAAmH,UAAA,QAAAlL,EAAEwgF,EAAUt1E,UAAAnH,OAAA,QAAA/D,IAAAkL,UAAA,IAAAA,UAAA,GACrFm1E,IACHA,EAAexkE,SAASpZ,cAAc,SACtC49E,EAAax9D,aAAa,OAAQ,SAGpCw9D,EAAax9D,aAAa,SAAU09D,GAEhCC,EACFH,EAAaI,gBAAgB,YAE7BJ,EAAax9D,aAAa,WAAY,YAIxCw9D,EAAaK,SAAW,KACxBL,EAAa9yE,MAAQ,GACrB8yE,EAAaK,SAAWpY,EAExB+X,EAAapH,OACf,C","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { AvatarSize } from './Avatar';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: (ApiUser | ApiChat)[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, {\n  useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleClickPremium = useLastCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const {\n    openStickerSet,\n    openPremiumModal,\n    setEmojiStatus,\n    showNotification,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    if (isCurrentUserPremium) {\n      onClick?.(clickArg);\n    } else {\n      showNotification({\n        message: 'Subscribe to ** Telegram Premium ** to unlock this emoji.',\n      });\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './MuteChatModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { Signal } from '../../../util/signals';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { getGlobal } from '../global';\nimport { createSignal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\nimport { addCallback } from '../lib/teact/teactn';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    // const actionHide = {\n    //   title: lang('lng_context_archive_to_menu'),\n    //   icon: 'archive-to-main',\n    //   handler: () => {\n    //     updateArchiveSettings({ isHidden: true });\n    //   },\n    // };\n\n    return compact([actionMinimize, actionExpand]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n        'padding-top-56px',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_APP } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\nimport { handleScrollUnactiveTab } from '../../../util/tlCustomFunction';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  activeChatFolder?: number;\n  allowAbsoluteHeader?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\nconst HEIGHT_HEADER_FIXED = 56;\nlet isScrolling: any;\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  allowAbsoluteHeader = false,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const firstScroll = useRef<any>(true);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n  const isExpandHeader = sessionStorage.getItem('isExpandHeader');\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-null/no-null\n    if (containerRef.current) {\n      setTimeout(() => {\n        if (folderType === 'archived') {\n          containerRef.current?.scrollTo({ top: 0 });\n        }\n      }, 500);\n    }\n  }, [containerRef, isExpandHeader, folderType]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    getGlobal().isArchivePrevious = true;\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    /**\n     * TL - This function scroll the header whenever the chatList render.\n     */\n    setTimeout(() => {\n      if (containerRef.current && firstScroll.current && allowAbsoluteHeader) {\n        const tlChatFolderEl = document.getElementById('tl-chat-folders');\n        if (tlChatFolderEl) {\n          tlChatFolderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        } else {\n          // eslint-disable-next-line max-len\n          const chatListActiveEl: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active')\n            ?? document.getElementById('custom-id-chat-list-inf-scroll');\n          if (chatListActiveEl) {\n            chatListActiveEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n          }\n        }\n        const leftMainHeaderEl = document.getElementById('left-main-header');\n        if (leftMainHeaderEl) {\n          leftMainHeaderEl.style.paddingTop = `${(window as any).tlPaddingTop}px`;\n        }\n        setTimeout(() => {\n          if (containerRef.current) {\n            containerRef.current.scrollTo({ top: HEIGHT_HEADER_FIXED });\n            setTimeout(() => {\n              firstScroll.current = false;\n            }, 200);\n          }\n        }, 0);\n      }\n    }, 0);\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX\n        + (allowAbsoluteHeader ? HEIGHT_HEADER_FIXED : 0);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  /**\n   * TL - Custom functions for chatList scroll\n   * Description: This function is used to trigger the header show or hide with an animation\n   */\n  function handleScroll(event: React.UIEvent<HTMLDivElement, UIEvent>) {\n    /**\n     * This condition is used to expand the header of inactived tab folder. When we interact with first tab.\n     */\n    if (firstScroll.current) {\n      handleScrollUnactiveTab();\n      return;\n    }\n    clearTimeout(isScrolling);\n    const doc = document.documentElement;\n    const scrollTop = event.currentTarget.scrollTop;\n    const scrollPercentRounded = Math.min(\n      100,\n      Math.round((scrollTop / HEIGHT_HEADER_FIXED) * 100),\n    );\n    const opacity = 1 - scrollPercentRounded * 0.01;\n    const opacityOffset = scrollTop >= HEIGHT_HEADER_FIXED + 10 || scrollPercentRounded === 100\n      ? 0\n      : opacity;\n\n    const translatePixel = scrollTop >= HEIGHT_HEADER_FIXED || scrollPercentRounded === 100 ? 0 : Math.min(\n      HEIGHT_HEADER_FIXED,\n      ((100 - scrollPercentRounded) * HEIGHT_HEADER_FIXED) / 100,\n    );\n    const tabFolderTranslatePixel = translatePixel;\n    doc.style.setProperty('--disable-tab-click', 'none');\n    isScrolling = setTimeout(() => {\n      doc.style.setProperty('--disable-tab-click', 'auto');\n    }, 150);\n    sessionStorage.setItem('isExpandHeader', opacityOffset === 1 ? 'true' : 'false');\n    doc.style.setProperty('--header-translate', `-${scrollPercentRounded}%`);\n    doc.style.setProperty(\n      '--tab-folder-translate',\n      `${tabFolderTranslatePixel}px`,\n    );\n    doc.style.setProperty('--show-header-opacity', `${opacityOffset}`);\n  }\n\n  return (\n    <InfiniteScroll\n      id=\"custom-id-chat-list-inf-scroll\"\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + HEIGHT_HEADER_FIXED}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n      // eslint-disable-next-line react/jsx-no-bind\n      onScroll={handleScroll}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     openChatInNewTab({ chatId: chat.id, threadId: topicId });\n    //   },\n    // };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport useLang from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiMessage, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isUserId(chatId) ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\nimport useLastCallback from './useLastCallback';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    // const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n    //   title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n    //   icon: 'open-in-new-tab',\n    //   handler: () => {\n    //     openChatInNewTab({ chatId: chat.id });\n    //   },\n    // };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder, actionMute]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      // actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useLayoutEffect, useState, useEffect } from '../lib/teact/teact';\nimport { IS_IOS } from '../util/windowEnvironment';\n\nimport { ElectronEvent } from '../types/electron';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\n\nimport useLastCallback from './useLastCallback';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_DOWNLOADED = 'update-downloaded',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","setTimeout","lockedSelectedIds","unlockedSelectedIds","MEMO_EMPTY_ARRAY","unlockedIds","includes","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","items","renderCheckbox","Checkbox","allowDisabledClick","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","isPrivate","mediaViewer","currentTopicId","userFullInfo","chatFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","onEmojiStatusClick","canCopyTitle","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","CustomEmoji","documentId","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isCurrentUserPremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatus","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","noFastClick","Menu","autoClose","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","Extra","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","useDerivedState","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","get","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","RESERVED_HOTKEYS","HEIGHT_HEADER_FIXED","isScrolling","canDisplayArchive","onLeftColumnContentChange","allowAbsoluteHeader","openNextChat","shouldIgnoreDragRef","firstScroll","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","isExpandHeader","sessionStorage","getItem","CHAT_LIST_SLICE","scrollTo","useHotkeys","targetIndexDelta","IS_APP","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","isArchivePrevious","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","onScroll","handleScrollUnactiveTab","clearTimeout","doc","documentElement","scrollTop","scrollPercentRounded","opacityOffset","tabFolderTranslatePixel","setProperty","setItem","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","tlChatFolderEl","getElementById","paddingTop","tlPaddingTop","_document$querySelect","chatListActiveEl","leftMainHeaderEl","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","ownProps","detachWhenChanged","isHidden","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","captureEscKeyListener","requestNextMutation","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","observeIntersectionForLoading","inChatList","isSpoiler","renderSummary","opacity","classList","remove","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","reduce","prevOrderById","prevChatId","mapValues","order","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","language","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","settings","byKey","selectIsInSelectMode","noMenu","bot","selectBot","fullInfo","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","requestMeasure","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","isEnabled","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","MenuSeparator","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","DropTarget","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","captionLimit","isAttachmentModalInput","editableInputId","isReady","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_IOS","IS_ANDROID","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","ids","player","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","addCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","html","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","canSendGifs","canSendStickers","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","inputId","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","_dependencies","isAsync","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","passive","IGNORE_TAGS","createCallbackManager","hotkeys","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","Stream","IS_PROGRESSIVE_SUPPORTED","Progressive","useUniqueId","setLoadProgress","startedAtRef","handleProgress","throttle","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","effect","isFirstRun","dependency","subscribe","cleanupEffect","callback","savedCallback","ConnectorClass","channel","_len","args","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","path","remainingPath","isStopped","random","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","animateScroll","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","offsetHeight","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollFrom","offset","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","newScrollTop","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","index","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","windowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","context","image","preloadImage","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","filename","pendingDownload","downloadOne","processQueue","click","err","console","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","node","nodeType","contains","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","ENTITY_CLASS_BY_NODE_NAME","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","parseMarkdown","RE_LINK_TEMPLATE","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","nodeName","Url","Email","Phone","TextUrl","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","childNodes","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange"],"sourceRoot":""}