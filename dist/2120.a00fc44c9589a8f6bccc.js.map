{"version":3,"file":"2120.a00fc44c9589a8f6bccc.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/Checkbox.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/DropdownMenu.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Menu.tsx","webpack://telegram-t/./src/components/ui/MenuItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Checkbox.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: TeactNode;\n  subLabel?: string;\n  checked: boolean;\n  rightIcon?: IconName;\n  disabled?: boolean;\n  tabIndex?: number;\n  round?: boolean;\n  blocking?: boolean;\n  isLoading?: boolean;\n  withCheckedCallback?: boolean;\n  className?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n};\n\nconst Checkbox: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  subLabel,\n  checked,\n  tabIndex,\n  disabled,\n  round,\n  blocking,\n  isLoading,\n  className,\n  rightIcon,\n  onChange,\n  onCheck,\n  onClickLabel,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onCheck) {\n      onCheck(event.currentTarget.checked);\n    }\n  }, [disabled, onChange, onCheck]);\n\n  function handleClick(event: React.MouseEvent) {\n    if (event.target !== labelRef.current) {\n      onClickLabel?.(event, value);\n    }\n  }\n\n  function handleInputClick(event: React.MouseEvent) {\n    event.stopPropagation();\n  }\n\n  const labelClassName = buildClassName(\n    'Checkbox',\n    disabled && 'disabled',\n    round && 'round',\n    isLoading && 'loading',\n    blocking && 'blocking',\n    className,\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <label\n      className={labelClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={onClickLabel ? handleClick : undefined}\n      ref={labelRef}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        tabIndex={tabIndex}\n        onChange={handleChange}\n        onClick={onClickLabel ? handleInputClick : undefined}\n      />\n      <div className=\"Checkbox-main\">\n        <span className=\"label\" dir=\"auto\">\n          {typeof label === 'string' ? renderText(label) : label}\n          {rightIcon && <i className={`icon icon-${rightIcon} right-icon`} />}\n        </span>\n        {subLabel && <span className=\"subLabel\" dir=\"auto\">{renderText(subLabel)}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Checkbox);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport Button from './Button';\nimport Menu from './Menu';\n\nimport './DropdownMenu.scss';\n\ntype OwnProps = {\n  className?: string;\n  trigger?: FC<{ onTrigger: () => void; isOpen?: boolean }>;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  footer?: string;\n  forceOpen?: boolean;\n  onOpen?: NoneToVoidFunction;\n  onClose?: NoneToVoidFunction;\n  onHide?: NoneToVoidFunction;\n  onTransitionEnd?: NoneToVoidFunction;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst DropdownMenu: FC<OwnProps> = ({\n  trigger,\n  className,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  footer,\n  forceOpen,\n  onOpen,\n  onClose,\n  onTransitionEnd,\n  onMouseEnterBackdrop,\n  onHide,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n    if (isOpen) {\n      onClose?.();\n    } else {\n      onOpen?.();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\n    const menu = menuRef.current;\n\n    if (!isOpen || e.keyCode !== 40 || !menu) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(menu.children);\n\n    if (!focusedElement || elementChildren.indexOf(focusedElement) === -1) {\n      (elementChildren[0] as HTMLElement).focus();\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const triggerComponent: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    if (trigger) return trigger;\n\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [trigger]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`DropdownMenu ${className || ''}`}\n      onKeyDown={handleKeyDown}\n      onTransitionEnd={onTransitionEnd}\n    >\n      {triggerComponent({ onTrigger: toggleIsOpen, isOpen })}\n\n      <Menu\n        ref={menuRef}\n        containerRef={dropdownRef}\n        isOpen={isOpen || Boolean(forceOpen)}\n        className={className || ''}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        footer={footer}\n        autoClose\n        onClose={handleClose}\n        shouldSkipTransition={forceOpen}\n        onCloseAnimationEnd={onHide}\n        onMouseEnterBackdrop={onMouseEnterBackdrop}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id?: string;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  id,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      id={id}\n      className={className}\n      onScroll={handleScroll}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          /**\n           * TL - Custom infinite scroll, set auto scroll although is not enough items.\n           */\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`, 'min-height: 100vh')}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    isStatic && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={buildClassName('icon', `icon-${icon}`, iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  type FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../hooks/useVirtualBackdrop';\n\nimport Portal from './Portal';\n\nimport './Menu.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  containerRef?: React.RefObject<HTMLElement>;\n  isOpen: boolean;\n  shouldCloseFast?: boolean;\n  id?: string;\n  className?: string;\n  bubbleClassName?: string;\n  style?: string;\n  bubbleStyle?: string;\n  ariaLabelledBy?: string;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  autoClose?: boolean;\n  shouldSkipTransition?: boolean;\n  footer?: string;\n  noCloseOnBackdrop?: boolean;\n  backdropExcludedSelector?: string;\n  noCompact?: boolean;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onCloseAnimationEnd?: () => void;\n  onClose: () => void;\n  onMouseEnter?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  withPortal?: boolean;\n  children: React.ReactNode;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Menu: FC<OwnProps> = ({\n  ref,\n  containerRef,\n  shouldCloseFast,\n  isOpen,\n  id,\n  className,\n  bubbleClassName,\n  style,\n  bubbleStyle,\n  ariaLabelledBy,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  autoClose = false,\n  footer,\n  noCloseOnBackdrop = false,\n  backdropExcludedSelector,\n  noCompact,\n  onCloseAnimationEnd,\n  onClose,\n  onMouseEnter,\n  onMouseLeave,\n  shouldSkipTransition,\n  withPortal,\n  onMouseEnterBackdrop,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let menuRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    menuRef = ref;\n  }\n  const backdropContainerRef = containerRef || menuRef;\n  const { isTouchScreen } = useAppLayout();\n\n  const {\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen,\n    onCloseAnimationEnd,\n    shouldSkipTransition,\n    undefined,\n    shouldSkipTransition,\n  );\n\n  useEffect(\n    () => (isOpen ? captureEscKeyListener(onClose) : undefined),\n    [isOpen, onClose],\n  );\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    if (isOpen || (!isOpen && prevIsOpen === true)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = useKeyboardListNavigation(menuRef, isOpen, autoClose ? onClose : undefined, undefined, true);\n\n  useVirtualBackdrop(\n    isOpen,\n    backdropContainerRef,\n    noCloseOnBackdrop ? undefined : onClose,\n    undefined,\n    backdropExcludedSelector,\n  );\n\n  const bubbleFullClassName = buildClassName(\n    'bubble menu-container custom-scroll',\n    positionY,\n    positionX,\n    footer && 'with-footer',\n    transitionClassNames,\n    bubbleClassName,\n    shouldCloseFast && 'close-fast',\n    !isOpen && 'hidden',\n  );\n\n  const transformOriginYStyle = transformOriginY !== undefined ? `${transformOriginY}px` : undefined;\n  const transformOriginXStyle = transformOriginX !== undefined ? `${transformOriginX}px` : undefined;\n\n  const menu = (\n    <div\n      id={id}\n      className={buildClassName(\n        'Menu',\n        !noCompact && !isTouchScreen && 'compact',\n        !IS_BACKDROP_BLUR_SUPPORTED && 'no-blur',\n        withPortal && 'in-portal',\n        className,\n      )}\n      style={style}\n      aria-labelledby={ariaLabelledBy}\n      role={ariaLabelledBy ? 'menu' : undefined}\n      onKeyDown={isOpen ? handleKeyDown : undefined}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={isOpen ? onMouseLeave : undefined}\n    >\n      {isOpen && (\n        // This only prevents click events triggering on underlying elements\n        <div\n          className=\"backdrop\"\n          onMouseDown={preventMessageInputBlurWithBubbling}\n          onMouseEnter={onMouseEnterBackdrop}\n        />\n      )}\n      <div\n        role=\"presentation\"\n        ref={menuRef}\n        className={bubbleFullClassName}\n        style={buildStyle(\n          `transform-origin: ${transformOriginXStyle || positionX} ${transformOriginYStyle || positionY}`,\n          bubbleStyle,\n        )}\n        onClick={autoClose ? onClose : undefined}\n      >\n        {children}\n        {/* {footer && <div className=\"footer\">{footer}</div>} */}\n      </div>\n    </div>\n  );\n\n  if (withPortal) {\n    return <Portal>{menu}</Portal>;\n  }\n\n  return menu;\n};\n\nexport default memo(freezeWhenClosed(Menu));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_TEST } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport './MenuItem.scss';\n\nexport type MenuItemProps = {\n  icon?: IconName | 'A' | 'K';\n  isCharIcon?: boolean;\n  customIcon?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n  onClick?: (e: React.SyntheticEvent<HTMLDivElement | HTMLAnchorElement>, arg?: number) => void;\n  clickArg?: number;\n  onContextMenu?: (e: React.UIEvent) => void;\n  href?: string;\n  download?: string;\n  disabled?: boolean;\n  destructive?: boolean;\n  ariaLabel?: string;\n  withWrap?: boolean;\n};\n\nconst MenuItem: FC<MenuItemProps> = (props) => {\n  const {\n    icon,\n    isCharIcon,\n    customIcon,\n    className,\n    children,\n    onClick,\n    href,\n    download,\n    disabled,\n    destructive,\n    ariaLabel,\n    withWrap,\n    onContextMenu,\n    clickArg,\n  } = props;\n\n  const lang = useLang();\n  const { isTouchScreen } = useAppLayout();\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode !== 13 && e.keyCode !== 32) {\n      return;\n    }\n\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const fullClassName = buildClassName(\n    'MenuItem',\n    className,\n    disabled && 'disabled',\n    destructive && 'destructive',\n    !isTouchScreen && 'compact',\n    withWrap && 'wrap',\n  );\n\n  const content = (\n    <>\n      {!customIcon && icon && (\n        <i\n          className={isCharIcon ? 'icon icon-char' : `icon icon-${icon}`}\n          data-char={isCharIcon ? icon : undefined}\n        />\n      )}\n      {customIcon}\n      {children}\n    </>\n  );\n\n  if (href) {\n    return (\n      <a\n        tabIndex={0}\n        className={fullClassName}\n        href={href}\n        download={download}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        target={href.startsWith(window.location.origin) || IS_TEST ? '_self' : '_blank'}\n        rel=\"noopener noreferrer\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n        onClick={onClick}\n      >\n        {content}\n      </a>\n    );\n  }\n\n  return (\n    <div\n      role=\"menuitem\"\n      tabIndex={0}\n      className={fullClassName}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onContextMenu={onContextMenu}\n      aria-label={ariaLabel}\n      title={ariaLabel}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {content}\n    </div>\n  );\n};\n\nexport default MenuItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { CallbackAction } from '../../global/types';\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction | CallbackAction[];\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  className?: string;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onChange,\n}) => {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n  className?: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\n/**\n * TL - Add gray color or loading indicator\n */\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow' | 'gray';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container\"\n      >\n        {isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          <i className=\"icon icon-search search-icon\" />\n        )}\n      </Transition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    const infScroll: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active');\n    if (infScroll) {\n      infScroll.style.overflow = 'hidden';\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-scrollbar ${big ? 'big' : ''}`}\n      id=\"tl-chat-folders\"\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","AvatarEditable","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","src","draggable","alt","CropModal","file","onClose","Badge","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","Checkbox","id","name","label","subLabel","checked","round","blocking","isLoading","rightIcon","onCheck","onClickLabel","lang","useLang","labelRef","useRef","handleChange","currentTarget","dir","isRtl","onClick","current","ref","stopPropagation","renderText","Spinner","CheckboxGroup","options","selected","loadingOptions","values","setValues","newValues","filter","v","map","option","indexOf","ConfirmDialog","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","onKeyDown","Button","isText","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","ariaLabel","ZERO_POINT","x","y","Draggable","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","preventDefault","getClientCoordinate","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","DropdownMenu","trigger","transformOriginX","transformOriginY","positionX","positionY","footer","forceOpen","onOpen","onTransitionEnd","onMouseEnterBackdrop","onHide","menuRef","dropdownRef","setIsOpen","handleClose","triggerComponent","onTrigger","isMenuOpen","menu","keyCode","focusedElement","activeElement","elementChildren","Array","from","focus","toggleIsOpen","Menu","autoClose","shouldSkipTransition","FloatingActionButton","isShown","buttonClassName","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","length","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","newScrollTop","listItemElements","querySelectorAll","currentAnchor","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","useLastCallback","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","ListItem","buttonRef","icon","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","RippleEffect","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","freezeWhenClosed","shouldCloseFast","bubbleStyle","ariaLabelledBy","noCloseOnBackdrop","backdropExcludedSelector","noCompact","onMouseEnter","onMouseLeave","backdropContainerRef","isTouchScreen","useAppLayout","transitionClassNames","useShowTransition","captureEscKeyListener","useHistoryBack","isActive","onBack","shouldBeReplaced","useEffectWithPrevDeps","prevIsOpen","dispatchHeavyAnimationEvent","useVirtualBackdrop","bubbleFullClassName","transformOriginYStyle","transformOriginXStyle","IS_BACKDROP_BLUR_SUPPORTED","preventMessageInputBlurWithBubbling","Portal","props","isCharIcon","customIcon","download","withWrap","content","Fragment","startsWith","location","IS_TEST","rel","styles","root","ANIMATION_DURATION","dialogRef","contentClassName","isSlim","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useLayoutEffectWithPrevDeps","body","classList","toggle","remove","Notification","message","duration","containerId","onDismiss","actionText","actions","getActions","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","isArray","forEach","cb","payload","clearTimeout","handleMouseEnter","handleMouseLeave","elementRef","element","add","appendChild","TeactDOM","render","removeChild","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Math","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","Icon","Radio","hidden","RadioGroup","loadingOption","RangeSlider","step","bold","renderValue","Number","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","ResponsiveHoverButton","onActivate","buttonProps","isMouseInside","_extends","SearchInput","parentContainerClassName","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","Transition","shouldCleanup","activeKey","backgroundColor","hasArrow","labelText","htmlFor","SelectAvatar","openSystemFilesDialog","ShowMoreButton","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","Switcher","noAnimation","classNames","Tab","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","infScroll","overflow","SCROLL_DURATION","IS_IOS","TabList","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","ALL_FOLDER_ID","TextArea","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","selectionEnd","replace","TextTimer","langKey","endsAt","onEnd","forceUpdate","useForceUpdate","serverTime","getServerTime","useInterval","timeLeft","formattedTime","formatMediaDuration","PlaceholderChatInfo","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}