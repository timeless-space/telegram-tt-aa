{"version":3,"file":"2120.ca582901c9764ed6bebf.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/Checkbox.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/DropdownMenu.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Menu.tsx","webpack://telegram-t/./src/components/ui/MenuItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport renderText from '../common/helpers/renderText';\n\nimport Spinner from './Spinner';\n\nimport './Checkbox.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: TeactNode;\n  subLabel?: string;\n  checked: boolean;\n  rightIcon?: string;\n  disabled?: boolean;\n  tabIndex?: number;\n  round?: boolean;\n  blocking?: boolean;\n  isLoading?: boolean;\n  withCheckedCallback?: boolean;\n  className?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n};\n\nconst Checkbox: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  subLabel,\n  checked,\n  tabIndex,\n  disabled,\n  round,\n  blocking,\n  isLoading,\n  className,\n  rightIcon,\n  onChange,\n  onCheck,\n  onClickLabel,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onCheck) {\n      onCheck(event.currentTarget.checked);\n    }\n  }, [disabled, onChange, onCheck]);\n\n  function handleClick(event: React.MouseEvent) {\n    if (event.target !== labelRef.current) {\n      onClickLabel?.(event, value);\n    }\n  }\n\n  function handleInputClick(event: React.MouseEvent) {\n    event.stopPropagation();\n  }\n\n  const labelClassName = buildClassName(\n    'Checkbox',\n    disabled && 'disabled',\n    round && 'round',\n    isLoading && 'loading',\n    blocking && 'blocking',\n    className,\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <label\n      className={labelClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={onClickLabel ? handleClick : undefined}\n      ref={labelRef}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        tabIndex={tabIndex}\n        onChange={handleChange}\n        onClick={onClickLabel ? handleInputClick : undefined}\n      />\n      <div className=\"Checkbox-main\">\n        <span className=\"label\" dir=\"auto\">\n          {typeof label === 'string' ? renderText(label) : label}\n          {rightIcon && <i className={`icon icon-${rightIcon} right-icon`} />}\n        </span>\n        {subLabel && <span className=\"subLabel\" dir=\"auto\">{renderText(subLabel)}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Checkbox);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Draggable.module.scss';\nimport useLang from '../../hooks/useLang';\nimport buildStyle from '../../util/buildStyle';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"C9QYXaRLeCEFngOBl4S3\",\"isDragging\":\"vhGsRt79lQzzuXny9KG8\",\"knob\":\"oGgH1RraeCPayQnxA8C_\"};","import React, {\n  useState, useRef, useCallback, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport Menu from './Menu';\nimport Button from './Button';\n\nimport './DropdownMenu.scss';\n\ntype OwnProps = {\n  className?: string;\n  trigger?: FC<{ onTrigger: () => void; isOpen?: boolean }>;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  footer?: string;\n  forceOpen?: boolean;\n  onOpen?: NoneToVoidFunction;\n  onClose?: NoneToVoidFunction;\n  onHide?: NoneToVoidFunction;\n  onTransitionEnd?: NoneToVoidFunction;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst DropdownMenu: FC<OwnProps> = ({\n  trigger,\n  className,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  footer,\n  forceOpen,\n  onOpen,\n  onClose,\n  onTransitionEnd,\n  onMouseEnterBackdrop,\n  onHide,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n    if (isOpen) {\n      onClose?.();\n    } else {\n      onOpen?.();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\n    const menu = menuRef.current;\n\n    if (!isOpen || e.keyCode !== 40 || !menu) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(menu.children);\n\n    if (!focusedElement || elementChildren.indexOf(focusedElement) === -1) {\n      (elementChildren[0] as HTMLElement).focus();\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const triggerComponent: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    if (trigger) return trigger;\n\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [trigger]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`DropdownMenu ${className || ''}`}\n      onKeyDown={handleKeyDown}\n      onTransitionEnd={onTransitionEnd}\n    >\n      {triggerComponent({ onTrigger: toggleIsOpen, isOpen })}\n\n      <Menu\n        ref={menuRef}\n        containerRef={dropdownRef}\n        isOpen={isOpen || Boolean(forceOpen)}\n        className={className || ''}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        footer={footer}\n        autoClose\n        onClose={handleClose}\n        shouldSkipTransition={forceOpen}\n        onCloseAnimationEnd={onHide}\n        onMouseEnterBackdrop={onMouseEnterBackdrop}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\n\nimport { LoadMoreDirection } from '../../types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id?: string;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  id,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      id={id}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          /**\n           * TL - Custom infinite scroll, set auto scroll although is not enough items.\n           */\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`, 'min-height: 100vh')}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    isStatic && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../util/windowEnvironment';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useVirtualBackdrop from '../../hooks/useVirtualBackdrop';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Portal from './Portal';\n\nimport './Menu.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  containerRef?: RefObject<HTMLElement>;\n  isOpen: boolean;\n  shouldCloseFast?: boolean;\n  id?: string;\n  className?: string;\n  bubbleClassName?: string;\n  style?: string;\n  bubbleStyle?: string;\n  ariaLabelledBy?: string;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  autoClose?: boolean;\n  shouldSkipTransition?: boolean;\n  footer?: string;\n  noCloseOnBackdrop?: boolean;\n  backdropExcludedSelector?: string;\n  noCompact?: boolean;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onCloseAnimationEnd?: () => void;\n  onClose: () => void;\n  onMouseEnter?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  withPortal?: boolean;\n  children: React.ReactNode;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Menu: FC<OwnProps> = ({\n  ref,\n  containerRef,\n  shouldCloseFast,\n  isOpen,\n  id,\n  className,\n  bubbleClassName,\n  style,\n  bubbleStyle,\n  ariaLabelledBy,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  autoClose = false,\n  footer,\n  noCloseOnBackdrop = false,\n  backdropExcludedSelector,\n  noCompact,\n  onCloseAnimationEnd,\n  onClose,\n  onMouseEnter,\n  onMouseLeave,\n  shouldSkipTransition,\n  withPortal,\n  onMouseEnterBackdrop,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let menuRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    menuRef = ref;\n  }\n  const backdropContainerRef = containerRef || menuRef;\n  const { isTouchScreen } = useAppLayout();\n\n  const {\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen,\n    onCloseAnimationEnd,\n    shouldSkipTransition,\n    undefined,\n    shouldSkipTransition,\n  );\n\n  useEffect(\n    () => (isOpen ? captureEscKeyListener(onClose) : undefined),\n    [isOpen, onClose],\n  );\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    if (isOpen || (!isOpen && prevIsOpen === true)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = useKeyboardListNavigation(menuRef, isOpen, autoClose ? onClose : undefined, undefined, true);\n\n  useVirtualBackdrop(\n    isOpen,\n    backdropContainerRef,\n    noCloseOnBackdrop ? undefined : onClose,\n    undefined,\n    backdropExcludedSelector,\n  );\n\n  const bubbleFullClassName = buildClassName(\n    'bubble menu-container custom-scroll',\n    positionY,\n    positionX,\n    footer && 'with-footer',\n    transitionClassNames,\n    bubbleClassName,\n    shouldCloseFast && 'close-fast',\n  );\n\n  const transformOriginYStyle = transformOriginY !== undefined ? `${transformOriginY}px` : undefined;\n  const transformOriginXStyle = transformOriginX !== undefined ? `${transformOriginX}px` : undefined;\n\n  const menu = (\n    <div\n      id={id}\n      className={buildClassName(\n        'Menu',\n        !noCompact && !isTouchScreen && 'compact',\n        !IS_BACKDROP_BLUR_SUPPORTED && 'no-blur',\n        className,\n      )}\n      style={style}\n      aria-labelledby={ariaLabelledBy}\n      role={ariaLabelledBy ? 'menu' : undefined}\n      onKeyDown={isOpen ? handleKeyDown : undefined}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={isOpen ? onMouseLeave : undefined}\n    >\n      {isOpen && (\n        // This only prevents click events triggering on underlying elements\n        <div\n          className=\"backdrop\"\n          onMouseDown={preventMessageInputBlurWithBubbling}\n          onMouseEnter={onMouseEnterBackdrop}\n        />\n      )}\n      <div\n        role=\"presentation\"\n        ref={menuRef}\n        className={bubbleFullClassName}\n        style={buildStyle(\n          `transform-origin: ${transformOriginXStyle || positionX} ${transformOriginYStyle || positionY}`,\n          bubbleStyle,\n        )}\n        onClick={autoClose ? onClose : undefined}\n      >\n        {children}\n        {/* {footer && <div className=\"footer\">{footer}</div>} */}\n      </div>\n    </div>\n  );\n\n  if (withPortal) {\n    return <Portal>{menu}</Portal>;\n  }\n\n  return menu;\n};\n\nexport default memo(Menu);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport { IS_TEST } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './MenuItem.scss';\n\nexport type MenuItemProps = {\n  icon?: string;\n  isCharIcon?: boolean;\n  customIcon?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n  onClick?: (e: React.SyntheticEvent<HTMLDivElement | HTMLAnchorElement>, arg?: number) => void;\n  clickArg?: number;\n  onContextMenu?: (e: React.UIEvent) => void;\n  href?: string;\n  download?: string;\n  disabled?: boolean;\n  destructive?: boolean;\n  ariaLabel?: string;\n  withWrap?: boolean;\n};\n\nconst MenuItem: FC<MenuItemProps> = (props) => {\n  const {\n    icon,\n    isCharIcon,\n    customIcon,\n    className,\n    children,\n    onClick,\n    href,\n    download,\n    disabled,\n    destructive,\n    ariaLabel,\n    withWrap,\n    onContextMenu,\n    clickArg,\n  } = props;\n\n  const lang = useLang();\n  const { isTouchScreen } = useAppLayout();\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode !== 13 && e.keyCode !== 32) {\n      return;\n    }\n\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  });\n\n  const fullClassName = buildClassName(\n    'MenuItem',\n    className,\n    disabled && 'disabled',\n    destructive && 'destructive',\n    !isTouchScreen && 'compact',\n    withWrap && 'wrap',\n  );\n\n  const content = (\n    <>\n      {!customIcon && icon && (\n        <i\n          className={isCharIcon ? 'icon icon-char' : `icon icon-${icon}`}\n          data-char={isCharIcon ? icon : undefined}\n        />\n      )}\n      {customIcon}\n      {children}\n    </>\n  );\n\n  if (href) {\n    return (\n      <a\n        tabIndex={0}\n        className={fullClassName}\n        href={href}\n        download={download}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        target={href.startsWith(window.location.origin) || IS_TEST ? '_self' : '_blank'}\n        rel=\"noopener noreferrer\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n        onClick={onClick}\n      >\n        {content}\n      </a>\n    );\n  }\n\n  return (\n    <div\n      role=\"menuitem\"\n      tabIndex={0}\n      className={fullClassName}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onContextMenu={onContextMenu}\n      aria-label={ariaLabel}\n      title={ariaLabel}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {content}\n    </div>\n  );\n};\n\nexport default MenuItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import React, { memo } from '../../lib/teact/teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      <svg\n        viewBox={`0 0 ${borderRadius * 2} ${borderRadius * 2}`}\n        height={borderRadius * 2}\n        width={borderRadius * 2}\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width={STROKE_WIDTH}\n          stroke-dasharray={`${circumference} ${circumference}`}\n          stroke-dashoffset={strokeDashOffset}\n          stroke-linecap=\"round\"\n          r={circleRadius}\n          cx={borderRadius}\n          cy={borderRadius}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\n/**\n * TL - Add gray color or loading indicator\n */\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow' | 'gray';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"fb5F16dNcZnOl5zZNuRC\"};","import type { ChangeEvent, RefObject } from 'react';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        onChange={handleSelectFile}\n        accept=\"image/png, image/jpeg\"\n        ref={inputRef}\n        className={styles.input}\n      />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { MouseButton } from '../../util/windowEnvironment';\nimport forceReflow from '../../util/forceReflow';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    const infScroll: any = document.querySelector('#custom-id-chat-list-inf-scroll.Transition_slide-active');\n    if (infScroll) {\n      infScroll.style.overflow = 'hidden';\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-scrollbar ${big ? 'big' : ''}`}\n      id=\"tl-chat-folders\"\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n"],"names":["memo","_ref","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","src","alt","CropModal","file","onClose","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","id","name","label","subLabel","checked","round","blocking","isLoading","rightIcon","onCheck","onClickLabel","lang","useLang","labelRef","useRef","handleChange","currentTarget","dir","isRtl","onClick","current","ref","stopPropagation","renderText","Spinner","options","selected","loadingOptions","values","setValues","newValues","filter","v","map","option","Checkbox","indexOf","onCloseAnimationEnd","header","textParts","confirmLabel","confirmHandler","confirmIsDestructive","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","onKeyDown","Button","isText","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","ariaLabel","ZERO_POINT","x","y","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","preventDefault","getClientCoordinate","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","trigger","transformOriginX","transformOriginY","positionX","positionY","footer","forceOpen","onOpen","onTransitionEnd","onMouseEnterBackdrop","onHide","menuRef","dropdownRef","setIsOpen","handleClose","triggerComponent","_ref2","onTrigger","isMenuOpen","menu","keyCode","focusedElement","activeElement","elementChildren","Array","from","focus","toggleIsOpen","Menu","autoClose","shouldSkipTransition","isShown","buttonClassName","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","Backwards","Forwards","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","newScrollTop","listItemElements","querySelectorAll","currentAnchor","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","useLastCallback","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","buttonRef","icon","leftElement","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","RippleEffect","action","MenuSeparator","key","MenuItem","handler","shouldCloseFast","bubbleClassName","bubbleStyle","ariaLabelledBy","noCloseOnBackdrop","backdropExcludedSelector","noCompact","onMouseEnter","onMouseLeave","backdropContainerRef","isTouchScreen","useAppLayout","transitionClassNames","useShowTransition","captureEscKeyListener","useHistoryBack","isActive","onBack","shouldBeReplaced","useEffectWithPrevDeps","prevIsOpen","dispatchHeavyAnimationEvent","useVirtualBackdrop","bubbleFullClassName","transformOriginYStyle","transformOriginXStyle","IS_BACKDROP_BLUR_SUPPORTED","preventMessageInputBlurWithBubbling","Portal","props","isCharIcon","customIcon","download","withWrap","content","Fragment","startsWith","location","IS_TEST","rel","dialogRef","isSlim","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useLayoutEffectWithPrevDeps","body","classList","toggle","remove","DEFAULT_DURATION","message","duration","containerId","onDismiss","actionText","actions","getActions","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","payload","clearTimeout","handleMouseEnter","handleMouseLeave","elementRef","element","add","appendChild","TeactDOM","render","removeChild","RADIUSES","s","m","l","xl","progress","square","transparent","noCross","radius","circleRadius","STROKE_WIDTH","borderRadius","circumference","Math","PI","strokeDashOffset","min","max","viewBox","stroke","fill","r","cx","cy","hidden","loadingOption","Radio","step","bold","renderValue","Number","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","onActivate","buttonProps","isMouseInside","_extends","parentContainerClassName","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","backgroundColor","hasArrow","labelText","htmlFor","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","variant","animation","forceAspectRatio","inline","classNames","aspectRatio","noAnimation","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","tabEl","prevTabEl","parentElement","contains","requestMutation","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","infScroll","overflow","SCROLL_DURATION","IS_IOS","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","_tab$id","Tab","ALL_FOLDER_ID","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","textarea","previousSelectionEnd","selectionEnd","replace"],"sourceRoot":""}