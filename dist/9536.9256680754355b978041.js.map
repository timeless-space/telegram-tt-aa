{"version":3,"file":"9536.9256680754355b978041.js","mappings":"8FACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECzBxBN,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBb,EAAoBc,EAAI,CAACC,EAAKC,IAAUC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,G,MCAlF,IAAIK,EACArB,EAAoBQ,EAAEc,gBAAeD,EAAYrB,EAAoBQ,EAAEe,SAAW,IACtF,IAAIC,EAAWxB,EAAoBQ,EAAEgB,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,IAAMT,GAAWA,EAAYM,EAAQG,KAAKJ,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFhC,EAAoBiC,EAAIZ,C,KClBxBrB,EAAoBkC,EAAIC,KAAKZ,SAAW,GCCxCD,cAAc,IAAIc,IAAI,eAEtBC,OAAOC,qBAAuBC,UAC5BJ,KAAKK,YAAY,CAAEC,KAAM,eAAgB,EAG3CN,KAAKO,UAAaC,IAChB,MAAM,GAAEC,EAAE,KAAEC,GAASF,EAAMG,KACrBC,EAAS,IAAIC,WAEnBD,EAAOE,iBAAiB,WAAW,KACjC,MAAMC,EAASH,EAAOI,OAEhBC,EAAOF,EAAOG,WACdC,EAAUjB,OAAOkB,QAAQH,GAC/Bf,OAAOmB,OAAOC,IAAI,IAAIC,WAAWR,GAASI,GAE1C,MAEMK,EAFUtB,OAAOuB,MAAM,UAAW,SAAU,CAAC,SAAU,UAEjDC,CAAQP,EAASF,GAE7B,IADkBf,OAAOyB,SAASH,EAAK,OAOrC,OALAtB,OAAO0B,MAAMJ,GACbtB,OAAO0B,MAAMT,QACbnB,KAAKK,YAAY,CACfC,KAAM,SAAUG,KAAIoB,MAAO,EAAGC,OAAQ,EAAGd,OAAQ,OAIrD,MAAMa,EAAQ3B,OAAOyB,SAASH,EAAM,EAAG,OACjCM,EAAS5B,OAAOyB,SAASH,EAAM,EAAG,OAExCtB,OAAO0B,MAAMJ,GAEb,MAEMO,EAFS7B,OAAOuB,MAAM,SAAU,SAAU,CAAC,SAAU,UAEzCO,CAAOb,EAASF,GAE5BgB,EAAa,IAAIV,WAAWrB,OAAOmB,OAAON,OAAQgB,EAAWF,EAAQC,EAAS,GAC9Ed,EAAS,IAAIkB,kBAAkBD,GACrC/B,OAAO0B,MAAMG,GACb7B,OAAO0B,MAAMT,GAEbnB,KAAKK,YAAY,CACfC,KAAM,SAAUG,KAAIoB,QAAOC,SAAQd,UACnC,IAGJJ,EAAOuB,kBAAkBzB,EAAK,C","sources":["webpack://telegram-t/webpack/bootstrap","webpack://telegram-t/webpack/runtime/global","webpack://telegram-t/webpack/runtime/hasOwnProperty shorthand","webpack://telegram-t/webpack/runtime/publicPath","webpack://telegram-t/webpack/runtime/importScripts chunk loading","webpack://telegram-t/./src/lib/webp/webp_wasm.worker.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t9536: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","/* eslint-disable */\nimportScripts(new URL('./webp_wasm.js', import.meta.url));\n\nModule.onRuntimeInitialized = async () => {\n  self.postMessage({ type: 'initialized' });\n};\n\nself.onmessage = (event) => {\n  const { id, blob } = event.data;\n  const reader = new FileReader();\n\n  reader.addEventListener('loadend', () => {\n    const buffer = reader.result;\n\n    const size = buffer.byteLength;\n    const thisPtr = Module._malloc(size);\n    Module.HEAPU8.set(new Uint8Array(buffer), thisPtr);\n\n    const getInfo = Module.cwrap('getInfo', 'number', ['number', 'number']);\n\n    const ptr = getInfo(thisPtr, size);\n    const success = !!Module.getValue(ptr, 'i32');\n    if (!success) {\n      Module._free(ptr);\n      Module._free(thisPtr);\n      self.postMessage({\n        type: 'result', id, width: 0, height: 0, result: null,\n      });\n      return;\n    }\n    const width = Module.getValue(ptr + 4, 'i32');\n    const height = Module.getValue(ptr + 8, 'i32');\n\n    Module._free(ptr);\n\n    const decode = Module.cwrap('decode', 'number', ['number', 'number']);\n\n    const resultPtr = decode(thisPtr, size);\n\n    const resultView = new Uint8Array(Module.HEAPU8.buffer, resultPtr, width * height * 4);\n    const result = new Uint8ClampedArray(resultView);\n    Module._free(resultPtr);\n    Module._free(thisPtr);\n\n    self.postMessage({\n      type: 'result', id, width, height, result,\n    });\n  });\n\n  reader.readAsArrayBuffer(blob);\n};\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","self","URL","Module","onRuntimeInitialized","async","postMessage","type","onmessage","event","id","blob","data","reader","FileReader","addEventListener","buffer","result","size","byteLength","thisPtr","_malloc","HEAPU8","set","Uint8Array","ptr","cwrap","getInfo","getValue","_free","width","height","resultPtr","decode","resultView","Uint8ClampedArray","readAsArrayBuffer"],"sourceRoot":""}