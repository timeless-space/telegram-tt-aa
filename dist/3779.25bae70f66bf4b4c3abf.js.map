{"version":3,"file":"3779.25bae70f66bf4b4c3abf.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftOption.module.scss?a171","webpack://telegram-t/./src/components/main/premium/GiftOption.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    !isVideo ? previewBlobUrl || pictogramBlobUrl || bestImageData : undefined\n  );\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gJ2Z_EQBnbDYMJ2NKHPj\",\"fullSize\":\"F47ywnKRf0QnMNfkDAhN\",\"backdrop\":\"aZegQFa4eGDydcez2hhX\",\"captionBackdrop\":\"tt0i3c46mBP8eper4sX9\",\"backdropNonInteractive\":\"qBNqjd4Jivn9JZM9LTR1\",\"close\":\"oHmnmRivkoOTtFlipOlm\",\"wrapper\":\"tfRbD6UXCoHpURk9jkFs\",\"slideAnimation\":\"KeE62xWk53FkLDgmLDHC\",\"slideAnimationToActive\":\"u4UY_cga_HGYeSeXtJFy\",\"content\":\"AS2XHnign2xV16Kjj6bL\",\"slideAnimationFromActive\":\"fMXsSVdwtbHbHVPe7TRY\",\"composer\":\"RrR48bdsuf7ziCaT39SR\",\"caption\":\"DfZIQpvbsc1Lopohx81T\",\"storyIndicators\":\"E5huzrUvL4LEC9dx4KwW\",\"slide\":\"Xd5grwcEn6r_RQyYYwTw\",\"slidePreview\":\"fH5dgpor5kv4sjYevuiU\",\"activeSlide\":\"Cs943zlR1iWQhsSG8QUZ\",\"slideInner\":\"UxBW6ApLLCk97qq1YxJH\",\"mediaWrapper\":\"tOO6t_Iv78rQnpDEOgh8\",\"media\":\"IWB6V7TuwMQUqxdPJDKT\",\"name\":\"zX3llen5J3KlIJGrCz2u\",\"forward\":\"mFCpxKAL5_Xa89VkFv5i\",\"storyHeader\":\"Kcahvy487TvQIEvXamQu\",\"sender\":\"E1bHDTXle6dida5Kw_Ob\",\"senderInfo\":\"MtJgsqpsPRYORGENbJDM\",\"senderName\":\"h7HZqUP3UoB_TWRA3ien\",\"storyMetaRow\":\"N9xfCNDRX4SkiLZ4_S9E\",\"storyMeta\":\"_fljB0mSVyj1YctbrtIQ\",\"closeButton\":\"qiXq5_w5pl5BhuytgsUI\",\"actions\":\"rlPJs7dRj8mRAAzEoxxg\",\"active\":\"YFM2wDC77SIBRSobTTNQ\",\"visibilityButton\":\"L2DlAgxoJ9gNRcSiZRkI\",\"visibilityButtonSelf\":\"uFpWDsHmcfI_qQSfKtph\",\"button\":\"Njk4jy0AOyHD31ABkS6M\",\"buttonMenu\":\"nqQ3MS3rHe4c00GJvtwh\",\"captionGradient\":\"MnckwrDaIp2zIGy011sM\",\"captionInner\":\"jXIvfN5QPnrzWo9eANQf\",\"captionContent\":\"_nAzidGNr0mdSkqyvmj_\",\"hasOverflow\":\"d3FJsMTVC2kORJMGxgbG\",\"expanded\":\"zAH8_B8BrtyxRZR_iHvS\",\"animate\":\"ZguPPKlRJgtkBr7ENcvT\",\"withShowMore\":\"XOq3cloVnzuYbz2bQw_b\",\"captionShowMore\":\"OIcA1buYWPCjn6NzLZJn\",\"navigate\":\"nAa_W_FxKosbXRpB3tgu\",\"prev\":\"zwhGmE8SJA8XAnthasxt\",\"next\":\"a9J5InzXCE1XEX5m3A6J\",\"modal\":\"RiK8REKD0zdsqi8XRHh5\",\"thumbnail\":\"lFdi4MIeHlnMCtiJbwTA\",\"ghost\":\"zY4iKmbIIQ3TXtFU3PvS\",\"ghost2\":\"b1yiparcCewkKHh2aOHA\",\"ghostImage\":\"rAlVsvmsoSnnvgZfAsc5\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNraau1Tus9Dhh2t0acA\",\"closeButton\":\"osHMUMN4HFvGPbQ6eYUw\",\"stealthIcon\":\"VLiBdviejkHCeGYNuGbe\",\"title\":\"uEr8ArVuYRUD3Ca3K1Sr\",\"description\":\"uV7xfk10UeLETmkHjCSv\",\"listItem\":\"P7J78AMcEBuYTdRnkNpv\",\"icon\":\"cFpiujXxzIbtMShso6wr\",\"button\":\"z5JVVwDZqJmujLRuZYiL\",\"subtitle\":\"ADx8YQgxcFasnFZ14Tcy\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"wU1uWdwnVeSGSB5gOjJ6\",\"active\":\"SlrHi8_ck8rgqhL48EhA\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Tc2kIulYTlFPvwfiTsFu\",\"header\":\"JXAfpcoB9izWjIX_WP0Q\",\"closeButton\":\"Hku60UdVn3LASgJdRQuw\",\"headerTitle\":\"L0Y7Snis7FiIcjMWZBBV\",\"content\":\"TBDaWd1Xw_wRqKUfj6IE\",\"section\":\"aNUFlXJVOpJVBLust1Ow\",\"title\":\"zNuDMViBzMNzGZxwFYGt\",\"list\":\"uW2YeebP6I62I5STt6az\",\"option\":\"CmouOddJNYo5qMb1eDhZ\",\"checked\":\"PxjIam8OpB7IAvp7fByQ\",\"input\":\"K9FImlb6XOJreshP5cfK\",\"icon\":\"Wpl9IXFnTYZf8HWj8H7_\",\"action\":\"oOUd_PRdTkIxpN_BekC1\",\"optionContent\":\"BkziTDKbvbzgii4mPbsx\",\"footer\":\"gH3hgLj6tnN_xhycOx0Q\",\"info\":\"i2HOS8g2UGDP69ABnvAe\",\"submit\":\"XwAIvijHgerStkRxm6rt\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryPinned } = getActions();\n\n  const lang = useLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isPinned);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isPinned !== isPinned) {\n      toggleStoryPinned({ peerId: story!.peerId, storyId: story!.id, isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst OVERFLOW_THRESHOLD_PX = 5.75 * REM;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n\n  const caption = story.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const { clientHeight } = ref.current;\n    setHasOverflow(clientHeight > OVERFLOW_THRESHOLD_PX);\n  }, [caption]);\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useEffect(() => {\n    if (!showMoreButtonRef.current || !contentRef.current) {\n      return;\n    }\n\n    const button = showMoreButtonRef.current;\n    const container = contentRef.current;\n\n    const { offsetWidth } = button;\n    requestMutation(() => {\n      container.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n    });\n  }, [canExpand]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    hasOverflow && !isExpanded && styles.hasOverflow,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          <MessageText\n            messageOrStory={story}\n            withTranslucentThumbs\n            forcePlayback\n          />\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SZ7yrkn5jnFJYa8rf9Lq\",\"viewInfo\":\"sGmslpAUN8yKBOxe13Kg\",\"interactive\":\"UfBe8dmqVfC7BCCMwpOI\",\"avatars\":\"fx7W4KZAaiK5T2nIZL5c\",\"spacer\":\"SdmjC2sdiWVr6VAguB1N\",\"reactionCount\":\"be7sESSsLrdDEAFmfgN1\",\"reactionCountHeart\":\"j6UTHtXm5pGlZTUQtiNw\",\"channelReaction\":\"ZeZWZgtRc6Lk344t1KSQ\",\"views\":\"nrvshNssU3J7YjDRMGJt\",\"viewIcon\":\"ALYrJzsIz00qOE3fZxAg\",\"reactionButton\":\"BnHCTCGK8AHZZfrBsrRz\",\"reactionHeart\":\"oDRgq62aSPNYamk9P2EV\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  areViewsExpired?: boolean;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  areViewsExpired,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useLang();\n\n  const {\n    viewsCount, reactionsCount, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = story && 'recentViewerIds' in story ? story.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [story]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {!areViewsExpired && Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <div className={styles.channelReaction}>\n          <Button\n            round\n            className={styles.reactionButton}\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleLikeStory}\n            ariaLabel={lang('AccDescrLike')}\n          >\n            {sentReaction && (\n              <ReactionAnimatedEmoji\n                key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                containerId={containerId}\n                reaction={sentReaction}\n                withEffectOnly={isSentStoryReactionHeart}\n              />\n            )}\n            {(!sentReaction || isSentStoryReactionHeart) && (\n              <Icon\n                name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n              />\n            )}\n          </Button>\n          {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uXHBlEUDZKJr1u7dvj4k\",\"viewed\":\"GiJXPT0zbAmsx82Nm8ci\",\"active\":\"PaCfy7Nei0tOQAE9i0XV\",\"inner\":\"goBtmBaUzEEUaT_NbrvT\",\"progress\":\"kvGsn6HE3seo_5jfVRs1\",\"paused\":\"J1oS3YeXCbdBhKm3eIBi\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport {\n  selectChat, selectIsCurrentUserPremium,\n  selectPeerStories, selectPeerStory,\n  selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dateFormat';\nimport download from '../../util/download';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n}\n\nconst VIDEO_MIN_READY_STATE = 4;\nconst SPACEBAR_CODE = 32;\n\nconst PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nconst SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryPinned,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n\n  const isChangelog = peerId === storyChangelogUserId;\n  const isChannel = !isUserId(peerId);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isPinned : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isPinned : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const shouldShowFooter = isLoadedStory && (isOut || isChannel);\n\n  const {\n    shouldRender: shouldRenderSkeleton, transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(!isOut && !isChangelog && !isChannel);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !isVideo || !fullMediaData);\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => { if (hasAllData && !isUnsupported) handlePlayStory(); }, [hasAllData, isUnsupported]);\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isOut || isDeletedStory || areViewsExpired) return;\n\n    // Refresh recent viewers list each time\n    loadStoryViews({ peerId, storyId, isPreload: true });\n  }, [isDeletedStory, areViewsExpired, isOut, peerId, storyId]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) return;\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openNextStory();\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    setCurrentTime(0);\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    const duration = isLoadedStory && story.content.video?.duration\n      ? story.content.video.duration\n      : undefined;\n\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (isChannel) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderInfo}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>{lang('StorySave')}</MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>{lang('ArchiveStory')}</MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>{lang('StealthMode')}</MenuItem>\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPlaying={markStoryPlaying}\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n            onEnded={handleOpenNextStory}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} areViewsExpired={areViewsExpired} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={styles.captionGradient} />}\n      {hasText && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={appearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang('ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId, storyId, isPrivateStories, isArchivedStories, isReportModalOpen, isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const { orderedIds, pinnedIds, archiveIds } = selectPeerStories(global, peerId) || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  return {\n    peer: (user || chat)!,\n    story,\n    orderedIds: isArchivedStories ? archiveIds : (isPrivateStories ? pinnedIds : orderedIds),\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1);\n    const resultId = byId[previewIndexId]?.id || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <Avatar\n          peer={peer}\n          withStory\n          storyViewerMode=\"disabled\"\n        />\n        <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { ANIMATION_END_DELAY, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport { selectIsStoryViewerOpen, selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  IS_FIREFOX, IS_IOS, IS_SAFARI,\n} from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSignal from '../../hooks/useSignal';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ANIMATION_DURATION_MS = 350 + (IS_SAFARI || IS_FIREFOX ? ANIMATION_END_DELAY : 20);\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n  const animationDuration = isMobile ? 0 : ANIMATION_DURATION_MS;\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    const timeoutId = window.setTimeout(() => {\n      setRenderingPeerId(currentPeerId);\n    }, animationDuration);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [animationDuration, currentPeerId]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (renderingPeerId !== currentPeerId) {\n      timeOutId = window.setTimeout(() => {\n        setRenderingStoryId(currentStoryId);\n      }, animationDuration);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n\n    return () => {\n      window.clearTimeout(timeOutId);\n    };\n  }, [renderingPeerId, currentStoryId, currentPeerId, renderingStoryId, animationDuration]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n      timeOutId = window.setTimeout(() => {\n        setIsAnimating(false);\n      }, animationDuration);\n    }\n\n    return () => {\n      setIsAnimating(false);\n      window.clearTimeout(timeOutId);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, animationDuration]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${-offsetY}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, renderingPeerId, onClose, windowWidth, windowHeight]);\n\n  useLayoutEffect(() => {\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n\n        return;\n      }\n\n      const getScale = () => {\n        if (isMobile) return '1';\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        if (!isMobile) offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        if (!isMobile) offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, isMobile, slideSizes]);\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { archived, active } } = global.stories;\n  const peer = currentPeerId ? selectPeer(global, currentPeerId) : undefined;\n\n  return {\n    byPeerId,\n    peerIds: peer?.areStoriesHidden ? archived : active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"hOwWWII6h241MvvB87N5\",\"viewsList\":\"hOwWWII6h241MvvB87N5\",\"views-list-loading\":\"ZaMMMcb_gGs7nmClMvzj\",\"viewsListLoading\":\"ZaMMMcb_gGs7nmClMvzj\",\"info\":\"Yt7QHLaCNE1N3OSWXa_n\",\"centeredInfo\":\"vKqMQNiuvK152lO__j16\",\"view-reaction\":\"x77ctFpUWd2rG2IUxz7y\",\"viewReaction\":\"x77ctFpUWd2rG2IUxz7y\",\"header\":\"oGYCTCHvXEkdIBMd0dHh\",\"content\":\"NfqCS7dx9c9nxYXZc3p2\",\"top-button\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"topButton\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"contact-filter\":\"RnVt9sK0OgnrHADARI9k\",\"contactFilter\":\"RnVt9sK0OgnrHADARI9k\",\"selected\":\"deHea5ii46_J57LhYmaj\",\"sort\":\"Mq_j5_FRMS06qJcPCwmC\",\"sort-button\":\"BYQ1X4iADCMrIUqdd3Lt\",\"sortButton\":\"BYQ1X4iADCMrIUqdd3Lt\",\"icon-sort\":\"yq5P30VXV4gSKmSHmXLL\",\"iconSort\":\"yq5P30VXV4gSKmSHmXLL\",\"icon-down\":\"mjcXdhEuASJWWO5Cqlxq\",\"iconDown\":\"mjcXdhEuASJWWO5Cqlxq\",\"search\":\"vs1AYj85WQxzI646EBZt\",\"bottom-info\":\"sWTOVQoWoeNAu2G8kVOl\",\"bottomInfo\":\"sWTOVQoWoeNAu2G8kVOl\",\"scrolled\":\"knxco2DJ3lthvQo2SOG6\",\"footer\":\"RqsPFLpLbJYFm50JYSiw\",\"closeButton\":\"DonddSsGK4E9DM8F5ctU\",\"opacity-fade-in\":\"h15igx036PH4epiXwUBg\",\"opacityFadeIn\":\"h15igx036PH4epiXwUBg\",\"fadeIn\":\"T9DzW6zCmxNgXv1YaUji\",\"blocked\":\"EVxErnsRszao77tgwSaA\",\"check\":\"HbQucamQwAYpvNnTqHVM\",\"menuBubble\":\"Y3KJ1StmiJpvbpeqbMuv\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiStoryView, ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiStoryView;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\nconst StoryView = ({\n  storyView,\n  user,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat, closeStoryViewer, unblockUser, blockUser, deleteContact, updateStoryView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    closeStoryViewer();\n\n    setTimeout(() => {\n      openChat({ id: storyView.userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    const { userId, areStoriesBlocked, isUserBlocked } = storyView;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: false });\n          } else {\n            blockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, user]);\n\n  return (\n    <ListItem\n      key={storyView.userId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => handleClick()}\n      rightElement={storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      <PrivateChatInfo\n        userId={storyView.userId}\n        noStatusOrTyping\n        status={formatDateAtTime(lang, storyView.date * 1000)}\n        statusIcon=\"message-read\"\n        withStory\n        forceShowSelf\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const user = selectUser(global, storyView.userId);\n\n  return {\n    user,\n    availableReactions: global.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  viewsById?: Record<string, ApiStoryView>;\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  viewsById,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViews, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const viewsCount = story?.viewsCount || 0;\n  const reactionsCount = story?.reactionsCount || 0;\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViewIds = useMemo(() => {\n    if (!viewsById) {\n      return undefined;\n    }\n\n    return Object.values(viewsById)\n      .sort(prepareComparator(areReactionsFirst))\n      .map((view) => view.userId);\n  }, [areReactionsFirst, viewsById]);\n\n  const placeholderCount = !sortedViewIds?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViewIds?.length) && sortedViewIds!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViews({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViewIds?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViewIds?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViewIds}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViewIds?.map((id) => (\n            <StoryView key={id} storyView={viewsById![id]} />\n          ))}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiStoryView, b: ApiStoryView) => {\n    if (areReactionsFirst) {\n      if (a.reaction && !b.reaction) {\n        return -1;\n      }\n      if (!a.reaction && b.reaction) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, viewsById, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    viewsById,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, isManyMessages, isStory, lang]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport { handleSendLink } from '../../util/tlCustomFunction';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n    if (url) {\n      handleSendLink(url);\n    }\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pZFkNPeaXsO10mdITSZR\",\"buttons\":\"bYI0Nm410CJjgAhnH3EL\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiGeoPoint } from '../../../api/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  geoPoint?: ApiGeoPoint;\n  zoom?: number;\n};\n\nconst OpenMapModal = ({ geoPoint, zoom }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          Open Street Maps\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"jztdH6qO5uz3c2muOpPT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUserName?: string;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUserName,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, currentUserName]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useWindowSize from '../../../../hooks/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, [ref]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(webApp!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [hideCloseModal, isOpen, markUnloaded]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CWJDTp88gsPYaq6de8yn\",\"more-button\":\"_VJv8UKGVoUJKFRjrn8B\",\"moreButton\":\"_VJv8UKGVoUJKFRjrn8B\",\"close-icon\":\"l4SsaN4Dx0bKGb83CYhA\",\"closeIcon\":\"l4SsaN4Dx0bKGb83CYhA\",\"state-back\":\"jscxQ3PMmXnE2oWrMVBY\",\"stateBack\":\"jscxQ3PMmXnE2oWrMVBY\",\"loading-spinner\":\"ElvN45roGsPDzZuJjk3H\",\"loadingSpinner\":\"ElvN45roGsPDzZuJjk3H\",\"hide\":\"L441lq9G5_x3lNeWNFlB\",\"frame\":\"uFAepVSf6dgEREGs6Kio\",\"with-button\":\"ruOZRuUOenMeQp5WIpy0\",\"withButton\":\"ruOZRuUOenMeQp5WIpy0\",\"main-button\":\"QoAHIcQHa0NNmR8fma3w\",\"mainButton\":\"QoAHIcQHa0NNmR8fma3w\",\"visible\":\"OViz2KN7MjYjs1f5Z3JN\",\"hidden\":\"IEfxtMw7c1U4BRBpulWm\",\"main-button-spinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"mainButtonSpinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"web-app-popup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"webAppPopup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"without-title\":\"GuFs2OL_xXL5ODh10kTj\",\"withoutTitle\":\"GuFs2OL_xXL5ODh10kTj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {bot?.isInactive && bot.isForSideMenu && (\n        renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\",\"font-icon\":\"r6_o8xZKIo11QFFYm2Hv\",\"fontIcon\":\"r6_o8xZKIo11QFFYm2Hv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  onClick?: VoidFunction;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  onClick,\n}) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dfgGrPUU6AC7NazJh8Ut\",\"header\":\"Y9bbyTXeZIKzoa8wtnkn\",\"circle\":\"eTSbeIbZl_YRbAPcqHhQ\",\"title\":\"me5CfUvQ6RleMxtFjIaR\",\"features\":\"ssjliTyWlTUXFLdz5NJd\",\"mobile\":\"ckFVT8AXlwgCejTXWdfQ\",\"scrolled\":\"T0nWA26c2Q0j0Z_PpexK\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { DPR } from '../../../../util/windowEnvironment';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * DPR * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n    });\n  }, []);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE / DPR;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"stories\":\"uOZMPO0FyBVTsM6ACXDw\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'stories',\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'infinite_reactions',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"status-emoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"statusEmoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\",\"stickerSetText\":\"CCRIHzjKzzj6y3nYJQKk\",\"stickerSetLink\":\"_G_ogp7ec2JUxZUhoaAi\",\"stickerSetLinkIcon\":\"vJ2GKZFltN22CJDw5Bdu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  const handleClick = useLastCallback(() => {\n    handleClickWithStartParam();\n  });\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"c43s0Q6_xgGlM8sZxQ7Q\",\"active\":\"PjYaF42Oe55WgPpTP6Od\",\"input\":\"r03M3Tzd52_D2GCAdabK\",\"content\":\"oL_26LDnHDwJRxqKF1Kn\",\"month\":\"JmEuBQ4mFzu1MiFV5qSB\",\"perMonth\":\"hssGd7AUhDhhG2_aXqe9\",\"amount\":\"mhc9AgOUiNT2QMcErpQe\",\"discount\":\"WCXGWHYNQh8lg2rIWehC\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './GiftOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  onChange: (month: number) => void;\n};\n\nconst GiftOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label className={buildClassName(styles.wrapper, checked && styles.active)} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiftOption);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport GiftOption from './GiftOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          peer={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <GiftOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"x2\":\"MeIsw1Fm4WBqIZzbpS10\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const {\n    openStickerSet,\n    openPremiumModal,\n    setEmojiStatus,\n    showNotification,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    if (isCurrentUserPremium) {\n      onClick?.(clickArg);\n    } else {\n      showNotification({\n        message: 'Subscribe to ** Telegram Premium ** to unlock this emoji.',\n      });\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionUniqueKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { formatDateInFuture } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  info: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  boostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  info,\n  chat,\n  boostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isOpen = Boolean(info);\n\n  const lang = useLang();\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!boostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, boostedChat);\n  }, [boostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!info?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      level, currentLevelBoosts, hasMyBoost,\n    } = info.boostStatus;\n\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = info?.myBoosts && !areAllBoostsInChannel(info.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n    } = getBoostProgressInfo(info.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n    const isJustUpgraded = boosts === currentLevelBoosts && hasBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n    const currentStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level);\n    const nextLevelStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level + 1);\n\n    const modalTitle = hasBoost ? lang('YouBoostedChannel2', chatTitle)\n      : level === 0 ? lang('lng_boost_channel_title_first') : lang('lng_boost_channel_title_more');\n\n    let description: string | undefined;\n    if (level === 0) {\n      if (!hasBoost) {\n        description = lang('ChannelBoost.EnableStoriesForChannelText', [chatTitle, moreBoosts]);\n      } else {\n        description = lang('ChannelBoost.EnableStoriesMoreRequired', moreBoosts);\n      }\n    } else if (isJustUpgraded) {\n      if (level === 1) {\n        description = lang('ChannelBoost.EnabledStoriesForChannelText');\n      } else {\n        description = lang('ChannelBoost.BoostedChannelReachedLevel', [level, currentStoriesPerDay]);\n      }\n    } else {\n      description = lang('ChannelBoost.HelpUpgradeChannelText', [chatTitle, moreBoosts, nextLevelStoriesPerDay]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels,\n    };\n  }, [chat, chatTitle, info, lang]);\n\n  const isBoostDisabled = !info?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== info?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isBoosted && canBoostMore ? 'BoostingBoostAgain' : 'ChannelBoost.BoostChannel')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={boostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {boost?.cooldownUntil && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const chat = info && selectChat(global, info?.chatId);\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, info.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"qcaMioaPQuA3J2DdyYu6\",\"modal\":\"Y9MSWZPXcoywEGAVkIGe\",\"loading\":\"rTu4qT5HMT5xEA0iBnQZ\",\"description\":\"kR5ezaKOBrU14CVmMWM0\",\"chip\":\"bwLqkQdHNWlFwAxcZAQs\",\"replaceModal\":\"YoELl5NSlfGHhh0TV09C\",\"replaceModalContent\":\"l39rkylGwQCNJD7zFGNp\",\"avatarContainer\":\"tfMx99CifV4hYxg9MEqE\",\"arrow\":\"f_dXofOOgJ37seFwxD55\",\"boostedWrapper\":\"Ylfk1xu6gEHr_yzPetrS\",\"boostedMark\":\"WDTDg5KQT796SQTEgPpx\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ZUq4brODsgpvaUsllahW\",\"clickable\":\"JJOxaAdgPS8KouI7ApuA\",\"title\":\"IHmQ6rmwk9lGyiwoN35E\",\"table\":\"fjpN5AKMBNcmc1B8ZMV1\",\"chat-item\":\"nAG11HvcI33XcEk6iXcE\",\"chatItem\":\"nAG11HvcI33XcEk6iXcE\",\"logo\":\"bEdCD7KzsBds3j71NvqQ\",\"centered\":\"uLJj2XtrzUYpv4M5h2yc\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport LinkField from '../../common/LinkField';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  modal: TabState['giftCodeModal'];\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n}: OwnProps) => {\n  const {\n    closeGiftCodeModal, openChat, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    closeGiftCodeModal();\n  });\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  function renderContent() {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    return (\n      <>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n        <table className={styles.table}>\n          <tr>\n            <td className={styles.title}>{lang('BoostingFrom')}</td>\n            <td>\n              {info.fromId ? (\n                <PickerSelectedItem\n                  peerId={info.fromId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.fromId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingTo')}\n            </td>\n            <td>\n              {info.toId ? (\n                <PickerSelectedItem\n                  peerId={info.toId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.toId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingGift')}\n            </td>\n            <td>\n              {lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingReason')}\n            </td>\n            <td className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n              {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n                : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingDate')}\n            </td>\n            <td>\n              {formatDateTimeToString(info.date * 1000, lang.code, true)}\n            </td>\n          </tr>\n        </table>\n        <span className={styles.centered}>\n          {renderText(\n            info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n              : lang('BoostingSendLinkToAnyone'),\n            ['simple_markdown'],\n          )}\n        </span>\n        <Button onClick={handleButtonClick}>\n          {canUse ? lang('BoostingUseLink') : lang('Close')}\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      isSlim\n      title={lang('lng_gift_link_title')}\n      contentClassName={styles.content}\n      onClose={closeGiftCodeModal}\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(GiftCodeModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionUniqueKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"syvgWO0b6lIEPd3iu1TA\",\"list-item\":\"_nKqEo7SgYwpaclSSCIx\",\"listItem\":\"_nKqEo7SgYwpaclSSCIx\",\"title\":\"R7LNh8TMqiktRuTuESsf\",\"subtitle\":\"so4259O2hcdGOxENXdqc\",\"languages\":\"DiSTH_4CZnPK8Dh8Tpfq\"};","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openChat } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      openChat({ id: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport {\n  filterUsersByName,\n  sortChatIds,\n} from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  localContactIds,\n  localChatIds,\n  localUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\",\"subtitle\":\"t3PK9_nPdL12eMsiMNcM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^\\D([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length === 0 || (\n    username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username)\n  );\n}\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({})}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyBio?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyBio,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyBio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyBio: privacy.bio,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n    ];\n    if (hasNobody) {\n      options.push({ value: 'nobody', label: lang('P2PNobody') });\n    }\n    return options;\n  }, [lang, screen]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[]) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return lang('EditAdminAddUsers');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {(primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { filterChatsByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) setNewSelectedContactIds(selectedContactIds);\n  }, [isActive, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => chatId !== currentUserId);\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || screen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || screen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name=\"zoomFade\"\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\nimport { sendScreenName } from '../../util/tlCustomFunction';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const backHandler = () => {\n    sendScreenName('tl_navigation_mainScreen');\n    getGlobal().isArchivePrevious = false;\n    onReset();\n  };\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={backHandler}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n              <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {canShowReactionsCount && message.reactors?.count ? (\n                  canShowSeenBy && seenByDatesCount\n                    ? lang(\n                      'Chat.OutgoingContextMixedReactionCount',\n                      [message.reactors.count, seenByDatesCount],\n                    )\n                    : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                ) : (\n                  seenByDatesCount === 1 && seenByRecentPeers\n                    ? renderText(\n                      isUserId(seenByRecentPeers[0].id)\n                        ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                        : (seenByRecentPeers[0] as ApiChat).title,\n                    ) : (\n                      seenByDatesCount\n                        ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                        : lang('Conversation.ContextMenuNoViews')\n                    )\n                )}\n              </span>\n            </span>\n            <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage, ApiReaction, ApiStickerSet, ApiStickerSetInfo, ApiThreadInfo,\n} from '../../../api/types';\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageLink,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  messageLink?: string;\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  messageLink,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openChat,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({ replyToMsgId: message.id });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openChat({\n      id: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(messageLink!);\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n    const messageLink = selectMessageLink(global, message.chatId, threadId, message.id);\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      messageLink,\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isComments) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openChatWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openChatWithInfo({ id: chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    openBoostStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../api/types';\n\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getStoryKey, isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuHidden\":\"_GhqQu5bWnxjhW_weHZe\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"storyMenu\":\"nwZabdh1rB72Eb1x64Og\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseMessageInput';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(index === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_ELECTRON_BUILD } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON_BUILD ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={isOpen ? 'CustomSendMenu with-menu-transitions' : 'CustomSendMenuHidden'}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport {\n  selectChat,\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectUser,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      let senderPeer = message.senderId\n        ? selectUser(global, message.senderId) || selectChat(global, message.senderId)\n        : undefined;\n\n      if (!senderPeer && message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        const originalSender = isChannelPost && fromChatId ? selectChat(global, fromChatId) : undefined;\n        if (originalSender) senderPeer = originalSender;\n      }\n\n      if (!senderPeer) {\n        return undefined;\n      }\n\n      return {\n        message,\n        senderPeer: senderPeer!,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer: ApiPeer;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={senderPeer} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isComments);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName('media-preview__image', isRoundVideo && 'round')}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  ApiMessage,\n  StatisticsGraph,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n} from '../../../api/types';\n\nimport { selectChat, selectChatFullInfo, selectStatistics } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => getMainUsername(data.chat), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessagePublicForward, ApiMessageStatistics, StatisticsGraph } from '../../../api/types';\n\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"general\":\"CSjgq5gkTxM3iZQ9oJ9b\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postStories\"\n                checked={Boolean(permissions.postStories)}\n                label={lang('EditAdminPostStories')}\n                blocking\n                disabled={getControlIsDisabled('postStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editStories\"\n                checked={Boolean(permissions.editStories)}\n                label={lang('EditAdminEditStories')}\n                blocking\n                disabled={getControlIsDisabled('editStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"deleteStories\"\n                checked={Boolean(permissions.deleteStories)}\n                label={lang('EditAdminDeleteStories')}\n                blocking\n                disabled={getControlIsDisabled('deleteStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, sortChatIds, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiChat, ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n    } = selectTabState(global).payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","message","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","_ref","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","length","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","index","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","square","VideoPlayerControls","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","content","action","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","getMediaId","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","isAvatar","sender","selectPeer","selectSender","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","peer","formatMediaDateTime","date","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","currentUserId","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","user","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","openMediaViewer","openForwardMenu","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","i","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","peerId","MediaViewerSlides","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","tabState","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryPinned","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","OVERFLOW_THRESHOLD_PX","isExpanded","onExpand","onFold","contentRef","showMoreButtonRef","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","button","offsetWidth","setProperty","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","areViewsExpired","openStoryViewModal","sendStoryReaction","viewsCount","reactionsCount","isOut","sentReaction","isChannel","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","Icon","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","isPrivateStories","isArchivedStories","appConfig","viewModal","isPrivacyModalOpen","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","orderedIds","pinnedIds","archiveIds","selectPeerStories","shouldForcePause","reactionPicker","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isSingleStory","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openChat","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","canPinToProfile","useCurrentOrPrev","canUnpinFromProfile","canCopyLink","usernames","canShare","canPlayStory","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","onMouseDown","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","isPreload","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleVideoStoryTimeUpdate","handleOpenChat","handleOpenPrevStory","handleOpenNextStory","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","renderStoriesTabs","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","onPlaying","MediaAreaOverlay","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","peerStories","openStoryViewer","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","withStory","storyViewerMode","ANIMATION_DURATION_MS","IS_SAFARI","IS_FIREFOX","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","archived","active","peerIds","areStoriesHidden","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","animationDuration","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","timeoutId","timeOutId","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","buildStyle","Story","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","noStatusOrTyping","status","formatDateAtTime","statusIcon","viewsById","nextOffset","isLoading","closeStoryViewModal","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViewIds","values","sort","a","b","prepareComparator","view","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","StoryView","Array","_","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","chatsById","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","GroupChatInfo","chats","listIds","orderedPinnedIds","activeListIds","archivedListIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isManyMessages","isStory","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleSendLink","handleDismiss","renderingUrl","geoPoint","closeMapModal","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","urlAuth","currentUserName","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","webApp","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","ignoreEventsRef","lastFrameSizeRef","handleLoad","once","contentWindow","JSON","stringify","isNonStable","eventType","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","req_id","slug","linkUrl","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","shortName","isInactive","isForSideMenu","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","l","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","DPR","currentUser","circleRef","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","LIMITS_DESCRIPTIONS","promo","onClickSubscribe","isPremium","limits","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","options","find","months","scrollLeft","scrollLeftOriginal","toString","reverseIndex","prevElement","reverseElement","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","SliderDots","formatCurrency","amount","currency","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isClosing","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","premiumPromoOrder","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","handleClickWithStartParam","showConfetti","prevIsPremium","filteredSections","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","isClosed","PremiumFeatureModal","isBig","PremiumLogo","renderTextWithEntities","statusText","entities","statusEntities","renderFooterText","fullMonthlyAmount","perMonth","discount","handleChange","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","closeGiftPremiumModal","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","cheaperGift","gift","selectedGift","botUrl","handlePremiumClick","GiftOption","parts","match","Link","isPrimary","renderPremiumFeaturesLink","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","isLottie","isVideos","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","accessHash","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","setEmojiStatus","menuRef","isCustomEmoji","hasEffect","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","available","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","reactions","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","Set","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionUniqueKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","topReactionsSlice","TOP_SYMBOL_SET_ID","cleanRecentReactions","some","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","boostedChat","applyBoost","closeBoostModal","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","level","currentLevelBoosts","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","getBoostProgressInfo","hasBoost","isJustUpgraded","moreBoosts","currentStoriesPerDay","nextLevelStoriesPerDay","modalTitle","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","LinkField","PickerSelectedItem","isFromGiveaway","formatDateTimeToString","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","SafeLink","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","memberIds","leftId","rightId","handleCloseSeenByModal","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","secondaryIcon","narrow","highlight","createMapStateToProps","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","activeDownloads","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","localContactIds","globalResults","localResults","globalChatIds","globalUserIds","localChatIds","localUserIds","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","foundContactIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","Links","Files","Music","Voice","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","handleItemClick","newSelectedIds","splice","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","typeKey","isMinimized","canClose","withChatType","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","isChatList","newFilter","handleSelectedIdsChange","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","SettingsFoldersChatsPicker","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","LOCAL_TGS_URLS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","subtitle","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","prevUrl","handleClickDisabled","isUserBot","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","isRoundCheckbox","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","country","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","iconClassName","sessionHashes","sessionHash","RadioGroup","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","avatar","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","newValue","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","displayedOptions","setDisplayedOptions","subLabel","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","copyTextToClipboard","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","USERNAME_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","test","handleUsernameChange","newUsername","isValid","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","nonInteractive","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyForwarding","PrivacyVoiceMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","sessionCount","loadProfilePhotos","openSupportChat","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","langName","PremiumIcon","withGradient","big","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyBio","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","allowDisabledClick","blockedIds","userSearch","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","setPrivacyVisibility","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","getCurrentPrivacySettings","isAllowList","setPrivacySettings","selectedContactIds","updatedIds","config","selectedReaction","defaultReaction","setDefaultReaction","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","isFrom","currentKey","SettingsHeader","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","statusesById","userStatusesById","openNewContactDialog","filteredIds","sortUserIds","isSearching","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","backHandler","sendScreenName","isArchivePrevious","onTransitionEnd","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","getCopyLabel","hasSelection","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","MenuSeparator","inline","withWrap","sponsorInfo","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","noOptions","isOwn","isOwnMessage","isScheduled","isMessageLocal","isChatGroup","membersCount","isAction","isActionMessage","chatFullInfo","selectChatFullInfo","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","messageLink","selectMessageLink","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","canScheduleUntilOnline","selectCanScheduleUntilOnline","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","handleDelete","handleReport","closeMenu","closePinModal","handleReply","replyToMsgId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","PinMessageModal","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isComments","originChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","isTopic","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openGiftPremiumModal","openChatWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","DeleteChatModal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","getDayStartAt","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","customEmojiMessage","parseMessageInput","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","ReactionPickerLimited","div","BLUR_CANVAS_SIZE","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","questionTrimmed","substring","optionsTrimmed","o","summary","answers","correct","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","hidden","noReplaceNewlines","native","IS_ELECTRON_BUILD","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","handleMouseDown","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","addedPremiumStickers","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","EmojiPicker","StickerPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","botCommand","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","BotCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","senderPeer","forwardInfo","isChannelPost","originalSender","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","toggleMessageStatistics","views","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentTopMessages","StatisticsRecentMessage","openChatByUsername","GRAPH_TITLES","viewsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","publicForwards","publicForwardsData","StatisticsPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","CHANNEL_TITLE_EMPTY","management","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","ManagementProgress","adminsCount","adminMembersById","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","isChatPublic","formatInteger","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","noAdmins","toggleParticipantsHidden","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","noScrollRestore","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","uploadContactProfilePhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","isSuggestRef","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","handleSelectAvatar","isSuggest","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","iso2","defaultName","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","main","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","isRecurring","getIsSubmitDisabled","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}